!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	0.0.0	/3fdf28bc/
$(VERBOSE).SILENT	../oatpp/build/Makefile	/^$(VERBOSE).SILENT:$/;"	t
$(VERBOSE).SILENT	../oatpp/build/src/Makefile	/^$(VERBOSE).SILENT:$/;"	t
$(VERBOSE).SILENT	../oatpp/build/test/Makefile	/^$(VERBOSE).SILENT:$/;"	t
ACCEPT	../oatpp/src/oatpp/web/protocol/http/Http.cpp	/^const char* const Header::ACCEPT = "Accept";$/;"	m	class:oatpp::web::protocol::http::Header	typeref:typename:const char * const
ACCEPT	../oatpp/src/oatpp/web/protocol/http/Http.hpp	/^  static const char* const ACCEPT;              \/\/ "Accept"$/;"	m	class:oatpp::web::protocol::http::Header	typeref:typename:const char * const
ALPHABET_BASE64	../oatpp/src/oatpp/encoding/Base64.cpp	/^const char* const Base64::ALPHABET_BASE64 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxy/;"	m	class:oatpp::encoding::Base64	typeref:typename:const char * const
ALPHABET_BASE64	../oatpp/src/oatpp/encoding/Base64.hpp	/^  static const char* const ALPHABET_BASE64;$/;"	m	class:oatpp::encoding::Base64	typeref:typename:const char * const
ALPHABET_BASE64_AUXILIARY_CHARS	../oatpp/src/oatpp/encoding/Base64.cpp	/^const char* const Base64::ALPHABET_BASE64_AUXILIARY_CHARS = "+\/=";$/;"	m	class:oatpp::encoding::Base64	typeref:typename:const char * const
ALPHABET_BASE64_AUXILIARY_CHARS	../oatpp/src/oatpp/encoding/Base64.hpp	/^  static const char* const ALPHABET_BASE64_AUXILIARY_CHARS;$/;"	m	class:oatpp::encoding::Base64	typeref:typename:const char * const
ALPHABET_BASE64_URL	../oatpp/src/oatpp/encoding/Base64.cpp	/^const char* const Base64::ALPHABET_BASE64_URL = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstu/;"	m	class:oatpp::encoding::Base64	typeref:typename:const char * const
ALPHABET_BASE64_URL	../oatpp/src/oatpp/encoding/Base64.hpp	/^  static const char* const ALPHABET_BASE64_URL;$/;"	m	class:oatpp::encoding::Base64	typeref:typename:const char * const
ALPHABET_BASE64_URL_AUXILIARY_CHARS	../oatpp/src/oatpp/encoding/Base64.cpp	/^const char* const Base64::ALPHABET_BASE64_URL_AUXILIARY_CHARS = "-_=";$/;"	m	class:oatpp::encoding::Base64	typeref:typename:const char * const
ALPHABET_BASE64_URL_AUXILIARY_CHARS	../oatpp/src/oatpp/encoding/Base64.hpp	/^  static const char* const ALPHABET_BASE64_URL_AUXILIARY_CHARS;$/;"	m	class:oatpp::encoding::Base64	typeref:typename:const char * const
ALPHABET_BASE64_URL_SAFE	../oatpp/src/oatpp/encoding/Base64.cpp	/^const char* const Base64::ALPHABET_BASE64_URL_SAFE = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnop/;"	m	class:oatpp::encoding::Base64	typeref:typename:const char * const
ALPHABET_BASE64_URL_SAFE	../oatpp/src/oatpp/encoding/Base64.hpp	/^  static const char* const ALPHABET_BASE64_URL_SAFE;$/;"	m	class:oatpp::encoding::Base64	typeref:typename:const char * const
ALPHABET_BASE64_URL_SAFE_AUXILIARY_CHARS	../oatpp/src/oatpp/encoding/Base64.cpp	/^const char* const Base64::ALPHABET_BASE64_URL_SAFE_AUXILIARY_CHARS = "._-";$/;"	m	class:oatpp::encoding::Base64	typeref:typename:const char * const
ALPHABET_BASE64_URL_SAFE_AUXILIARY_CHARS	../oatpp/src/oatpp/encoding/Base64.hpp	/^  static const char* const ALPHABET_BASE64_URL_SAFE_AUXILIARY_CHARS;$/;"	m	class:oatpp::encoding::Base64	typeref:typename:const char * const
API_CALL	../oatpp/src/oatpp/codegen/codegen_define_ApiClient_.hpp	/^#define API_CALL(/;"	d
API_CALL_ASYNC	../oatpp/src/oatpp/codegen/codegen_define_ApiClient_.hpp	/^#define API_CALL_ASYNC(/;"	d
API_CLIENT_INIT	../oatpp/src/oatpp/codegen/codegen_define_ApiClient_.hpp	/^#define API_CLIENT_INIT(/;"	d
ARCHITECTURE_ID	../oatpp/build/CMakeFiles/3.14.5/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#   define ARCHITECTURE_ID /;"	d	file:
ARCHITECTURE_ID	../oatpp/build/CMakeFiles/3.14.5/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#  define ARCHITECTURE_ID /;"	d	file:
ARCHITECTURE_ID	../oatpp/build/CMakeFiles/3.14.5/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#  define ARCHITECTURE_ID$/;"	d	file:
AUTHORIZATION	../oatpp/src/oatpp/web/protocol/http/Http.cpp	/^const char* const Header::AUTHORIZATION = "Authorization";$/;"	m	class:oatpp::web::protocol::http::Header	typeref:typename:const char * const
AUTHORIZATION	../oatpp/src/oatpp/web/protocol/http/Http.hpp	/^  static const char* const AUTHORIZATION;       \/\/ "Authorization"$/;"	m	class:oatpp::web::protocol::http::Header	typeref:typename:const char * const
AUTO_VALUE	../oatpp/CMakeLists.txt	/^set(AUTO_VALUE AUTO)$/;"	v
A_D	../oatpp/src/oatpp/encoding/Hex.cpp	/^const v_char8 Hex::A_D[] = {'0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'A', 'B', 'C', 'D'/;"	m	class:oatpp::encoding::Hex	typeref:typename:const v_char8[]
A_D	../oatpp/src/oatpp/encoding/Hex.hpp	/^  static const v_char8 A_D[];$/;"	m	class:oatpp::encoding::Hex	typeref:typename:const v_char8[]
A_W16	../oatpp/src/oatpp/encoding/Hex.hpp	/^  static const v_word16 A_W16[];$/;"	m	class:oatpp::encoding::Hex	typeref:typename:const v_word16[]
AbstractCoroutine	../oatpp/src/oatpp/core/async/Coroutine.cpp	/^AbstractCoroutine::AbstractCoroutine()$/;"	f	class:oatpp::async::AbstractCoroutine
AbstractCoroutine	../oatpp/src/oatpp/core/async/Coroutine.hpp	/^class AbstractCoroutine : public oatpp::base::Countable {$/;"	c	namespace:oatpp::async
AbstractCoroutineWithResult	../oatpp/src/oatpp/core/async/Coroutine.hpp	/^class AbstractCoroutineWithResult : public AbstractCoroutine {$/;"	c	namespace:oatpp::async
AbstractFieldsMap	../oatpp/src/oatpp/parser/json/mapping/Serializer.hpp	/^  typedef oatpp::data::mapping::type::ListMap<String, AbstractObjectWrapper> AbstractFieldsMap;$/;"	t	class:oatpp::parser::json::mapping::Serializer	typeref:typename:oatpp::data::mapping::type::ListMap<String,AbstractObjectWrapper>
AbstractList	../oatpp/src/oatpp/core/data/mapping/type/List.hpp	/^  class AbstractList {$/;"	c	namespace:oatpp::data::mapping::type::__class
AbstractList	../oatpp/src/oatpp/parser/json/mapping/Deserializer.hpp	/^  typedef oatpp::data::mapping::type::List<AbstractObjectWrapper> AbstractList;$/;"	t	class:oatpp::parser::json::mapping::Deserializer	typeref:typename:oatpp::data::mapping::type::List<AbstractObjectWrapper>
AbstractList	../oatpp/src/oatpp/parser/json/mapping/Serializer.hpp	/^  typedef oatpp::data::mapping::type::List<AbstractObjectWrapper> AbstractList;$/;"	t	class:oatpp::parser::json::mapping::Serializer	typeref:typename:oatpp::data::mapping::type::List<AbstractObjectWrapper>
AbstractListMap	../oatpp/src/oatpp/core/data/mapping/type/ListMap.hpp	/^  class AbstractListMap {$/;"	c	namespace:oatpp::data::mapping::type::__class
AbstractListMap	../oatpp/src/oatpp/parser/json/mapping/Deserializer.hpp	/^  typedef oatpp::data::mapping::type::ListMap<String, AbstractObjectWrapper> AbstractListMap;$/;"	t	class:oatpp::parser::json::mapping::Deserializer	typeref:typename:oatpp::data::mapping::type::ListMap<String,AbstractObjectWrapper>
AbstractObject	../oatpp/src/oatpp/core/data/mapping/type/Object.hpp	/^  class AbstractObject {$/;"	c	namespace:oatpp::data::mapping::type::__class
AbstractObjectWrapper	../oatpp/src/oatpp/core/data/mapping/type/Type.hpp	/^typedef PolymorphicWrapper<oatpp::base::Countable> AbstractObjectWrapper;$/;"	t	namespace:oatpp::data::mapping::type	typeref:typename:PolymorphicWrapper<oatpp::base::Countable>
AbstractObjectWrapper	../oatpp/src/oatpp/parser/json/mapping/Deserializer.hpp	/^  typedef oatpp::data::mapping::type::AbstractObjectWrapper AbstractObjectWrapper;$/;"	t	class:oatpp::parser::json::mapping::Deserializer	typeref:typename:oatpp::data::mapping::type::AbstractObjectWrapper
AbstractObjectWrapper	../oatpp/src/oatpp/parser/json/mapping/Serializer.hpp	/^  typedef oatpp::data::mapping::type::AbstractObjectWrapper AbstractObjectWrapper;$/;"	t	class:oatpp::parser::json::mapping::Serializer	typeref:typename:oatpp::data::mapping::type::AbstractObjectWrapper
Action	../oatpp/src/oatpp/core/async/Coroutine.cpp	/^Action::Action(AbstractCoroutine* coroutine)$/;"	f	class:oatpp::async::Action
Action	../oatpp/src/oatpp/core/async/Coroutine.cpp	/^Action::Action(Action&& other)$/;"	f	class:oatpp::async::Action
Action	../oatpp/src/oatpp/core/async/Coroutine.cpp	/^Action::Action(FunctionPtr functionPtr)$/;"	f	class:oatpp::async::Action
Action	../oatpp/src/oatpp/core/async/Coroutine.cpp	/^Action::Action(v_int32 type)$/;"	f	class:oatpp::async::Action
Action	../oatpp/src/oatpp/core/async/Coroutine.hpp	/^  typedef oatpp::async::Action Action;$/;"	t	class:oatpp::async::AbstractCoroutine	typeref:typename:oatpp::async::Action
Action	../oatpp/src/oatpp/core/async/Coroutine.hpp	/^class Action {$/;"	c	namespace:oatpp::async
Action	../oatpp/src/oatpp/network/ConnectionProvider.hpp	/^  typedef oatpp::async::Action Action;$/;"	t	class:oatpp::network::ConnectionProvider	typeref:typename:oatpp::async::Action
Action	../oatpp/src/oatpp/web/client/RequestExecutor.hpp	/^  typedef oatpp::async::Action Action;$/;"	t	class:oatpp::web::client::RequestExecutor	typeref:typename:oatpp::async::Action
Action	../oatpp/src/oatpp/web/protocol/http/incoming/RequestHeadersReader.hpp	/^  typedef oatpp::async::Action Action;$/;"	t	class:oatpp::web::protocol::http::incoming::RequestHeadersReader	typeref:typename:oatpp::async::Action
Action	../oatpp/src/oatpp/web/protocol/http/incoming/ResponseHeadersReader.hpp	/^  typedef oatpp::async::Action Action;$/;"	t	class:oatpp::web::protocol::http::incoming::ResponseHeadersReader	typeref:typename:oatpp::async::Action
AllocationExtras	../oatpp/src/oatpp/core/base/memory/Allocator.hpp	/^  AllocationExtras(v_int32 pExtraWanted)$/;"	f	class:oatpp::base::memory::AllocationExtras
AllocationExtras	../oatpp/src/oatpp/core/base/memory/Allocator.hpp	/^class AllocationExtras {$/;"	c	namespace:oatpp::base::memory
AllocatorPoolInfo	../oatpp/src/oatpp/core/base/memory/Allocator.cpp	/^AllocatorPoolInfo::AllocatorPoolInfo(const char* pPoolName, v_int32 pPoolChunkSize)$/;"	f	class:oatpp::base::memory::AllocatorPoolInfo
AllocatorPoolInfo	../oatpp/src/oatpp/core/base/memory/Allocator.hpp	/^class AllocatorPoolInfo {$/;"	c	namespace:oatpp::base::memory
ApiClient	../oatpp/src/oatpp/web/client/ApiClient.hpp	/^  ApiClient(const std::shared_ptr<RequestExecutor>& requestExecutor,$/;"	f	class:oatpp::web::client::ApiClient
ApiClient	../oatpp/src/oatpp/web/client/ApiClient.hpp	/^class ApiClient : public oatpp::base::Countable {$/;"	c	namespace:oatpp::web::client
ApiController	../oatpp/src/oatpp-test/web/ClientServerTestRunner.hpp	/^  typedef oatpp::web::server::api::ApiController ApiController;$/;"	t	class:oatpp::test::web::ClientServerTestRunner	typeref:typename:oatpp::web::server::api::ApiController
ApiController	../oatpp/src/oatpp/web/server/api/ApiController.hpp	/^  ApiController(const std::shared_ptr<oatpp::data::mapping::ObjectMapper>& defaultObjectMapper)$/;"	f	class:oatpp::web::server::api::ApiController
ApiController	../oatpp/src/oatpp/web/server/api/ApiController.hpp	/^class ApiController : public oatpp::base::Countable {$/;"	c	namespace:oatpp::web::server::api
ApiControllerTest	../oatpp/test/oatpp/web/server/api/ApiControllerTest.hpp	/^  ApiControllerTest():UnitTest("TEST[web::server::api::ApiControllerTest]"){}$/;"	f	class:oatpp::test::web::server::api::ApiControllerTest
ApiControllerTest	../oatpp/test/oatpp/web/server/api/ApiControllerTest.hpp	/^class ApiControllerTest : public UnitTest {$/;"	c	namespace:oatpp::test::web::server::api
AppComponent	src/AppComponent.hpp	/^class AppComponent {$/;"	c
AppComponent_hpp	src/AppComponent.hpp	/^#define AppComponent_hpp$/;"	d
Async API overview	../oatpp/README.md	/^## Async API overview$/;"	s
AsyncCallback	../oatpp/src/oatpp/network/ConnectionProvider.hpp	/^  typedef oatpp::async::Action (oatpp::async::AbstractCoroutine::*AsyncCallback)(const std::shar/;"	t	class:oatpp::network::ConnectionProvider	typeref:typename:oatpp::async::Action (oatpp::async::AbstractCoroutine::*)(const std::shared_ptr<IOStream> &)
AsyncCallback	../oatpp/src/oatpp/web/client/ApiClient.hpp	/^  typedef RequestExecutor::AsyncCallback AsyncCallback;$/;"	t	class:oatpp::web::client::ApiClient	typeref:typename:RequestExecutor::AsyncCallback
AsyncCallback	../oatpp/src/oatpp/web/client/RequestExecutor.hpp	/^  typedef Action (oatpp::async::AbstractCoroutine::*AsyncCallback)(const std::shared_ptr<Respons/;"	t	class:oatpp::web::client::RequestExecutor	typeref:typename:Action (oatpp::async::AbstractCoroutine::*)(const std::shared_ptr<Response> &)
AsyncConnectionCallback	../oatpp/src/oatpp/web/client/RequestExecutor.hpp	/^  typedef Action (oatpp::async::AbstractCoroutine::*AsyncConnectionCallback)(const std::shared_p/;"	t	class:oatpp::web::client::RequestExecutor	typeref:typename:Action (oatpp::async::AbstractCoroutine::*)(const std::shared_ptr<ConnectionHandle> &)
AsyncHttpConnectionHandler	../oatpp/src/oatpp/web/server/AsyncHttpConnectionHandler.cpp	/^AsyncHttpConnectionHandler::AsyncHttpConnectionHandler(const std::shared_ptr<HttpRouter>& router/;"	f	class:oatpp::web::server::AsyncHttpConnectionHandler
AsyncHttpConnectionHandler	../oatpp/src/oatpp/web/server/AsyncHttpConnectionHandler.hpp	/^class AsyncHttpConnectionHandler : public base::Countable, public network::server::ConnectionHan/;"	c	namespace:oatpp::web::server
AsyncIOError	../oatpp/src/oatpp/core/data/IODefinitions.hpp	/^  AsyncIOError(const char* what, v_io_size code)$/;"	f	class:oatpp::data::AsyncIOError
AsyncIOError	../oatpp/src/oatpp/core/data/IODefinitions.hpp	/^  AsyncIOError(v_io_size code)$/;"	f	class:oatpp::data::AsyncIOError
AsyncIOError	../oatpp/src/oatpp/core/data/IODefinitions.hpp	/^class AsyncIOError : public oatpp::async::Error {$/;"	c	namespace:oatpp::data
AsyncProtocolError	../oatpp/src/oatpp/web/protocol/CommunicationError.hpp	/^  AsyncProtocolError(const Info& info, const oatpp::String& message)$/;"	f	class:oatpp::web::protocol::AsyncProtocolError
AsyncProtocolError	../oatpp/src/oatpp/web/protocol/CommunicationError.hpp	/^class AsyncProtocolError : public oatpp::data::AsyncIOError {$/;"	c	namespace:oatpp::web::protocol
AsyncTransferError	../oatpp/src/oatpp/core/data/stream/Stream.hpp	/^  AsyncTransferError(const char* what) : oatpp::async::Error(what) {}$/;"	f	class:oatpp::data::stream::AsyncTransferError
AsyncTransferError	../oatpp/src/oatpp/core/data/stream/Stream.hpp	/^class AsyncTransferError : public oatpp::async::Error {$/;"	c	namespace:oatpp::data::stream
Attribution	../oatpp/CODE_OF_CONDUCT.md	/^## Attribution$/;"	s
Authority	../oatpp/src/oatpp/network/Url.hpp	/^  struct Authority {$/;"	s	class:oatpp::network::Url
BLOCKING	../oatpp/src/oatpp/core/data/stream/Stream.hpp	/^  BLOCKING = 0,$/;"	e	enum:oatpp::data::stream::IOMode
BODY	../oatpp/src/oatpp/codegen/codegen_define_ApiClient_.hpp	/^#define BODY(/;"	d
BODY_DTO	../oatpp/src/oatpp/codegen/codegen_define_ApiClient_.hpp	/^#define BODY_DTO(/;"	d
BODY_DTO	../oatpp/src/oatpp/codegen/codegen_define_ApiController_.hpp	/^#define BODY_DTO(/;"	d
BODY_STRING	../oatpp/src/oatpp/codegen/codegen_define_ApiClient_.hpp	/^#define BODY_STRING(/;"	d
BODY_STRING	../oatpp/src/oatpp/codegen/codegen_define_ApiController_.hpp	/^#define BODY_STRING(/;"	d
BROKEN_PIPE	../oatpp/src/oatpp/core/data/IODefinitions.hpp	/^  BROKEN_PIPE = -1001,$/;"	e	enum:oatpp::data::IOError
BUFFER_SIZE	../oatpp/src/oatpp/core/data/buffer/IOBuffer.hpp	/^  static constexpr v_int32 BUFFER_SIZE = 4096;$/;"	m	class:oatpp::data::buffer::IOBuffer	typeref:typename:v_int32
BUILD_SHARED_LIBS	../oatpp/CMakeLists.txt	/^option(BUILD_SHARED_LIBS "Build shared libraries" OFF)$/;"	D
Base64	../oatpp/src/oatpp/encoding/Base64.hpp	/^class Base64 {$/;"	c	namespace:oatpp::encoding
Base64Test	../oatpp/test/oatpp/encoding/Base64Test.hpp	/^  Base64Test():UnitTest("TEST[encoding::Base64Test]"){}$/;"	f	class:oatpp::test::encoding::Base64Test
Base64Test	../oatpp/test/oatpp/encoding/Base64Test.hpp	/^class Base64Test : public UnitTest{$/;"	c	namespace:oatpp::test::encoding
BaseClass	../oatpp/test/oatpp/core/base/RegRuleTest.cpp	/^  class BaseClass : public oatpp::base::Countable {$/;"	c	namespace:oatpp::test::base::__anon40c2e60e0110	file:
Bench	../oatpp/src/oatpp/core/base/memory/MemoryPool.hpp	/^  Bench(v_int32 growSize)$/;"	f	class:oatpp::base::memory::Bench
Bench	../oatpp/src/oatpp/core/base/memory/MemoryPool.hpp	/^class Bench {$/;"	c	namespace:oatpp::base::memory
Block	../oatpp/src/oatpp/core/base/memory/MemoryPool.hpp	/^    Block(p_char8 mem, Block* pNext)$/;"	f	class:oatpp::base::memory::Bench::Block
Block	../oatpp/src/oatpp/core/base/memory/MemoryPool.hpp	/^  class Block {$/;"	c	class:oatpp::base::memory::Bench
Body	../oatpp/src/oatpp/web/client/RequestExecutor.hpp	/^  typedef oatpp::web::protocol::http::outgoing::Body Body;$/;"	t	class:oatpp::web::client::RequestExecutor	typeref:typename:oatpp::web::protocol::http::outgoing::Body
Body	../oatpp/src/oatpp/web/protocol/http/outgoing/Body.hpp	/^class Body {$/;"	c	namespace:oatpp::web::protocol::http::outgoing
BodyDecoder	../oatpp/src/oatpp/web/protocol/http/incoming/BodyDecoder.hpp	/^class BodyDecoder {$/;"	c	namespace:oatpp::web::protocol::http::incoming
BodyDecoder	../oatpp/src/oatpp/web/server/AsyncHttpConnectionHandler.hpp	/^  typedef oatpp::web::protocol::http::incoming::BodyDecoder BodyDecoder;$/;"	t	class:oatpp::web::server::AsyncHttpConnectionHandler	typeref:typename:oatpp::web::protocol::http::incoming::BodyDecoder
Boolean	../oatpp/src/oatpp/core/Types.hpp	/^  typedef oatpp::data::mapping::type::Boolean Boolean;$/;"	t	namespace:oatpp	typeref:typename:oatpp::data::mapping::type::Boolean
Boolean	../oatpp/src/oatpp/core/data/mapping/type/Object.hpp	/^  typedef oatpp::data::mapping::type::Boolean Boolean;$/;"	t	class:oatpp::data::mapping::type::Object	typeref:typename:oatpp::data::mapping::type::Boolean
Boolean	../oatpp/src/oatpp/core/data/mapping/type/Primitive.hpp	/^  class Boolean {$/;"	c	namespace:oatpp::data::mapping::type::__class
Boolean	../oatpp/src/oatpp/core/data/mapping/type/Primitive.hpp	/^typedef Primitive<bool, __class::Boolean>::ObjectWrapper Boolean;$/;"	t	namespace:oatpp::data::mapping::type	typeref:typename:Primitive<bool,__class::Boolean>::ObjectWrapper
Boolean	../oatpp/src/oatpp/parser/json/mapping/Deserializer.hpp	/^  typedef oatpp::data::mapping::type::Boolean Boolean;$/;"	t	class:oatpp::parser::json::mapping::Deserializer	typeref:typename:oatpp::data::mapping::type::Boolean
Boolean	../oatpp/src/oatpp/web/client/ApiClient.hpp	/^  typedef oatpp::data::mapping::type::Boolean Boolean;$/;"	t	class:oatpp::web::client::ApiClient	typeref:typename:oatpp::data::mapping::type::Boolean
Boolean	../oatpp/src/oatpp/web/server/api/ApiController.hpp	/^  typedef oatpp::data::mapping::type::Boolean Boolean;$/;"	t	class:oatpp::web::server::api::ApiController	typeref:typename:oatpp::data::mapping::type::Boolean
Boolean	../oatpp/test/oatpp/core/base/RegRuleTest.cpp	/^  typedef oatpp::data::mapping::type::Boolean Boolean;$/;"	t	namespace:oatpp::test::base::__anon40c2e60e0110	typeref:typename:oatpp::data::mapping::type::Boolean	file:
BranchMap	../oatpp/src/oatpp/web/server/HttpRouter.hpp	/^  typedef std::unordered_map<StringKeyLabel, std::shared_ptr<BranchRouter>> BranchMap;$/;"	t	class:oatpp::web::server::HttpRouter	typeref:typename:std::unordered_map<StringKeyLabel,std::shared_ptr<BranchRouter>>
BranchRouter	../oatpp/src/oatpp/web/server/HttpRouter.hpp	/^  typedef oatpp::web::url::mapping::Router<HttpRequestHandler> BranchRouter;$/;"	t	class:oatpp::web::server::HttpRouter	typeref:typename:oatpp::web::url::mapping::Router<HttpRequestHandler>
Buff	../oatpp/test/oatpp/core/async/LockTest.cpp	/^  Buff(oatpp::data::stream::ChunkedBuffer *buffer)$/;"	f	class:oatpp::test::async::__anonf33831840110::Buff	file:
Buff	../oatpp/test/oatpp/core/async/LockTest.cpp	/^class Buff {$/;"	c	namespace:oatpp::test::async::__anonf33831840110	file:
BufferBody	../oatpp/src/oatpp/web/protocol/http/outgoing/BufferBody.cpp	/^BufferBody::BufferBody(const oatpp::String& buffer)$/;"	f	class:oatpp::web::protocol::http::outgoing::BufferBody
BufferBody	../oatpp/src/oatpp/web/protocol/http/outgoing/BufferBody.hpp	/^class BufferBody : public oatpp::base::Countable, public Body, public std::enable_shared_from_th/;"	c	namespace:oatpp::web::protocol::http::outgoing
Build and Run	README.md	/^### Build and Run$/;"	S
CHUNK_CHUNK_SIZE	../oatpp/src/oatpp/core/data/stream/ChunkedBuffer.cpp	/^const data::v_io_size ChunkedBuffer::CHUNK_CHUNK_SIZE = 32;$/;"	m	class:oatpp::data::stream::ChunkedBuffer	typeref:typename:const data::v_io_size
CHUNK_CHUNK_SIZE	../oatpp/src/oatpp/core/data/stream/ChunkedBuffer.hpp	/^  static const data::v_io_size CHUNK_CHUNK_SIZE;$/;"	m	class:oatpp::data::stream::ChunkedBuffer	typeref:typename:const data::v_io_size
CHUNK_ENTRY_SIZE	../oatpp/src/oatpp/core/data/stream/ChunkedBuffer.cpp	/^const data::v_io_size ChunkedBuffer::CHUNK_ENTRY_SIZE =$/;"	m	class:oatpp::data::stream::ChunkedBuffer	typeref:typename:const data::v_io_size
CHUNK_ENTRY_SIZE	../oatpp/src/oatpp/core/data/stream/ChunkedBuffer.hpp	/^  static const data::v_io_size CHUNK_ENTRY_SIZE;$/;"	m	class:oatpp::data::stream::ChunkedBuffer	typeref:typename:const data::v_io_size
CHUNK_ENTRY_SIZE_INDEX_SHIFT	../oatpp/src/oatpp/core/data/stream/ChunkedBuffer.cpp	/^const data::v_io_size ChunkedBuffer::CHUNK_ENTRY_SIZE_INDEX_SHIFT = 11;$/;"	m	class:oatpp::data::stream::ChunkedBuffer	typeref:typename:const data::v_io_size
CHUNK_ENTRY_SIZE_INDEX_SHIFT	../oatpp/src/oatpp/core/data/stream/ChunkedBuffer.hpp	/^  static const data::v_io_size CHUNK_ENTRY_SIZE_INDEX_SHIFT;$/;"	m	class:oatpp::data::stream::ChunkedBuffer	typeref:typename:const data::v_io_size
CHUNK_POOL_NAME	../oatpp/src/oatpp/core/data/stream/ChunkedBuffer.cpp	/^const char* const ChunkedBuffer::CHUNK_POOL_NAME = "ChunkedBuffer_Chunk_Pool";$/;"	m	class:oatpp::data::stream::ChunkedBuffer	typeref:typename:const char * const
CHUNK_POOL_NAME	../oatpp/src/oatpp/core/data/stream/ChunkedBuffer.hpp	/^  static const char* const CHUNK_POOL_NAME;$/;"	m	class:oatpp::data::stream::ChunkedBuffer	typeref:typename:const char * const
CHUNK_SIZE	../oatpp/test/oatpp/network/virtual_/PipeTest.cpp	/^  const data::v_io_size CHUNK_SIZE = std::strlen(DATA_CHUNK);$/;"	v	namespace:oatpp::test::network::virtual_::__anon0e2557b20110	typeref:typename:const data::v_io_size
CLASS_NAME	../oatpp/src/oatpp/core/data/mapping/type/List.cpp	/^  const char* const AbstractList::CLASS_NAME = "List";$/;"	m	class:oatpp::data::mapping::type::__class::AbstractList	typeref:typename:const char * const
CLASS_NAME	../oatpp/src/oatpp/core/data/mapping/type/List.hpp	/^    static const char* const CLASS_NAME;$/;"	m	class:oatpp::data::mapping::type::__class::AbstractList	typeref:typename:const char * const
CLASS_NAME	../oatpp/src/oatpp/core/data/mapping/type/ListMap.cpp	/^  const char* const AbstractListMap::CLASS_NAME = "ListMap";$/;"	m	class:oatpp::data::mapping::type::__class::AbstractListMap	typeref:typename:const char * const
CLASS_NAME	../oatpp/src/oatpp/core/data/mapping/type/ListMap.hpp	/^    static const char* const CLASS_NAME;$/;"	m	class:oatpp::data::mapping::type::__class::AbstractListMap	typeref:typename:const char * const
CLASS_NAME	../oatpp/src/oatpp/core/data/mapping/type/Object.cpp	/^  const char* const AbstractObject::CLASS_NAME = "Object";$/;"	m	class:oatpp::data::mapping::type::__class::AbstractObject	typeref:typename:const char * const
CLASS_NAME	../oatpp/src/oatpp/core/data/mapping/type/Object.hpp	/^    static const char* const CLASS_NAME;$/;"	m	class:oatpp::data::mapping::type::__class::AbstractObject	typeref:typename:const char * const
CLASS_NAME	../oatpp/src/oatpp/core/data/mapping/type/Primitive.cpp	/^  const char* const Boolean::CLASS_NAME = "Boolean";$/;"	m	class:oatpp::data::mapping::type::__class::Boolean	typeref:typename:const char * const
CLASS_NAME	../oatpp/src/oatpp/core/data/mapping/type/Primitive.cpp	/^  const char* const Float32::CLASS_NAME = "Float32";$/;"	m	class:oatpp::data::mapping::type::__class::Float32	typeref:typename:const char * const
CLASS_NAME	../oatpp/src/oatpp/core/data/mapping/type/Primitive.cpp	/^  const char* const Float64::CLASS_NAME = "Float64";$/;"	m	class:oatpp::data::mapping::type::__class::Float64	typeref:typename:const char * const
CLASS_NAME	../oatpp/src/oatpp/core/data/mapping/type/Primitive.cpp	/^  const char* const Int16::CLASS_NAME = "Int16";$/;"	m	class:oatpp::data::mapping::type::__class::Int16	typeref:typename:const char * const
CLASS_NAME	../oatpp/src/oatpp/core/data/mapping/type/Primitive.cpp	/^  const char* const Int32::CLASS_NAME = "Int32";$/;"	m	class:oatpp::data::mapping::type::__class::Int32	typeref:typename:const char * const
CLASS_NAME	../oatpp/src/oatpp/core/data/mapping/type/Primitive.cpp	/^  const char* const Int64::CLASS_NAME = "Int64";$/;"	m	class:oatpp::data::mapping::type::__class::Int64	typeref:typename:const char * const
CLASS_NAME	../oatpp/src/oatpp/core/data/mapping/type/Primitive.cpp	/^  const char* const Int8::CLASS_NAME = "Int8";$/;"	m	class:oatpp::data::mapping::type::__class::Int8	typeref:typename:const char * const
CLASS_NAME	../oatpp/src/oatpp/core/data/mapping/type/Primitive.cpp	/^  const char* const String::CLASS_NAME = "String";$/;"	m	class:oatpp::data::mapping::type::__class::String	typeref:typename:const char * const
CLASS_NAME	../oatpp/src/oatpp/core/data/mapping/type/Primitive.hpp	/^    static const char* const CLASS_NAME;$/;"	m	class:oatpp::data::mapping::type::__class::Boolean	typeref:typename:const char * const
CLASS_NAME	../oatpp/src/oatpp/core/data/mapping/type/Primitive.hpp	/^    static const char* const CLASS_NAME;$/;"	m	class:oatpp::data::mapping::type::__class::Float32	typeref:typename:const char * const
CLASS_NAME	../oatpp/src/oatpp/core/data/mapping/type/Primitive.hpp	/^    static const char* const CLASS_NAME;$/;"	m	class:oatpp::data::mapping::type::__class::Float64	typeref:typename:const char * const
CLASS_NAME	../oatpp/src/oatpp/core/data/mapping/type/Primitive.hpp	/^    static const char* const CLASS_NAME;$/;"	m	class:oatpp::data::mapping::type::__class::Int16	typeref:typename:const char * const
CLASS_NAME	../oatpp/src/oatpp/core/data/mapping/type/Primitive.hpp	/^    static const char* const CLASS_NAME;$/;"	m	class:oatpp::data::mapping::type::__class::Int32	typeref:typename:const char * const
CLASS_NAME	../oatpp/src/oatpp/core/data/mapping/type/Primitive.hpp	/^    static const char* const CLASS_NAME;$/;"	m	class:oatpp::data::mapping::type::__class::Int64	typeref:typename:const char * const
CLASS_NAME	../oatpp/src/oatpp/core/data/mapping/type/Primitive.hpp	/^    static const char* const CLASS_NAME;$/;"	m	class:oatpp::data::mapping::type::__class::Int8	typeref:typename:const char * const
CLASS_NAME	../oatpp/src/oatpp/core/data/mapping/type/Primitive.hpp	/^    static const char* const CLASS_NAME;$/;"	m	class:oatpp::data::mapping::type::__class::String	typeref:typename:const char * const
CLASS_NAME	../oatpp/src/oatpp/core/data/mapping/type/Type.cpp	/^  const char* const Void::CLASS_NAME = "Void";$/;"	m	class:oatpp::data::mapping::type::__class::Void	typeref:typename:const char * const
CLASS_NAME	../oatpp/src/oatpp/core/data/mapping/type/Type.hpp	/^    static const char* const CLASS_NAME;$/;"	m	class:oatpp::data::mapping::type::__class::Void	typeref:typename:const char * const
CMAKE_AR	../oatpp/build/CMakeFiles/3.14.5/CMakeCXXCompiler.cmake	/^set(CMAKE_AR "\/usr\/bin\/ar")$/;"	v
CMAKE_BINARY_DIR	../oatpp/build/Makefile	/^CMAKE_BINARY_DIR = \/home\/nikon\/dvld\/oatpp\/build$/;"	m
CMAKE_BINARY_DIR	../oatpp/build/src/Makefile	/^CMAKE_BINARY_DIR = \/home\/nikon\/dvld\/oatpp\/build$/;"	m
CMAKE_BINARY_DIR	../oatpp/build/test/Makefile	/^CMAKE_BINARY_DIR = \/home\/nikon\/dvld\/oatpp\/build$/;"	m
CMAKE_CL_SHOWINCLUDES_PREFIX	../oatpp/build/CMakeFiles/3.14.5/CMakeCXXCompiler.cmake	/^  set(CMAKE_CL_SHOWINCLUDES_PREFIX "${CMAKE_CXX_CL_SHOWINCLUDES_PREFIX}")$/;"	v
CMAKE_COMMAND	../oatpp/build/Makefile	/^CMAKE_COMMAND = \/usr\/bin\/cmake$/;"	m
CMAKE_COMMAND	../oatpp/build/src/Makefile	/^CMAKE_COMMAND = \/usr\/bin\/cmake$/;"	m
CMAKE_COMMAND	../oatpp/build/test/Makefile	/^CMAKE_COMMAND = \/usr\/bin\/cmake$/;"	m
CMAKE_COMPILER_IS_CYGWIN	../oatpp/build/CMakeFiles/3.14.5/CMakeCXXCompiler.cmake	/^set(CMAKE_COMPILER_IS_CYGWIN )$/;"	v
CMAKE_COMPILER_IS_GNUCXX	../oatpp/build/CMakeFiles/3.14.5/CMakeCXXCompiler.cmake	/^set(CMAKE_COMPILER_IS_GNUCXX 1)$/;"	v
CMAKE_COMPILER_IS_MINGW	../oatpp/build/CMakeFiles/3.14.5/CMakeCXXCompiler.cmake	/^set(CMAKE_COMPILER_IS_MINGW )$/;"	v
CMAKE_CROSSCOMPILING	../oatpp/build/CMakeFiles/3.14.5/CMakeSystem.cmake	/^set(CMAKE_CROSSCOMPILING "FALSE")$/;"	v
CMAKE_CROSSCOMPILING	../oatpp/build/cmake_install.cmake	/^  set(CMAKE_CROSSCOMPILING "FALSE")$/;"	v
CMAKE_CROSSCOMPILING	../oatpp/build/src/cmake_install.cmake	/^  set(CMAKE_CROSSCOMPILING "FALSE")$/;"	v
CMAKE_CROSSCOMPILING	../oatpp/build/test/cmake_install.cmake	/^  set(CMAKE_CROSSCOMPILING "FALSE")$/;"	v
CMAKE_CXX11_COMPILE_FEATURES	../oatpp/build/CMakeFiles/3.14.5/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX11_COMPILE_FEATURES "cxx_std_11;cxx_alias_templates;cxx_alignas;cxx_alignof;cxx_att/;"	v
CMAKE_CXX14_COMPILE_FEATURES	../oatpp/build/CMakeFiles/3.14.5/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX14_COMPILE_FEATURES "cxx_std_14;cxx_aggregate_default_initializers;cxx_attribute_de/;"	v
CMAKE_CXX17_COMPILE_FEATURES	../oatpp/build/CMakeFiles/3.14.5/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX17_COMPILE_FEATURES "cxx_std_17")$/;"	v
CMAKE_CXX20_COMPILE_FEATURES	../oatpp/build/CMakeFiles/3.14.5/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX20_COMPILE_FEATURES "cxx_std_20")$/;"	v
CMAKE_CXX98_COMPILE_FEATURES	../oatpp/build/CMakeFiles/3.14.5/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX98_COMPILE_FEATURES "cxx_std_98;cxx_template_template_parameters")$/;"	v
CMAKE_CXX_ABI_COMPILED	../oatpp/build/CMakeFiles/3.14.5/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_ABI_COMPILED TRUE)$/;"	v
CMAKE_CXX_CL_SHOWINCLUDES_PREFIX	../oatpp/build/CMakeFiles/3.14.5/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_CL_SHOWINCLUDES_PREFIX "")$/;"	v
CMAKE_CXX_COMPILER	../oatpp/build/CMakeFiles/3.14.5/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_COMPILER "\/usr\/bin\/c++")$/;"	v
CMAKE_CXX_COMPILER_ABI	../oatpp/build/CMakeFiles/3.14.5/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_COMPILER_ABI "ELF")$/;"	v
CMAKE_CXX_COMPILER_AR	../oatpp/build/CMakeFiles/3.14.5/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_COMPILER_AR "\/usr\/bin\/gcc-ar")$/;"	v
CMAKE_CXX_COMPILER_ARG1	../oatpp/build/CMakeFiles/3.14.5/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_COMPILER_ARG1 "")$/;"	v
CMAKE_CXX_COMPILER_ENV_VAR	../oatpp/build/CMakeFiles/3.14.5/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_COMPILER_ENV_VAR "CXX")$/;"	v
CMAKE_CXX_COMPILER_ID	../oatpp/build/CMakeFiles/3.14.5/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_COMPILER_ID "GNU")$/;"	v
CMAKE_CXX_COMPILER_ID	../oatpp/build/src/CMakeFiles/oatpp-test.dir/DependInfo.cmake	/^set(CMAKE_CXX_COMPILER_ID "GNU")$/;"	v
CMAKE_CXX_COMPILER_ID	../oatpp/build/src/CMakeFiles/oatpp.dir/DependInfo.cmake	/^set(CMAKE_CXX_COMPILER_ID "GNU")$/;"	v
CMAKE_CXX_COMPILER_ID	../oatpp/build/test/CMakeFiles/oatppAllTests.dir/DependInfo.cmake	/^set(CMAKE_CXX_COMPILER_ID "GNU")$/;"	v
CMAKE_CXX_COMPILER_ID_RUN	../oatpp/build/CMakeFiles/3.14.5/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_COMPILER_ID_RUN 1)$/;"	v
CMAKE_CXX_COMPILER_LOADED	../oatpp/build/CMakeFiles/3.14.5/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_COMPILER_LOADED 1)$/;"	v
CMAKE_CXX_COMPILER_RANLIB	../oatpp/build/CMakeFiles/3.14.5/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_COMPILER_RANLIB "\/usr\/bin\/gcc-ranlib")$/;"	v
CMAKE_CXX_COMPILER_VERSION	../oatpp/build/CMakeFiles/3.14.5/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_COMPILER_VERSION "9.1.0")$/;"	v
CMAKE_CXX_COMPILER_VERSION_INTERNAL	../oatpp/build/CMakeFiles/3.14.5/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_COMPILER_VERSION_INTERNAL "")$/;"	v
CMAKE_CXX_COMPILER_WORKS	../oatpp/build/CMakeFiles/3.14.5/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_COMPILER_WORKS TRUE)$/;"	v
CMAKE_CXX_COMPILER_WRAPPER	../oatpp/build/CMakeFiles/3.14.5/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_COMPILER_WRAPPER "")$/;"	v
CMAKE_CXX_COMPILE_FEATURES	../oatpp/build/CMakeFiles/3.14.5/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_COMPILE_FEATURES "cxx_std_98;cxx_template_template_parameters;cxx_std_11;cxx_alias/;"	v
CMAKE_CXX_IGNORE_EXTENSIONS	../oatpp/build/CMakeFiles/3.14.5/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_IGNORE_EXTENSIONS inl;h;hpp;HPP;H;o;O;obj;OBJ;def;DEF;rc;RC)$/;"	v
CMAKE_CXX_IMPLICIT_INCLUDE_DIRECTORIES	../oatpp/build/CMakeFiles/3.14.5/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_IMPLICIT_INCLUDE_DIRECTORIES "\/usr\/include\/c++\/9.1.0;\/usr\/include\/c++\/9.1./;"	v
CMAKE_CXX_IMPLICIT_LINK_DIRECTORIES	../oatpp/build/CMakeFiles/3.14.5/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_IMPLICIT_LINK_DIRECTORIES "\/usr\/lib\/gcc\/x86_64-pc-linux-gnu\/9.1.0;\/usr\/lib;/;"	v
CMAKE_CXX_IMPLICIT_LINK_FRAMEWORK_DIRECTORIES	../oatpp/build/CMakeFiles/3.14.5/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_IMPLICIT_LINK_FRAMEWORK_DIRECTORIES "")$/;"	v
CMAKE_CXX_IMPLICIT_LINK_LIBRARIES	../oatpp/build/CMakeFiles/3.14.5/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_IMPLICIT_LINK_LIBRARIES "stdc++;m;gcc_s;gcc;c;gcc_s;gcc")$/;"	v
CMAKE_CXX_INCLUDE_REGEX_COMPLAIN	../oatpp/build/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_CXX_INCLUDE_REGEX_COMPLAIN ${CMAKE_C_INCLUDE_REGEX_COMPLAIN})$/;"	v
CMAKE_CXX_INCLUDE_REGEX_COMPLAIN	../oatpp/build/src/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_CXX_INCLUDE_REGEX_COMPLAIN ${CMAKE_C_INCLUDE_REGEX_COMPLAIN})$/;"	v
CMAKE_CXX_INCLUDE_REGEX_COMPLAIN	../oatpp/build/test/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_CXX_INCLUDE_REGEX_COMPLAIN ${CMAKE_C_INCLUDE_REGEX_COMPLAIN})$/;"	v
CMAKE_CXX_INCLUDE_REGEX_SCAN	../oatpp/build/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_CXX_INCLUDE_REGEX_SCAN ${CMAKE_C_INCLUDE_REGEX_SCAN})$/;"	v
CMAKE_CXX_INCLUDE_REGEX_SCAN	../oatpp/build/src/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_CXX_INCLUDE_REGEX_SCAN ${CMAKE_C_INCLUDE_REGEX_SCAN})$/;"	v
CMAKE_CXX_INCLUDE_REGEX_SCAN	../oatpp/build/test/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_CXX_INCLUDE_REGEX_SCAN ${CMAKE_C_INCLUDE_REGEX_SCAN})$/;"	v
CMAKE_CXX_LIBRARY_ARCHITECTURE	../oatpp/build/CMakeFiles/3.14.5/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_LIBRARY_ARCHITECTURE "")$/;"	v
CMAKE_CXX_LINKER_PREFERENCE	../oatpp/build/CMakeFiles/3.14.5/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_LINKER_PREFERENCE 30)$/;"	v
CMAKE_CXX_LINKER_PREFERENCE_PROPAGATES	../oatpp/build/CMakeFiles/3.14.5/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_LINKER_PREFERENCE_PROPAGATES 1)$/;"	v
CMAKE_CXX_PLATFORM_ID	../oatpp/build/CMakeFiles/3.14.5/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_PLATFORM_ID "Linux")$/;"	v
CMAKE_CXX_SIMULATE_ID	../oatpp/build/CMakeFiles/3.14.5/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_SIMULATE_ID "")$/;"	v
CMAKE_CXX_SIMULATE_VERSION	../oatpp/build/CMakeFiles/3.14.5/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_SIMULATE_VERSION "")$/;"	v
CMAKE_CXX_SIZEOF_DATA_PTR	../oatpp/build/CMakeFiles/3.14.5/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_SIZEOF_DATA_PTR "8")$/;"	v
CMAKE_CXX_SOURCE_FILE_EXTENSIONS	../oatpp/build/CMakeFiles/3.14.5/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_SOURCE_FILE_EXTENSIONS C;M;c++;cc;cpp;cxx;mm;CPP)$/;"	v
CMAKE_CXX_STANDARD	CMakeLists.txt	/^set(CMAKE_CXX_STANDARD 11)$/;"	v
CMAKE_CXX_STANDARD_COMPUTED_DEFAULT	../oatpp/build/CMakeFiles/3.14.5/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_STANDARD_COMPUTED_DEFAULT "14")$/;"	v
CMAKE_CXX_TARGET_INCLUDE_PATH	../oatpp/build/src/CMakeFiles/oatpp-test.dir/DependInfo.cmake	/^set(CMAKE_CXX_TARGET_INCLUDE_PATH$/;"	v
CMAKE_CXX_TARGET_INCLUDE_PATH	../oatpp/build/src/CMakeFiles/oatpp.dir/DependInfo.cmake	/^set(CMAKE_CXX_TARGET_INCLUDE_PATH$/;"	v
CMAKE_CXX_TARGET_INCLUDE_PATH	../oatpp/build/test/CMakeFiles/oatppAllTests.dir/DependInfo.cmake	/^set(CMAKE_CXX_TARGET_INCLUDE_PATH$/;"	v
CMAKE_C_INCLUDE_REGEX_COMPLAIN	../oatpp/build/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_C_INCLUDE_REGEX_COMPLAIN "^$")$/;"	v
CMAKE_C_INCLUDE_REGEX_COMPLAIN	../oatpp/build/src/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_C_INCLUDE_REGEX_COMPLAIN "^$")$/;"	v
CMAKE_C_INCLUDE_REGEX_COMPLAIN	../oatpp/build/test/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_C_INCLUDE_REGEX_COMPLAIN "^$")$/;"	v
CMAKE_C_INCLUDE_REGEX_SCAN	../oatpp/build/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_C_INCLUDE_REGEX_SCAN "^.*$")$/;"	v
CMAKE_C_INCLUDE_REGEX_SCAN	../oatpp/build/src/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_C_INCLUDE_REGEX_SCAN "^.*$")$/;"	v
CMAKE_C_INCLUDE_REGEX_SCAN	../oatpp/build/test/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_C_INCLUDE_REGEX_SCAN "^.*$")$/;"	v
CMAKE_DEPENDS_CHECK_CXX	../oatpp/build/src/CMakeFiles/oatpp-test.dir/DependInfo.cmake	/^set(CMAKE_DEPENDS_CHECK_CXX$/;"	v
CMAKE_DEPENDS_CHECK_CXX	../oatpp/build/src/CMakeFiles/oatpp.dir/DependInfo.cmake	/^set(CMAKE_DEPENDS_CHECK_CXX$/;"	v
CMAKE_DEPENDS_CHECK_CXX	../oatpp/build/test/CMakeFiles/oatppAllTests.dir/DependInfo.cmake	/^set(CMAKE_DEPENDS_CHECK_CXX$/;"	v
CMAKE_DEPENDS_GENERATOR	../oatpp/build/CMakeFiles/Makefile.cmake	/^set(CMAKE_DEPENDS_GENERATOR "Unix Makefiles")$/;"	v
CMAKE_DEPENDS_LANGUAGES	../oatpp/build/src/CMakeFiles/oatpp-test.dir/DependInfo.cmake	/^set(CMAKE_DEPENDS_LANGUAGES$/;"	v
CMAKE_DEPENDS_LANGUAGES	../oatpp/build/src/CMakeFiles/oatpp.dir/DependInfo.cmake	/^set(CMAKE_DEPENDS_LANGUAGES$/;"	v
CMAKE_DEPENDS_LANGUAGES	../oatpp/build/test/CMakeFiles/oatppAllTests.dir/DependInfo.cmake	/^set(CMAKE_DEPENDS_LANGUAGES$/;"	v
CMAKE_DEPEND_INFO_FILES	../oatpp/build/CMakeFiles/Makefile.cmake	/^set(CMAKE_DEPEND_INFO_FILES$/;"	v
CMAKE_FORCE_UNIX_PATHS	../oatpp/build/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_FORCE_UNIX_PATHS 1)$/;"	v
CMAKE_FORCE_UNIX_PATHS	../oatpp/build/src/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_FORCE_UNIX_PATHS 1)$/;"	v
CMAKE_FORCE_UNIX_PATHS	../oatpp/build/test/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_FORCE_UNIX_PATHS 1)$/;"	v
CMAKE_Fortran_TARGET_MODULE_DIR	../oatpp/build/src/CMakeFiles/oatpp-test.dir/DependInfo.cmake	/^set(CMAKE_Fortran_TARGET_MODULE_DIR "")$/;"	v
CMAKE_Fortran_TARGET_MODULE_DIR	../oatpp/build/src/CMakeFiles/oatpp.dir/DependInfo.cmake	/^set(CMAKE_Fortran_TARGET_MODULE_DIR "")$/;"	v
CMAKE_Fortran_TARGET_MODULE_DIR	../oatpp/build/test/CMakeFiles/oatppAllTests.dir/DependInfo.cmake	/^set(CMAKE_Fortran_TARGET_MODULE_DIR "")$/;"	v
CMAKE_HOST_SYSTEM	../oatpp/build/CMakeFiles/3.14.5/CMakeSystem.cmake	/^set(CMAKE_HOST_SYSTEM "Linux-4.19.56-1-MANJARO")$/;"	v
CMAKE_HOST_SYSTEM_NAME	../oatpp/build/CMakeFiles/3.14.5/CMakeSystem.cmake	/^set(CMAKE_HOST_SYSTEM_NAME "Linux")$/;"	v
CMAKE_HOST_SYSTEM_PROCESSOR	../oatpp/build/CMakeFiles/3.14.5/CMakeSystem.cmake	/^set(CMAKE_HOST_SYSTEM_PROCESSOR "x86_64")$/;"	v
CMAKE_HOST_SYSTEM_VERSION	../oatpp/build/CMakeFiles/3.14.5/CMakeSystem.cmake	/^set(CMAKE_HOST_SYSTEM_VERSION "4.19.56-1-MANJARO")$/;"	v
CMAKE_IMPORT_FILE_VERSION	../oatpp/build/src/CMakeFiles/Export/lib64/cmake/oatpp-0.19.6/oatppTargets-noconfig.cmake	/^set(CMAKE_IMPORT_FILE_VERSION 1)$/;"	v
CMAKE_IMPORT_FILE_VERSION	../oatpp/build/src/CMakeFiles/Export/lib64/cmake/oatpp-0.19.6/oatppTargets-noconfig.cmake	/^set(CMAKE_IMPORT_FILE_VERSION)$/;"	v
CMAKE_IMPORT_FILE_VERSION	../oatpp/build/src/CMakeFiles/Export/lib64/cmake/oatpp-0.19.6/oatppTargets.cmake	/^  set(CMAKE_IMPORT_FILE_VERSION)$/;"	v
CMAKE_IMPORT_FILE_VERSION	../oatpp/build/src/CMakeFiles/Export/lib64/cmake/oatpp-0.19.6/oatppTargets.cmake	/^set(CMAKE_IMPORT_FILE_VERSION 1)$/;"	v
CMAKE_IMPORT_FILE_VERSION	../oatpp/build/src/CMakeFiles/Export/lib64/cmake/oatpp-0.19.6/oatppTargets.cmake	/^set(CMAKE_IMPORT_FILE_VERSION)$/;"	v
CMAKE_INSTALL_COMPONENT	../oatpp/build/cmake_install.cmake	/^    set(CMAKE_INSTALL_COMPONENT "${COMPONENT}")$/;"	v
CMAKE_INSTALL_COMPONENT	../oatpp/build/cmake_install.cmake	/^    set(CMAKE_INSTALL_COMPONENT)$/;"	v
CMAKE_INSTALL_COMPONENT	../oatpp/build/src/cmake_install.cmake	/^    set(CMAKE_INSTALL_COMPONENT "${COMPONENT}")$/;"	v
CMAKE_INSTALL_COMPONENT	../oatpp/build/src/cmake_install.cmake	/^    set(CMAKE_INSTALL_COMPONENT)$/;"	v
CMAKE_INSTALL_COMPONENT	../oatpp/build/test/cmake_install.cmake	/^    set(CMAKE_INSTALL_COMPONENT "${COMPONENT}")$/;"	v
CMAKE_INSTALL_COMPONENT	../oatpp/build/test/cmake_install.cmake	/^    set(CMAKE_INSTALL_COMPONENT)$/;"	v
CMAKE_INSTALL_CONFIG_NAME	../oatpp/build/cmake_install.cmake	/^    set(CMAKE_INSTALL_CONFIG_NAME "")$/;"	v
CMAKE_INSTALL_CONFIG_NAME	../oatpp/build/src/cmake_install.cmake	/^    set(CMAKE_INSTALL_CONFIG_NAME "")$/;"	v
CMAKE_INSTALL_CONFIG_NAME	../oatpp/build/test/cmake_install.cmake	/^    set(CMAKE_INSTALL_CONFIG_NAME "")$/;"	v
CMAKE_INSTALL_MANIFEST	../oatpp/build/cmake_install.cmake	/^  set(CMAKE_INSTALL_MANIFEST "install_manifest.txt")$/;"	v
CMAKE_INSTALL_MANIFEST	../oatpp/build/cmake_install.cmake	/^  set(CMAKE_INSTALL_MANIFEST "install_manifest_${CMAKE_INSTALL_COMPONENT}.txt")$/;"	v
CMAKE_INSTALL_PREFIX	../oatpp/build/cmake_install.cmake	/^  set(CMAKE_INSTALL_PREFIX "\/usr\/local")$/;"	v
CMAKE_INSTALL_PREFIX	../oatpp/build/src/cmake_install.cmake	/^  set(CMAKE_INSTALL_PREFIX "\/usr\/local")$/;"	v
CMAKE_INSTALL_PREFIX	../oatpp/build/test/cmake_install.cmake	/^  set(CMAKE_INSTALL_PREFIX "\/usr\/local")$/;"	v
CMAKE_INSTALL_SO_NO_EXE	../oatpp/build/cmake_install.cmake	/^  set(CMAKE_INSTALL_SO_NO_EXE "0")$/;"	v
CMAKE_INSTALL_SO_NO_EXE	../oatpp/build/src/cmake_install.cmake	/^  set(CMAKE_INSTALL_SO_NO_EXE "0")$/;"	v
CMAKE_INSTALL_SO_NO_EXE	../oatpp/build/test/cmake_install.cmake	/^  set(CMAKE_INSTALL_SO_NO_EXE "0")$/;"	v
CMAKE_INTERNAL_PLATFORM_ABI	../oatpp/build/CMakeFiles/3.14.5/CMakeCXXCompiler.cmake	/^  set(CMAKE_INTERNAL_PLATFORM_ABI "${CMAKE_CXX_COMPILER_ABI}")$/;"	v
CMAKE_LIBRARY_ARCHITECTURE	../oatpp/build/CMakeFiles/3.14.5/CMakeCXXCompiler.cmake	/^  set(CMAKE_LIBRARY_ARCHITECTURE "")$/;"	v
CMAKE_LINKER	../oatpp/build/CMakeFiles/3.14.5/CMakeCXXCompiler.cmake	/^set(CMAKE_LINKER "\/usr\/bin\/ld")$/;"	v
CMAKE_MAKEFILE_DEPENDS	../oatpp/build/CMakeFiles/Makefile.cmake	/^set(CMAKE_MAKEFILE_DEPENDS$/;"	v
CMAKE_MAKEFILE_OUTPUTS	../oatpp/build/CMakeFiles/Makefile.cmake	/^set(CMAKE_MAKEFILE_OUTPUTS$/;"	v
CMAKE_MAKEFILE_PRODUCTS	../oatpp/build/CMakeFiles/Makefile.cmake	/^set(CMAKE_MAKEFILE_PRODUCTS$/;"	v
CMAKE_MT	../oatpp/build/CMakeFiles/3.14.5/CMakeCXXCompiler.cmake	/^set(CMAKE_MT "")$/;"	v
CMAKE_RANLIB	../oatpp/build/CMakeFiles/3.14.5/CMakeCXXCompiler.cmake	/^set(CMAKE_RANLIB "\/usr\/bin\/ranlib")$/;"	v
CMAKE_RELATIVE_PATH_TOP_BINARY	../oatpp/build/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_RELATIVE_PATH_TOP_BINARY "\/home\/nikon\/dvld\/oatpp\/build")$/;"	v
CMAKE_RELATIVE_PATH_TOP_BINARY	../oatpp/build/src/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_RELATIVE_PATH_TOP_BINARY "\/home\/nikon\/dvld\/oatpp\/build")$/;"	v
CMAKE_RELATIVE_PATH_TOP_BINARY	../oatpp/build/test/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_RELATIVE_PATH_TOP_BINARY "\/home\/nikon\/dvld\/oatpp\/build")$/;"	v
CMAKE_RELATIVE_PATH_TOP_SOURCE	../oatpp/build/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_RELATIVE_PATH_TOP_SOURCE "\/home\/nikon\/dvld\/oatpp")$/;"	v
CMAKE_RELATIVE_PATH_TOP_SOURCE	../oatpp/build/src/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_RELATIVE_PATH_TOP_SOURCE "\/home\/nikon\/dvld\/oatpp")$/;"	v
CMAKE_RELATIVE_PATH_TOP_SOURCE	../oatpp/build/test/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_RELATIVE_PATH_TOP_SOURCE "\/home\/nikon\/dvld\/oatpp")$/;"	v
CMAKE_SIZEOF_VOID_P	../oatpp/build/CMakeFiles/3.14.5/CMakeCXXCompiler.cmake	/^  set(CMAKE_SIZEOF_VOID_P "${CMAKE_CXX_SIZEOF_DATA_PTR}")$/;"	v
CMAKE_SOURCE_DIR	../oatpp/build/Makefile	/^CMAKE_SOURCE_DIR = \/home\/nikon\/dvld\/oatpp$/;"	m
CMAKE_SOURCE_DIR	../oatpp/build/src/Makefile	/^CMAKE_SOURCE_DIR = \/home\/nikon\/dvld\/oatpp$/;"	m
CMAKE_SOURCE_DIR	../oatpp/build/test/Makefile	/^CMAKE_SOURCE_DIR = \/home\/nikon\/dvld\/oatpp$/;"	m
CMAKE_SYSTEM	../oatpp/build/CMakeFiles/3.14.5/CMakeSystem.cmake	/^set(CMAKE_SYSTEM "Linux-4.19.56-1-MANJARO")$/;"	v
CMAKE_SYSTEM_LOADED	../oatpp/build/CMakeFiles/3.14.5/CMakeSystem.cmake	/^set(CMAKE_SYSTEM_LOADED 1)$/;"	v
CMAKE_SYSTEM_NAME	../oatpp/build/CMakeFiles/3.14.5/CMakeSystem.cmake	/^set(CMAKE_SYSTEM_NAME "Linux")$/;"	v
CMAKE_SYSTEM_PROCESSOR	../oatpp/build/CMakeFiles/3.14.5/CMakeSystem.cmake	/^set(CMAKE_SYSTEM_PROCESSOR "x86_64")$/;"	v
CMAKE_SYSTEM_VERSION	../oatpp/build/CMakeFiles/3.14.5/CMakeSystem.cmake	/^set(CMAKE_SYSTEM_VERSION "4.19.56-1-MANJARO")$/;"	v
CMAKE_TARGET_DEFINITIONS_CXX	../oatpp/build/src/CMakeFiles/oatpp-test.dir/DependInfo.cmake	/^set(CMAKE_TARGET_DEFINITIONS_CXX$/;"	v
CMAKE_TARGET_DEFINITIONS_CXX	../oatpp/build/src/CMakeFiles/oatpp.dir/DependInfo.cmake	/^set(CMAKE_TARGET_DEFINITIONS_CXX$/;"	v
CMAKE_TARGET_DEFINITIONS_CXX	../oatpp/build/test/CMakeFiles/oatppAllTests.dir/DependInfo.cmake	/^set(CMAKE_TARGET_DEFINITIONS_CXX$/;"	v
CMAKE_TARGET_LINKED_INFO_FILES	../oatpp/build/src/CMakeFiles/oatpp-test.dir/DependInfo.cmake	/^set(CMAKE_TARGET_LINKED_INFO_FILES$/;"	v
CMAKE_TARGET_LINKED_INFO_FILES	../oatpp/build/src/CMakeFiles/oatpp.dir/DependInfo.cmake	/^set(CMAKE_TARGET_LINKED_INFO_FILES$/;"	v
CMAKE_TARGET_LINKED_INFO_FILES	../oatpp/build/test/CMakeFiles/oatppAllTests.dir/DependInfo.cmake	/^set(CMAKE_TARGET_LINKED_INFO_FILES$/;"	v
CMAKE_THREAD_PREFER_PTHREAD	../oatpp/src/CMakeLists.txt	/^set(CMAKE_THREAD_PREFER_PTHREAD ON)$/;"	v
CODE_100	../oatpp/src/oatpp/web/protocol/http/Http.cpp	/^const Status Status::CODE_100(100, "Continue");$/;"	m	class:oatpp::web::protocol::http::Status	typeref:typename:const Status
CODE_100	../oatpp/src/oatpp/web/protocol/http/Http.hpp	/^  static const Status CODE_100;\/\/ Continue$/;"	m	class:oatpp::web::protocol::http::Status	typeref:typename:const Status
CODE_101	../oatpp/src/oatpp/web/protocol/http/Http.cpp	/^const Status Status::CODE_101(101, "Switching");$/;"	m	class:oatpp::web::protocol::http::Status	typeref:typename:const Status
CODE_101	../oatpp/src/oatpp/web/protocol/http/Http.hpp	/^  static const Status CODE_101;\/\/ Switching$/;"	m	class:oatpp::web::protocol::http::Status	typeref:typename:const Status
CODE_102	../oatpp/src/oatpp/web/protocol/http/Http.cpp	/^const Status Status::CODE_102(102, "Processing");$/;"	m	class:oatpp::web::protocol::http::Status	typeref:typename:const Status
CODE_102	../oatpp/src/oatpp/web/protocol/http/Http.hpp	/^  static const Status CODE_102;\/\/ Processing$/;"	m	class:oatpp::web::protocol::http::Status	typeref:typename:const Status
CODE_200	../oatpp/src/oatpp/web/protocol/http/Http.cpp	/^const Status Status::CODE_200(200, "OK");$/;"	m	class:oatpp::web::protocol::http::Status	typeref:typename:const Status
CODE_200	../oatpp/src/oatpp/web/protocol/http/Http.hpp	/^  static const Status CODE_200;\/\/ OK$/;"	m	class:oatpp::web::protocol::http::Status	typeref:typename:const Status
CODE_201	../oatpp/src/oatpp/web/protocol/http/Http.cpp	/^const Status Status::CODE_201(201, "Created");$/;"	m	class:oatpp::web::protocol::http::Status	typeref:typename:const Status
CODE_201	../oatpp/src/oatpp/web/protocol/http/Http.hpp	/^  static const Status CODE_201;\/\/ Created$/;"	m	class:oatpp::web::protocol::http::Status	typeref:typename:const Status
CODE_202	../oatpp/src/oatpp/web/protocol/http/Http.cpp	/^const Status Status::CODE_202(202, "Accepted");$/;"	m	class:oatpp::web::protocol::http::Status	typeref:typename:const Status
CODE_202	../oatpp/src/oatpp/web/protocol/http/Http.hpp	/^  static const Status CODE_202;\/\/ Accepted$/;"	m	class:oatpp::web::protocol::http::Status	typeref:typename:const Status
CODE_203	../oatpp/src/oatpp/web/protocol/http/Http.cpp	/^const Status Status::CODE_203(203, "Non-Authoritative Information");$/;"	m	class:oatpp::web::protocol::http::Status	typeref:typename:const Status
CODE_203	../oatpp/src/oatpp/web/protocol/http/Http.hpp	/^  static const Status CODE_203;\/\/ Non-Authoritative Information$/;"	m	class:oatpp::web::protocol::http::Status	typeref:typename:const Status
CODE_204	../oatpp/src/oatpp/web/protocol/http/Http.cpp	/^const Status Status::CODE_204(204, "No Content");$/;"	m	class:oatpp::web::protocol::http::Status	typeref:typename:const Status
CODE_204	../oatpp/src/oatpp/web/protocol/http/Http.hpp	/^  static const Status CODE_204;\/\/ No Content$/;"	m	class:oatpp::web::protocol::http::Status	typeref:typename:const Status
CODE_205	../oatpp/src/oatpp/web/protocol/http/Http.cpp	/^const Status Status::CODE_205(205, "Reset Content");$/;"	m	class:oatpp::web::protocol::http::Status	typeref:typename:const Status
CODE_205	../oatpp/src/oatpp/web/protocol/http/Http.hpp	/^  static const Status CODE_205;\/\/ Reset Content$/;"	m	class:oatpp::web::protocol::http::Status	typeref:typename:const Status
CODE_206	../oatpp/src/oatpp/web/protocol/http/Http.cpp	/^const Status Status::CODE_206(206, "Partial Content");$/;"	m	class:oatpp::web::protocol::http::Status	typeref:typename:const Status
CODE_206	../oatpp/src/oatpp/web/protocol/http/Http.hpp	/^  static const Status CODE_206;\/\/ Partial Content$/;"	m	class:oatpp::web::protocol::http::Status	typeref:typename:const Status
CODE_207	../oatpp/src/oatpp/web/protocol/http/Http.cpp	/^const Status Status::CODE_207(207, "Multi-Status");$/;"	m	class:oatpp::web::protocol::http::Status	typeref:typename:const Status
CODE_207	../oatpp/src/oatpp/web/protocol/http/Http.hpp	/^  static const Status CODE_207;\/\/ Multi-Status$/;"	m	class:oatpp::web::protocol::http::Status	typeref:typename:const Status
CODE_226	../oatpp/src/oatpp/web/protocol/http/Http.cpp	/^const Status Status::CODE_226(226, "IM Used");$/;"	m	class:oatpp::web::protocol::http::Status	typeref:typename:const Status
CODE_226	../oatpp/src/oatpp/web/protocol/http/Http.hpp	/^  static const Status CODE_226;\/\/ IM Used$/;"	m	class:oatpp::web::protocol::http::Status	typeref:typename:const Status
CODE_300	../oatpp/src/oatpp/web/protocol/http/Http.cpp	/^const Status Status::CODE_300(300, "Multiple Choices");$/;"	m	class:oatpp::web::protocol::http::Status	typeref:typename:const Status
CODE_300	../oatpp/src/oatpp/web/protocol/http/Http.hpp	/^  static const Status CODE_300;\/\/ Multiple Choices$/;"	m	class:oatpp::web::protocol::http::Status	typeref:typename:const Status
CODE_301	../oatpp/src/oatpp/web/protocol/http/Http.cpp	/^const Status Status::CODE_301(301, "Moved Permanently");$/;"	m	class:oatpp::web::protocol::http::Status	typeref:typename:const Status
CODE_301	../oatpp/src/oatpp/web/protocol/http/Http.hpp	/^  static const Status CODE_301;\/\/ Moved Permanently$/;"	m	class:oatpp::web::protocol::http::Status	typeref:typename:const Status
CODE_302	../oatpp/src/oatpp/web/protocol/http/Http.cpp	/^const Status Status::CODE_302(302, "Moved Temporarily");$/;"	m	class:oatpp::web::protocol::http::Status	typeref:typename:const Status
CODE_302	../oatpp/src/oatpp/web/protocol/http/Http.hpp	/^  static const Status CODE_302;\/\/ Moved Temporarily$/;"	m	class:oatpp::web::protocol::http::Status	typeref:typename:const Status
CODE_303	../oatpp/src/oatpp/web/protocol/http/Http.cpp	/^const Status Status::CODE_303(303, "See Other");$/;"	m	class:oatpp::web::protocol::http::Status	typeref:typename:const Status
CODE_303	../oatpp/src/oatpp/web/protocol/http/Http.hpp	/^  static const Status CODE_303;\/\/ See Other$/;"	m	class:oatpp::web::protocol::http::Status	typeref:typename:const Status
CODE_304	../oatpp/src/oatpp/web/protocol/http/Http.cpp	/^const Status Status::CODE_304(304, "Not Modified");$/;"	m	class:oatpp::web::protocol::http::Status	typeref:typename:const Status
CODE_304	../oatpp/src/oatpp/web/protocol/http/Http.hpp	/^  static const Status CODE_304;\/\/ Not Modified$/;"	m	class:oatpp::web::protocol::http::Status	typeref:typename:const Status
CODE_305	../oatpp/src/oatpp/web/protocol/http/Http.cpp	/^const Status Status::CODE_305(305, "Use Proxy");$/;"	m	class:oatpp::web::protocol::http::Status	typeref:typename:const Status
CODE_305	../oatpp/src/oatpp/web/protocol/http/Http.hpp	/^  static const Status CODE_305;\/\/ Use Proxy$/;"	m	class:oatpp::web::protocol::http::Status	typeref:typename:const Status
CODE_306	../oatpp/src/oatpp/web/protocol/http/Http.cpp	/^const Status Status::CODE_306(306, "Reserved");$/;"	m	class:oatpp::web::protocol::http::Status	typeref:typename:const Status
CODE_306	../oatpp/src/oatpp/web/protocol/http/Http.hpp	/^  static const Status CODE_306;\/\/ Reserved$/;"	m	class:oatpp::web::protocol::http::Status	typeref:typename:const Status
CODE_307	../oatpp/src/oatpp/web/protocol/http/Http.cpp	/^const Status Status::CODE_307(307, "Temporary Redirect");$/;"	m	class:oatpp::web::protocol::http::Status	typeref:typename:const Status
CODE_307	../oatpp/src/oatpp/web/protocol/http/Http.hpp	/^  static const Status CODE_307;\/\/ Temporary Redirect$/;"	m	class:oatpp::web::protocol::http::Status	typeref:typename:const Status
CODE_400	../oatpp/src/oatpp/web/protocol/http/Http.cpp	/^const Status Status::CODE_400(400, "Bad Request");$/;"	m	class:oatpp::web::protocol::http::Status	typeref:typename:const Status
CODE_400	../oatpp/src/oatpp/web/protocol/http/Http.hpp	/^  static const Status CODE_400;\/\/ Bad Request$/;"	m	class:oatpp::web::protocol::http::Status	typeref:typename:const Status
CODE_401	../oatpp/src/oatpp/web/protocol/http/Http.cpp	/^const Status Status::CODE_401(401, "Unauthorized");$/;"	m	class:oatpp::web::protocol::http::Status	typeref:typename:const Status
CODE_401	../oatpp/src/oatpp/web/protocol/http/Http.hpp	/^  static const Status CODE_401;\/\/ Unauthorized$/;"	m	class:oatpp::web::protocol::http::Status	typeref:typename:const Status
CODE_402	../oatpp/src/oatpp/web/protocol/http/Http.cpp	/^const Status Status::CODE_402(402, "Payment Required");$/;"	m	class:oatpp::web::protocol::http::Status	typeref:typename:const Status
CODE_402	../oatpp/src/oatpp/web/protocol/http/Http.hpp	/^  static const Status CODE_402;\/\/ Payment Required$/;"	m	class:oatpp::web::protocol::http::Status	typeref:typename:const Status
CODE_403	../oatpp/src/oatpp/web/protocol/http/Http.cpp	/^const Status Status::CODE_403(403, "Forbidden");$/;"	m	class:oatpp::web::protocol::http::Status	typeref:typename:const Status
CODE_403	../oatpp/src/oatpp/web/protocol/http/Http.hpp	/^  static const Status CODE_403;\/\/ Forbidden$/;"	m	class:oatpp::web::protocol::http::Status	typeref:typename:const Status
CODE_404	../oatpp/src/oatpp/web/protocol/http/Http.cpp	/^const Status Status::CODE_404(404, "Not Found");$/;"	m	class:oatpp::web::protocol::http::Status	typeref:typename:const Status
CODE_404	../oatpp/src/oatpp/web/protocol/http/Http.hpp	/^  static const Status CODE_404;\/\/ Not Found$/;"	m	class:oatpp::web::protocol::http::Status	typeref:typename:const Status
CODE_405	../oatpp/src/oatpp/web/protocol/http/Http.cpp	/^const Status Status::CODE_405(405, "Method Not Allowed");$/;"	m	class:oatpp::web::protocol::http::Status	typeref:typename:const Status
CODE_405	../oatpp/src/oatpp/web/protocol/http/Http.hpp	/^  static const Status CODE_405;\/\/ Method Not Allowed$/;"	m	class:oatpp::web::protocol::http::Status	typeref:typename:const Status
CODE_406	../oatpp/src/oatpp/web/protocol/http/Http.cpp	/^const Status Status::CODE_406(406, "Not Acceptable");$/;"	m	class:oatpp::web::protocol::http::Status	typeref:typename:const Status
CODE_406	../oatpp/src/oatpp/web/protocol/http/Http.hpp	/^  static const Status CODE_406;\/\/ Not Acceptable$/;"	m	class:oatpp::web::protocol::http::Status	typeref:typename:const Status
CODE_407	../oatpp/src/oatpp/web/protocol/http/Http.cpp	/^const Status Status::CODE_407(407, "Proxy Authentication Required");$/;"	m	class:oatpp::web::protocol::http::Status	typeref:typename:const Status
CODE_407	../oatpp/src/oatpp/web/protocol/http/Http.hpp	/^  static const Status CODE_407;\/\/ Proxy Authentication Required$/;"	m	class:oatpp::web::protocol::http::Status	typeref:typename:const Status
CODE_408	../oatpp/src/oatpp/web/protocol/http/Http.cpp	/^const Status Status::CODE_408(408, "Request Timeout");$/;"	m	class:oatpp::web::protocol::http::Status	typeref:typename:const Status
CODE_408	../oatpp/src/oatpp/web/protocol/http/Http.hpp	/^  static const Status CODE_408;\/\/ Request Timeout$/;"	m	class:oatpp::web::protocol::http::Status	typeref:typename:const Status
CODE_409	../oatpp/src/oatpp/web/protocol/http/Http.cpp	/^const Status Status::CODE_409(409, "Conflict");$/;"	m	class:oatpp::web::protocol::http::Status	typeref:typename:const Status
CODE_409	../oatpp/src/oatpp/web/protocol/http/Http.hpp	/^  static const Status CODE_409;\/\/ Conflict$/;"	m	class:oatpp::web::protocol::http::Status	typeref:typename:const Status
CODE_410	../oatpp/src/oatpp/web/protocol/http/Http.cpp	/^const Status Status::CODE_410(410, "Gone");$/;"	m	class:oatpp::web::protocol::http::Status	typeref:typename:const Status
CODE_410	../oatpp/src/oatpp/web/protocol/http/Http.hpp	/^  static const Status CODE_410;\/\/ Gone$/;"	m	class:oatpp::web::protocol::http::Status	typeref:typename:const Status
CODE_411	../oatpp/src/oatpp/web/protocol/http/Http.cpp	/^const Status Status::CODE_411(411, "Length Required");$/;"	m	class:oatpp::web::protocol::http::Status	typeref:typename:const Status
CODE_411	../oatpp/src/oatpp/web/protocol/http/Http.hpp	/^  static const Status CODE_411;\/\/ Length Required$/;"	m	class:oatpp::web::protocol::http::Status	typeref:typename:const Status
CODE_412	../oatpp/src/oatpp/web/protocol/http/Http.cpp	/^const Status Status::CODE_412(412, "Precondition Failed");$/;"	m	class:oatpp::web::protocol::http::Status	typeref:typename:const Status
CODE_412	../oatpp/src/oatpp/web/protocol/http/Http.hpp	/^  static const Status CODE_412;\/\/ Precondition Failed$/;"	m	class:oatpp::web::protocol::http::Status	typeref:typename:const Status
CODE_413	../oatpp/src/oatpp/web/protocol/http/Http.cpp	/^const Status Status::CODE_413(413, "Request Entity Too Large");$/;"	m	class:oatpp::web::protocol::http::Status	typeref:typename:const Status
CODE_413	../oatpp/src/oatpp/web/protocol/http/Http.hpp	/^  static const Status CODE_413;\/\/ Request Entity Too Large$/;"	m	class:oatpp::web::protocol::http::Status	typeref:typename:const Status
CODE_414	../oatpp/src/oatpp/web/protocol/http/Http.cpp	/^const Status Status::CODE_414(414, "Request-URI Too Large");$/;"	m	class:oatpp::web::protocol::http::Status	typeref:typename:const Status
CODE_414	../oatpp/src/oatpp/web/protocol/http/Http.hpp	/^  static const Status CODE_414;\/\/ Request-URI Too Large$/;"	m	class:oatpp::web::protocol::http::Status	typeref:typename:const Status
CODE_415	../oatpp/src/oatpp/web/protocol/http/Http.cpp	/^const Status Status::CODE_415(415, "Unsupported Media Type");$/;"	m	class:oatpp::web::protocol::http::Status	typeref:typename:const Status
CODE_415	../oatpp/src/oatpp/web/protocol/http/Http.hpp	/^  static const Status CODE_415;\/\/ Unsupported Media Type$/;"	m	class:oatpp::web::protocol::http::Status	typeref:typename:const Status
CODE_416	../oatpp/src/oatpp/web/protocol/http/Http.cpp	/^const Status Status::CODE_416(416, "Requested Range Not Satisfiable");$/;"	m	class:oatpp::web::protocol::http::Status	typeref:typename:const Status
CODE_416	../oatpp/src/oatpp/web/protocol/http/Http.hpp	/^  static const Status CODE_416;\/\/ Requested Range Not Satisfiable$/;"	m	class:oatpp::web::protocol::http::Status	typeref:typename:const Status
CODE_417	../oatpp/src/oatpp/web/protocol/http/Http.cpp	/^const Status Status::CODE_417(417, "Expectation Failed");$/;"	m	class:oatpp::web::protocol::http::Status	typeref:typename:const Status
CODE_417	../oatpp/src/oatpp/web/protocol/http/Http.hpp	/^  static const Status CODE_417;\/\/ Expectation Failed$/;"	m	class:oatpp::web::protocol::http::Status	typeref:typename:const Status
CODE_422	../oatpp/src/oatpp/web/protocol/http/Http.cpp	/^const Status Status::CODE_422(422, "Unprocessable Entity");$/;"	m	class:oatpp::web::protocol::http::Status	typeref:typename:const Status
CODE_422	../oatpp/src/oatpp/web/protocol/http/Http.hpp	/^  static const Status CODE_422;\/\/ Unprocessable Entity$/;"	m	class:oatpp::web::protocol::http::Status	typeref:typename:const Status
CODE_423	../oatpp/src/oatpp/web/protocol/http/Http.cpp	/^const Status Status::CODE_423(423, "Locked");$/;"	m	class:oatpp::web::protocol::http::Status	typeref:typename:const Status
CODE_423	../oatpp/src/oatpp/web/protocol/http/Http.hpp	/^  static const Status CODE_423;\/\/ Locked$/;"	m	class:oatpp::web::protocol::http::Status	typeref:typename:const Status
CODE_424	../oatpp/src/oatpp/web/protocol/http/Http.cpp	/^const Status Status::CODE_424(424, "Failed Dependency");$/;"	m	class:oatpp::web::protocol::http::Status	typeref:typename:const Status
CODE_424	../oatpp/src/oatpp/web/protocol/http/Http.hpp	/^  static const Status CODE_424;\/\/ Failed Dependency$/;"	m	class:oatpp::web::protocol::http::Status	typeref:typename:const Status
CODE_425	../oatpp/src/oatpp/web/protocol/http/Http.cpp	/^const Status Status::CODE_425(425, "Unordered Collection");$/;"	m	class:oatpp::web::protocol::http::Status	typeref:typename:const Status
CODE_425	../oatpp/src/oatpp/web/protocol/http/Http.hpp	/^  static const Status CODE_425;\/\/ Unordered Collection$/;"	m	class:oatpp::web::protocol::http::Status	typeref:typename:const Status
CODE_426	../oatpp/src/oatpp/web/protocol/http/Http.cpp	/^const Status Status::CODE_426(426, "Upgrade Required");$/;"	m	class:oatpp::web::protocol::http::Status	typeref:typename:const Status
CODE_426	../oatpp/src/oatpp/web/protocol/http/Http.hpp	/^  static const Status CODE_426;\/\/ Upgrade Required$/;"	m	class:oatpp::web::protocol::http::Status	typeref:typename:const Status
CODE_428	../oatpp/src/oatpp/web/protocol/http/Http.cpp	/^const Status Status::CODE_428(428, "Precondition Required");$/;"	m	class:oatpp::web::protocol::http::Status	typeref:typename:const Status
CODE_428	../oatpp/src/oatpp/web/protocol/http/Http.hpp	/^  static const Status CODE_428;\/\/ Precondition Required$/;"	m	class:oatpp::web::protocol::http::Status	typeref:typename:const Status
CODE_429	../oatpp/src/oatpp/web/protocol/http/Http.cpp	/^const Status Status::CODE_429(429, "Too Many Requests");$/;"	m	class:oatpp::web::protocol::http::Status	typeref:typename:const Status
CODE_429	../oatpp/src/oatpp/web/protocol/http/Http.hpp	/^  static const Status CODE_429;\/\/ Too Many Requests$/;"	m	class:oatpp::web::protocol::http::Status	typeref:typename:const Status
CODE_431	../oatpp/src/oatpp/web/protocol/http/Http.cpp	/^const Status Status::CODE_431(431, "Request Header Fields Too Large");$/;"	m	class:oatpp::web::protocol::http::Status	typeref:typename:const Status
CODE_431	../oatpp/src/oatpp/web/protocol/http/Http.hpp	/^  static const Status CODE_431;\/\/ Request Header Fields Too Large$/;"	m	class:oatpp::web::protocol::http::Status	typeref:typename:const Status
CODE_434	../oatpp/src/oatpp/web/protocol/http/Http.cpp	/^const Status Status::CODE_434(434, "Requested host unavailable");$/;"	m	class:oatpp::web::protocol::http::Status	typeref:typename:const Status
CODE_434	../oatpp/src/oatpp/web/protocol/http/Http.hpp	/^  static const Status CODE_434;\/\/ Requested host unavailable$/;"	m	class:oatpp::web::protocol::http::Status	typeref:typename:const Status
CODE_444	../oatpp/src/oatpp/web/protocol/http/Http.cpp	/^const Status Status::CODE_444(444, "Close connection withot sending headers");$/;"	m	class:oatpp::web::protocol::http::Status	typeref:typename:const Status
CODE_444	../oatpp/src/oatpp/web/protocol/http/Http.hpp	/^  static const Status CODE_444;\/\/ Close connection withot sending headers$/;"	m	class:oatpp::web::protocol::http::Status	typeref:typename:const Status
CODE_449	../oatpp/src/oatpp/web/protocol/http/Http.cpp	/^const Status Status::CODE_449(449, "Retry With");$/;"	m	class:oatpp::web::protocol::http::Status	typeref:typename:const Status
CODE_449	../oatpp/src/oatpp/web/protocol/http/Http.hpp	/^  static const Status CODE_449;\/\/ Retry With$/;"	m	class:oatpp::web::protocol::http::Status	typeref:typename:const Status
CODE_451	../oatpp/src/oatpp/web/protocol/http/Http.cpp	/^const Status Status::CODE_451(451, "Unavailable For Legal Reasons");$/;"	m	class:oatpp::web::protocol::http::Status	typeref:typename:const Status
CODE_451	../oatpp/src/oatpp/web/protocol/http/Http.hpp	/^  static const Status CODE_451;\/\/ Unavailable For Legal Reasons$/;"	m	class:oatpp::web::protocol::http::Status	typeref:typename:const Status
CODE_500	../oatpp/src/oatpp/web/protocol/http/Http.cpp	/^const Status Status::CODE_500(500, "Internal Server Error");$/;"	m	class:oatpp::web::protocol::http::Status	typeref:typename:const Status
CODE_500	../oatpp/src/oatpp/web/protocol/http/Http.hpp	/^  static const Status CODE_500;\/\/ Internal Server Error$/;"	m	class:oatpp::web::protocol::http::Status	typeref:typename:const Status
CODE_501	../oatpp/src/oatpp/web/protocol/http/Http.cpp	/^const Status Status::CODE_501(501, "Not Implemented");$/;"	m	class:oatpp::web::protocol::http::Status	typeref:typename:const Status
CODE_501	../oatpp/src/oatpp/web/protocol/http/Http.hpp	/^  static const Status CODE_501;\/\/ Not Implemented$/;"	m	class:oatpp::web::protocol::http::Status	typeref:typename:const Status
CODE_502	../oatpp/src/oatpp/web/protocol/http/Http.cpp	/^const Status Status::CODE_502(502, "Bad Gateway");$/;"	m	class:oatpp::web::protocol::http::Status	typeref:typename:const Status
CODE_502	../oatpp/src/oatpp/web/protocol/http/Http.hpp	/^  static const Status CODE_502;\/\/ Bad Gateway$/;"	m	class:oatpp::web::protocol::http::Status	typeref:typename:const Status
CODE_503	../oatpp/src/oatpp/web/protocol/http/Http.cpp	/^const Status Status::CODE_503(503, "Service Unavailable");$/;"	m	class:oatpp::web::protocol::http::Status	typeref:typename:const Status
CODE_503	../oatpp/src/oatpp/web/protocol/http/Http.hpp	/^  static const Status CODE_503;\/\/ Service Unavailable$/;"	m	class:oatpp::web::protocol::http::Status	typeref:typename:const Status
CODE_504	../oatpp/src/oatpp/web/protocol/http/Http.cpp	/^const Status Status::CODE_504(504, "Gateway Timeout");$/;"	m	class:oatpp::web::protocol::http::Status	typeref:typename:const Status
CODE_504	../oatpp/src/oatpp/web/protocol/http/Http.hpp	/^  static const Status CODE_504;\/\/ Gateway Timeout$/;"	m	class:oatpp::web::protocol::http::Status	typeref:typename:const Status
CODE_505	../oatpp/src/oatpp/web/protocol/http/Http.cpp	/^const Status Status::CODE_505(505, "HTTP Version Not Supported");$/;"	m	class:oatpp::web::protocol::http::Status	typeref:typename:const Status
CODE_505	../oatpp/src/oatpp/web/protocol/http/Http.hpp	/^  static const Status CODE_505;\/\/ HTTP Version Not Supported$/;"	m	class:oatpp::web::protocol::http::Status	typeref:typename:const Status
CODE_506	../oatpp/src/oatpp/web/protocol/http/Http.cpp	/^const Status Status::CODE_506(506, "Variant Also Negotiates");$/;"	m	class:oatpp::web::protocol::http::Status	typeref:typename:const Status
CODE_506	../oatpp/src/oatpp/web/protocol/http/Http.hpp	/^  static const Status CODE_506;\/\/ Variant Also Negotiates$/;"	m	class:oatpp::web::protocol::http::Status	typeref:typename:const Status
CODE_507	../oatpp/src/oatpp/web/protocol/http/Http.cpp	/^const Status Status::CODE_507(507, "Insufficient Storage");$/;"	m	class:oatpp::web::protocol::http::Status	typeref:typename:const Status
CODE_507	../oatpp/src/oatpp/web/protocol/http/Http.hpp	/^  static const Status CODE_507;\/\/ Insufficient Storage$/;"	m	class:oatpp::web::protocol::http::Status	typeref:typename:const Status
CODE_508	../oatpp/src/oatpp/web/protocol/http/Http.cpp	/^const Status Status::CODE_508(508, "Loop Detected");$/;"	m	class:oatpp::web::protocol::http::Status	typeref:typename:const Status
CODE_508	../oatpp/src/oatpp/web/protocol/http/Http.hpp	/^  static const Status CODE_508;\/\/ Loop Detected$/;"	m	class:oatpp::web::protocol::http::Status	typeref:typename:const Status
CODE_509	../oatpp/src/oatpp/web/protocol/http/Http.cpp	/^const Status Status::CODE_509(509, "Bandwidth Limit Exceeded");$/;"	m	class:oatpp::web::protocol::http::Status	typeref:typename:const Status
CODE_509	../oatpp/src/oatpp/web/protocol/http/Http.hpp	/^  static const Status CODE_509;\/\/ Bandwidth Limit Exceeded$/;"	m	class:oatpp::web::protocol::http::Status	typeref:typename:const Status
CODE_510	../oatpp/src/oatpp/web/protocol/http/Http.cpp	/^const Status Status::CODE_510(510, "Not Extended");$/;"	m	class:oatpp::web::protocol::http::Status	typeref:typename:const Status
CODE_510	../oatpp/src/oatpp/web/protocol/http/Http.hpp	/^  static const Status CODE_510;\/\/ Not Extended$/;"	m	class:oatpp::web::protocol::http::Status	typeref:typename:const Status
CODE_511	../oatpp/src/oatpp/web/protocol/http/Http.cpp	/^const Status Status::CODE_511(511, "Network Authentication Required");$/;"	m	class:oatpp::web::protocol::http::Status	typeref:typename:const Status
CODE_511	../oatpp/src/oatpp/web/protocol/http/Http.hpp	/^  static const Status CODE_511;\/\/ Network Authentication Required$/;"	m	class:oatpp::web::protocol::http::Status	typeref:typename:const Status
CODE_IO_REPEAT_READ	../oatpp/src/oatpp/core/async/Coroutine.hpp	/^  static constexpr const v_int32 CODE_IO_REPEAT_READ = TYPE_IO_REPEAT | IOEventType::IO_EVENT_RE/;"	m	class:oatpp::async::Action	typeref:typename:const v_int32
CODE_IO_REPEAT_RESCHEDULE	../oatpp/src/oatpp/core/async/Coroutine.hpp	/^  static constexpr const v_int32 CODE_IO_REPEAT_RESCHEDULE = TYPE_IO_REPEAT | IOEventType::IO_EV/;"	m	class:oatpp::async::Action	typeref:typename:const v_int32
CODE_IO_REPEAT_WRITE	../oatpp/src/oatpp/core/async/Coroutine.hpp	/^  static constexpr const v_int32 CODE_IO_REPEAT_WRITE = TYPE_IO_REPEAT | IOEventType::IO_EVENT_W/;"	m	class:oatpp::async::Action	typeref:typename:const v_int32
CODE_IO_WAIT_READ	../oatpp/src/oatpp/core/async/Coroutine.hpp	/^  static constexpr const v_int32 CODE_IO_WAIT_READ = TYPE_IO_WAIT | IOEventType::IO_EVENT_READ;$/;"	m	class:oatpp::async::Action	typeref:typename:const v_int32
CODE_IO_WAIT_RESCHEDULE	../oatpp/src/oatpp/core/async/Coroutine.hpp	/^  static constexpr const v_int32 CODE_IO_WAIT_RESCHEDULE = TYPE_IO_WAIT | IOEventType::IO_EVENT_/;"	m	class:oatpp::async::Action	typeref:typename:const v_int32
CODE_IO_WAIT_WRITE	../oatpp/src/oatpp/core/async/Coroutine.hpp	/^  static constexpr const v_int32 CODE_IO_WAIT_WRITE = TYPE_IO_WAIT | IOEventType::IO_EVENT_WRITE/;"	m	class:oatpp::async::Action	typeref:typename:const v_int32
COMPILER_ID	../oatpp/build/CMakeFiles/3.14.5/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^# define COMPILER_ID /;"	d	file:
COMPILER_VERSION_INTERNAL	../oatpp/build/CMakeFiles/3.14.5/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#  define COMPILER_VERSION_INTERNAL /;"	d	file:
COMPILER_VERSION_MAJOR	../oatpp/build/CMakeFiles/3.14.5/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^  # define COMPILER_VERSION_MAJOR /;"	d	file:
COMPILER_VERSION_MAJOR	../oatpp/build/CMakeFiles/3.14.5/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#  define COMPILER_VERSION_MAJOR /;"	d	file:
COMPILER_VERSION_MAJOR	../oatpp/build/CMakeFiles/3.14.5/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^# define COMPILER_VERSION_MAJOR /;"	d	file:
COMPILER_VERSION_MINOR	../oatpp/build/CMakeFiles/3.14.5/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^  # define COMPILER_VERSION_MINOR /;"	d	file:
COMPILER_VERSION_MINOR	../oatpp/build/CMakeFiles/3.14.5/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#  define COMPILER_VERSION_MINOR /;"	d	file:
COMPILER_VERSION_MINOR	../oatpp/build/CMakeFiles/3.14.5/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^# define COMPILER_VERSION_MINOR /;"	d	file:
COMPILER_VERSION_PATCH	../oatpp/build/CMakeFiles/3.14.5/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^  # define COMPILER_VERSION_PATCH /;"	d	file:
COMPILER_VERSION_PATCH	../oatpp/build/CMakeFiles/3.14.5/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#   define COMPILER_VERSION_PATCH /;"	d	file:
COMPILER_VERSION_PATCH	../oatpp/build/CMakeFiles/3.14.5/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#  define COMPILER_VERSION_PATCH /;"	d	file:
COMPILER_VERSION_PATCH	../oatpp/build/CMakeFiles/3.14.5/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^# define COMPILER_VERSION_PATCH /;"	d	file:
COMPILER_VERSION_TWEAK	../oatpp/build/CMakeFiles/3.14.5/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#  define COMPILER_VERSION_TWEAK /;"	d	file:
COMPILER_VERSION_TWEAK	../oatpp/build/CMakeFiles/3.14.5/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^# define COMPILER_VERSION_TWEAK /;"	d	file:
CONNECTION	../oatpp/src/oatpp/web/protocol/http/Http.cpp	/^const char* const Header::CONNECTION = "Connection";$/;"	m	class:oatpp::web::protocol::http::Header	typeref:typename:const char * const
CONNECTION	../oatpp/src/oatpp/web/protocol/http/Http.hpp	/^  static const char* const CONNECTION;          \/\/ "Connection"$/;"	m	class:oatpp::web::protocol::http::Header	typeref:typename:const char * const
CONNECTION_CLOSE	../oatpp/src/oatpp/web/protocol/http/Http.cpp	/^const char* const Header::Value::CONNECTION_CLOSE = "close";$/;"	m	class:oatpp::web::protocol::http::Header::Value	typeref:typename:const char * const
CONNECTION_CLOSE	../oatpp/src/oatpp/web/protocol/http/Http.hpp	/^    static const char* const CONNECTION_CLOSE;$/;"	m	class:oatpp::web::protocol::http::Header::Value	typeref:typename:const char * const
CONNECTION_KEEP_ALIVE	../oatpp/src/oatpp/web/protocol/http/Http.cpp	/^const char* const Header::Value::CONNECTION_KEEP_ALIVE = "keep-alive";$/;"	m	class:oatpp::web::protocol::http::Header::Value	typeref:typename:const char * const
CONNECTION_KEEP_ALIVE	../oatpp/src/oatpp/web/protocol/http/Http.hpp	/^    static const char* const CONNECTION_KEEP_ALIVE;$/;"	m	class:oatpp::web::protocol::http::Header::Value	typeref:typename:const char * const
CONNECTION_STATE_CLOSE	../oatpp/src/oatpp/web/protocol/http/outgoing/CommunicationUtils.hpp	/^  static constexpr v_int32 CONNECTION_STATE_CLOSE = 0;$/;"	m	class:oatpp::web::protocol::http::outgoing::CommunicationUtils	typeref:typename:v_int32
CONNECTION_STATE_KEEP_ALIVE	../oatpp/src/oatpp/web/protocol/http/outgoing/CommunicationUtils.hpp	/^  static constexpr v_int32 CONNECTION_STATE_KEEP_ALIVE = 1;$/;"	m	class:oatpp::web::protocol::http::outgoing::CommunicationUtils	typeref:typename:v_int32
CONNECTION_STATE_UPGRADE	../oatpp/src/oatpp/web/protocol/http/outgoing/CommunicationUtils.hpp	/^  static constexpr v_int32 CONNECTION_STATE_UPGRADE = 2;$/;"	m	class:oatpp::web::protocol::http::outgoing::CommunicationUtils	typeref:typename:v_int32
CONNECTION_UPGRADE	../oatpp/src/oatpp/web/protocol/http/Http.cpp	/^const char* const Header::Value::CONNECTION_UPGRADE = "Upgrade";$/;"	m	class:oatpp::web::protocol::http::Header::Value	typeref:typename:const char * const
CONNECTION_UPGRADE	../oatpp/src/oatpp/web/protocol/http/Http.hpp	/^    static const char* const CONNECTION_UPGRADE;$/;"	m	class:oatpp::web::protocol::http::Header::Value	typeref:typename:const char * const
CONTENT_ENCODING	../oatpp/src/oatpp/web/protocol/http/Http.cpp	/^const char* const Header::CONTENT_ENCODING = "Content-Encoding";$/;"	m	class:oatpp::web::protocol::http::Header	typeref:typename:const char * const
CONTENT_ENCODING	../oatpp/src/oatpp/web/protocol/http/Http.hpp	/^  static const char* const CONTENT_ENCODING;    \/\/ "Content-Encoding"$/;"	m	class:oatpp::web::protocol::http::Header	typeref:typename:const char * const
CONTENT_LENGTH	../oatpp/src/oatpp/web/protocol/http/Http.cpp	/^const char* const Header::CONTENT_LENGTH = "Content-Length";$/;"	m	class:oatpp::web::protocol::http::Header	typeref:typename:const char * const
CONTENT_LENGTH	../oatpp/src/oatpp/web/protocol/http/Http.hpp	/^  static const char* const CONTENT_LENGTH;      \/\/ "Content-Length"$/;"	m	class:oatpp::web::protocol::http::Header	typeref:typename:const char * const
CONTENT_RANGE	../oatpp/src/oatpp/web/protocol/http/Http.cpp	/^const char* const Header::CONTENT_RANGE = "Content-Range";$/;"	m	class:oatpp::web::protocol::http::Header	typeref:typename:const char * const
CONTENT_RANGE	../oatpp/src/oatpp/web/protocol/http/Http.hpp	/^  static const char* const CONTENT_RANGE;       \/\/ "Content-Range"$/;"	m	class:oatpp::web::protocol::http::Header	typeref:typename:const char * const
CONTENT_TYPE	../oatpp/src/oatpp/web/protocol/http/Http.cpp	/^const char* const Header::CONTENT_TYPE = "Content-Type";$/;"	m	class:oatpp::web::protocol::http::Header	typeref:typename:const char * const
CONTENT_TYPE	../oatpp/src/oatpp/web/protocol/http/Http.hpp	/^  static const char* const CONTENT_TYPE;        \/\/ "Content-Type"$/;"	m	class:oatpp::web::protocol::http::Header	typeref:typename:const char * const
CONTENT_TYPE_APPLICATION_JSON	../oatpp/src/oatpp/web/protocol/http/Http.cpp	/^const char* const Header::Value::CONTENT_TYPE_APPLICATION_JSON = "application\/json";$/;"	m	class:oatpp::web::protocol::http::Header::Value	typeref:typename:const char * const
CONTENT_TYPE_APPLICATION_JSON	../oatpp/src/oatpp/web/protocol/http/Http.hpp	/^    static const char* const CONTENT_TYPE_APPLICATION_JSON;$/;"	m	class:oatpp::web::protocol::http::Header::Value	typeref:typename:const char * const
CRC32	../oatpp/src/oatpp/algorithm/CRC.hpp	/^class CRC32 {$/;"	c	namespace:oatpp::algorithm
CVF_VERSION_NO_TWEAK	../oatpp/build/src/oatppConfigVersion.cmake	/^  set(CVF_VERSION_NO_TWEAK "${CMAKE_MATCH_1}")$/;"	v
CVF_VERSION_NO_TWEAK	../oatpp/build/src/oatppConfigVersion.cmake	/^  set(CVF_VERSION_NO_TWEAK "0.19.6")$/;"	v
CXX_STD	../oatpp/build/CMakeFiles/3.14.5/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#define CXX_STD /;"	d	file:
CYGWIN	../oatpp/build/CMakeFiles/3.14.5/CMakeCXXCompiler.cmake	/^  set(CYGWIN 1)$/;"	v
Callback	../oatpp/src/oatpp/core/async/Coroutine.hpp	/^    Callback = Action (C::*)(Args...);$/;"	t	class:oatpp::async::AbstractCoroutineWithResult::StarterForResult
Caret	../oatpp/src/oatpp/core/parser/Caret.cpp	/^  Caret::Caret(const char* text)$/;"	f	class:oatpp::parser::Caret
Caret	../oatpp/src/oatpp/core/parser/Caret.cpp	/^  Caret::Caret(const oatpp::String& str)$/;"	f	class:oatpp::parser::Caret
Caret	../oatpp/src/oatpp/core/parser/Caret.cpp	/^  Caret::Caret(p_char8 parseData, v_int32 dataSize)$/;"	f	class:oatpp::parser::Caret
Caret	../oatpp/src/oatpp/core/parser/Caret.hpp	/^class Caret {$/;"	c	namespace:oatpp::parser
Caret	../oatpp/test/oatpp/core/parser/CaretTest.cpp	/^    typedef oatpp::parser::Caret Caret;$/;"	t	namespace:oatpp::test::parser::__anondd22e0d90110	typeref:typename:oatpp::parser::Caret	file:
CaretTest	../oatpp/test/oatpp/core/parser/CaretTest.hpp	/^  CaretTest():UnitTest("TEST[parser::CaretTest]"){}$/;"	f	class:oatpp::test::parser::CaretTest
CaretTest	../oatpp/test/oatpp/core/parser/CaretTest.hpp	/^class CaretTest : public UnitTest{$/;"	c	namespace:oatpp::test::parser
ChildClass	../oatpp/test/oatpp/core/base/RegRuleTest.cpp	/^  class ChildClass : public BaseClass {$/;"	c	namespace:oatpp::test::base::__anon40c2e60e0110	file:
Chunk	../oatpp/src/oatpp/core/data/stream/ChunkedBuffer.hpp	/^    Chunk(void* pData, data::v_io_size pSize)$/;"	f	class:oatpp::data::stream::ChunkedBuffer::Chunk
Chunk	../oatpp/src/oatpp/core/data/stream/ChunkedBuffer.hpp	/^  class Chunk : public oatpp::base::Countable {$/;"	c	class:oatpp::data::stream::ChunkedBuffer
ChunkEntry	../oatpp/src/oatpp/core/data/stream/ChunkedBuffer.hpp	/^    ChunkEntry(void* pChunk, ChunkEntry* pNext)$/;"	f	class:oatpp::data::stream::ChunkedBuffer::ChunkEntry
ChunkEntry	../oatpp/src/oatpp/core/data/stream/ChunkedBuffer.hpp	/^  class ChunkEntry {$/;"	c	class:oatpp::data::stream::ChunkedBuffer
ChunkedBuffer	../oatpp/src/oatpp/core/data/stream/ChunkedBuffer.cpp	/^ChunkedBuffer::ChunkedBuffer()$/;"	f	class:oatpp::data::stream::ChunkedBuffer
ChunkedBuffer	../oatpp/src/oatpp/core/data/stream/ChunkedBuffer.hpp	/^class ChunkedBuffer : public oatpp::base::Countable, public ConsistentOutputStream, public std::/;"	c	namespace:oatpp::data::stream
ChunkedBuffer	../oatpp/test/oatpp/core/data/stream/ChunkedBufferTest.cpp	/^  typedef oatpp::data::stream::ChunkedBuffer ChunkedBuffer;$/;"	t	function:oatpp::test::core::data::stream::ChunkedBufferTest::onRun	typeref:typename:oatpp::data::stream::ChunkedBuffer	file:
ChunkedBufferBody	../oatpp/src/oatpp/web/protocol/http/outgoing/ChunkedBufferBody.cpp	/^ChunkedBufferBody::ChunkedBufferBody(const std::shared_ptr<oatpp::data::stream::ChunkedBuffer>& /;"	f	class:oatpp::web::protocol::http::outgoing::ChunkedBufferBody
ChunkedBufferBody	../oatpp/src/oatpp/web/protocol/http/outgoing/ChunkedBufferBody.hpp	/^class ChunkedBufferBody : public oatpp::base::Countable, public Body, public std::enable_shared_/;"	c	namespace:oatpp::web::protocol::http::outgoing
ChunkedBufferTest	../oatpp/test/oatpp/core/data/stream/ChunkedBufferTest.hpp	/^  ChunkedBufferTest():UnitTest("TEST[core::data::stream::ChunkedBufferTest]"){}$/;"	f	class:oatpp::test::core::data::stream::ChunkedBufferTest
ChunkedBufferTest	../oatpp/test/oatpp/core/data/stream/ChunkedBufferTest.hpp	/^class ChunkedBufferTest : public UnitTest{$/;"	c	namespace:oatpp::test::core::data::stream
ChunkedDecoder	../oatpp/src/oatpp/web/protocol/http/incoming/SimpleBodyDecoder.cpp	/^    ChunkedDecoder(const std::shared_ptr<oatpp::data::stream::InputStream>& fromStream,$/;"	f	class:oatpp::web::protocol::http::incoming::SimpleBodyDecoder::doChunkedDecodingAsync::ChunkedDecoder	file:
ChunkedDecoder	../oatpp/src/oatpp/web/protocol/http/incoming/SimpleBodyDecoder.cpp	/^  class ChunkedDecoder : public oatpp::async::Coroutine<ChunkedDecoder> {$/;"	c	function:oatpp::web::protocol::http::incoming::SimpleBodyDecoder::doChunkedDecodingAsync	file:
Chunks	../oatpp/src/oatpp/core/data/stream/ChunkedBuffer.hpp	/^  typedef oatpp::collection::LinkedList<std::shared_ptr<Chunk>> Chunks;$/;"	t	class:oatpp::data::stream::ChunkedBuffer	typeref:typename:oatpp::collection::LinkedList<std::shared_ptr<Chunk>>
Class	../oatpp/src/oatpp/core/data/mapping/type/Type.hpp	/^  typedef Clazz Class;$/;"	t	class:oatpp::data::mapping::type::ObjectWrapper	typeref:typename:Clazz
Class	../oatpp/src/oatpp/core/data/mapping/type/Type.hpp	/^  typedef __class::Void Class;$/;"	t	class:oatpp::data::mapping::type::PolymorphicWrapper	typeref:typename:__class::Void
Client	../oatpp/test/oatpp/web/app/Client.hpp	/^class Client : public oatpp::web::client::ApiClient {$/;"	c	namespace:oatpp::test::web::app
ClientConnectionProvider	../oatpp/src/oatpp/network/ConnectionProvider.hpp	/^class ClientConnectionProvider : public ConnectionProvider {$/;"	c	namespace:oatpp::network
ClientCoroutine_echoBodyAsync	../oatpp/test/oatpp/web/FullAsyncClientTest.cpp	/^class ClientCoroutine_echoBodyAsync : public oatpp::async::Coroutine<ClientCoroutine_echoBodyAsy/;"	c	namespace:oatpp::test::web::__anonb368a9f30110	file:
ClientCoroutine_getRootAsync	../oatpp/test/oatpp/web/FullAsyncClientTest.cpp	/^class ClientCoroutine_getRootAsync : public oatpp::async::Coroutine<ClientCoroutine_getRootAsync/;"	c	namespace:oatpp::test::web::__anonb368a9f30110	file:
ClientServerTestRunner	../oatpp/src/oatpp-test/web/ClientServerTestRunner.hpp	/^class ClientServerTestRunner {$/;"	c	namespace:oatpp::test::web
ClientTask	../oatpp/test/oatpp/network/virtual_/InterfaceTest.cpp	/^    ClientTask(const std::shared_ptr<Interface>& interface,$/;"	f	class:oatpp::test::network::virtual_::__anoncbc809950110::ClientTask	file:
ClientTask	../oatpp/test/oatpp/network/virtual_/InterfaceTest.cpp	/^  class ClientTask : public oatpp::base::Countable {$/;"	c	namespace:oatpp::test::network::virtual_::__anoncbc809950110	file:
Code of Conduct	../oatpp/CONTRIBUTING.md	/^## Code of Conduct$/;"	s
CommandLineArguments	../oatpp/src/oatpp/core/base/CommandLineArguments.cpp	/^CommandLineArguments::CommandLineArguments()$/;"	f	class:oatpp::base::CommandLineArguments
CommandLineArguments	../oatpp/src/oatpp/core/base/CommandLineArguments.cpp	/^CommandLineArguments::CommandLineArguments(int argc, const char * argv[])$/;"	f	class:oatpp::base::CommandLineArguments
CommandLineArguments	../oatpp/src/oatpp/core/base/CommandLineArguments.hpp	/^class CommandLineArguments {$/;"	c	namespace:oatpp::base
CommandLineArgumentsTest	../oatpp/test/oatpp/core/base/CommandLineArgumentsTest.hpp	/^  CommandLineArgumentsTest():UnitTest("TEST[base::CommandLineArgumentsTest]"){}$/;"	f	class:oatpp::test::base::CommandLineArgumentsTest
CommandLineArgumentsTest	../oatpp/test/oatpp/core/base/CommandLineArgumentsTest.hpp	/^class CommandLineArgumentsTest : public UnitTest{$/;"	c	namespace:oatpp::test::base
CommunicationError	../oatpp/src/oatpp/web/protocol/CommunicationError.cpp	/^CommunicationError::CommunicationError(oatpp::data::v_io_size ioStatus, const oatpp::String& mes/;"	f	class:oatpp::web::protocol::CommunicationError
CommunicationError	../oatpp/src/oatpp/web/protocol/CommunicationError.hpp	/^class CommunicationError : public std::runtime_error {$/;"	c	namespace:oatpp::web::protocol
CommunicationUtils	../oatpp/src/oatpp/web/protocol/http/outgoing/CommunicationUtils.hpp	/^class CommunicationUtils {$/;"	c	namespace:oatpp::web::protocol::http::outgoing
Component	../oatpp/src/oatpp/core/base/Environment.hpp	/^    Component(const T& object)$/;"	f	class:oatpp::base::Environment::Component
Component	../oatpp/src/oatpp/core/base/Environment.hpp	/^    Component(const std::string& name, const T& object)$/;"	f	class:oatpp::base::Environment::Component
Component	../oatpp/src/oatpp/core/base/Environment.hpp	/^  class Component {$/;"	c	class:oatpp::base::Environment
CompoundIOStream	../oatpp/src/oatpp/core/data/stream/Stream.hpp	/^  CompoundIOStream(const std::shared_ptr<OutputStream>& outputStream,$/;"	f	class:oatpp::data::stream::CompoundIOStream
CompoundIOStream	../oatpp/src/oatpp/core/data/stream/Stream.hpp	/^class CompoundIOStream : public oatpp::base::Countable, public IOStream {$/;"	c	namespace:oatpp::data::stream
Config	../oatpp/src/oatpp/core/base/Environment.hpp	/^    Config(const char* tfmt, bool printMicroTicks)$/;"	f	struct:oatpp::base::DefaultLogger::Config
Config	../oatpp/src/oatpp/core/base/Environment.hpp	/^  struct Config {$/;"	s	class:oatpp::base::DefaultLogger
Config	../oatpp/src/oatpp/parser/json/mapping/Deserializer.hpp	/^    Config()$/;"	f	class:oatpp::parser::json::mapping::Deserializer::Config
Config	../oatpp/src/oatpp/parser/json/mapping/Deserializer.hpp	/^  class Config : public oatpp::base::Countable {$/;"	c	class:oatpp::parser::json::mapping::Deserializer
Config	../oatpp/src/oatpp/parser/json/mapping/Serializer.hpp	/^    Config()$/;"	f	class:oatpp::parser::json::mapping::Serializer::Config
Config	../oatpp/src/oatpp/parser/json/mapping/Serializer.hpp	/^  class Config : public oatpp::base::Countable {$/;"	c	class:oatpp::parser::json::mapping::Serializer
ConnectCoroutine	../oatpp/src/oatpp/network/client/SimpleTCPConnectionProvider.cpp	/^    ConnectCoroutine(const oatpp::String& host, v_int32 port)$/;"	f	class:oatpp::network::client::SimpleTCPConnectionProvider::getConnectionAsync::ConnectCoroutine	file:
ConnectCoroutine	../oatpp/src/oatpp/network/client/SimpleTCPConnectionProvider.cpp	/^  class ConnectCoroutine : public oatpp::async::CoroutineWithResult<ConnectCoroutine, const std:/;"	c	function:oatpp::network::client::SimpleTCPConnectionProvider::getConnectionAsync	file:
ConnectCoroutine	../oatpp/src/oatpp/network/virtual_/client/ConnectionProvider.cpp	/^    ConnectCoroutine(const std::shared_ptr<virtual_::Interface>& interface,$/;"	f	class:oatpp::network::virtual_::client::ConnectionProvider::getConnectionAsync::ConnectCoroutine	file:
ConnectCoroutine	../oatpp/src/oatpp/network/virtual_/client/ConnectionProvider.cpp	/^  class ConnectCoroutine : public oatpp::async::CoroutineWithResult<ConnectCoroutine, const std:/;"	c	function:oatpp::network::virtual_::client::ConnectionProvider::getConnectionAsync	file:
Connection	../oatpp/src/oatpp/network/Connection.cpp	/^Connection::Connection(data::v_io_handle handle)$/;"	f	class:oatpp::network::Connection
Connection	../oatpp/src/oatpp/network/Connection.hpp	/^class Connection : public oatpp::base::Countable, public oatpp::data::stream::IOStream {$/;"	c	namespace:oatpp::network
ConnectionHandle	../oatpp/src/oatpp/web/client/RequestExecutor.hpp	/^  class ConnectionHandle {$/;"	c	class:oatpp::web::client::RequestExecutor
ConnectionHandler	../oatpp/src/oatpp/network/server/ConnectionHandler.hpp	/^class ConnectionHandler {$/;"	c	namespace:oatpp::network::server
ConnectionHandler	../oatpp/src/oatpp/web/protocol/http/outgoing/Response.hpp	/^  typedef oatpp::network::server::ConnectionHandler ConnectionHandler;$/;"	t	class:oatpp::web::protocol::http::outgoing::Response	typeref:typename:oatpp::network::server::ConnectionHandler
ConnectionProvider	../oatpp/src/oatpp/network/ConnectionProvider.hpp	/^class ConnectionProvider {$/;"	c	namespace:oatpp::network
ConnectionProvider	../oatpp/src/oatpp/network/virtual_/client/ConnectionProvider.cpp	/^ConnectionProvider::ConnectionProvider(const std::shared_ptr<virtual_::Interface>& interface)$/;"	f	class:oatpp::network::virtual_::client::ConnectionProvider
ConnectionProvider	../oatpp/src/oatpp/network/virtual_/client/ConnectionProvider.hpp	/^class ConnectionProvider : public oatpp::network::ClientConnectionProvider {$/;"	c	namespace:oatpp::network::virtual_::client
ConnectionProvider	../oatpp/src/oatpp/network/virtual_/server/ConnectionProvider.cpp	/^ConnectionProvider::ConnectionProvider(const std::shared_ptr<virtual_::Interface>& interface)$/;"	f	class:oatpp::network::virtual_::server::ConnectionProvider
ConnectionProvider	../oatpp/src/oatpp/network/virtual_/server/ConnectionProvider.hpp	/^class ConnectionProvider : public oatpp::network::ServerConnectionProvider {$/;"	c	namespace:oatpp::network::virtual_::server
ConnectionState	../oatpp/src/oatpp/web/server/HttpProcessor.hpp	/^  class ConnectionState {$/;"	c	class:oatpp::web::server::HttpProcessor
ConnectionSubmission	../oatpp/src/oatpp/network/virtual_/Interface.hpp	/^    ConnectionSubmission() : m_valid(true) {}$/;"	f	class:oatpp::network::virtual_::Interface::ConnectionSubmission
ConnectionSubmission	../oatpp/src/oatpp/network/virtual_/Interface.hpp	/^  class ConnectionSubmission {$/;"	c	class:oatpp::network::virtual_::Interface
ConsistentOutputStream	../oatpp/src/oatpp/core/data/stream/Stream.hpp	/^class ConsistentOutputStream : public OutputStream {$/;"	c	namespace:oatpp::data::stream
ContentRange	../oatpp/src/oatpp/web/protocol/http/Http.hpp	/^  ContentRange()$/;"	f	class:oatpp::web::protocol::http::ContentRange
ContentRange	../oatpp/src/oatpp/web/protocol/http/Http.hpp	/^  ContentRange(const oatpp::String& pUnits,$/;"	f	class:oatpp::web::protocol::http::ContentRange
ContentRange	../oatpp/src/oatpp/web/protocol/http/Http.hpp	/^class ContentRange {$/;"	c	namespace:oatpp::web::protocol::http
ContentTypeAndSchema	../oatpp/src/oatpp/web/server/api/Endpoint.hpp	/^    struct ContentTypeAndSchema {$/;"	s	class:oatpp::web::server::api::Endpoint::Info
Contributing to Oat++	../oatpp/CONTRIBUTING.md	/^# Contributing to Oat++$/;"	c
Contributor Covenant Code of Conduct	../oatpp/CODE_OF_CONDUCT.md	/^# Contributor Covenant Code of Conduct$/;"	c
Controller	../oatpp/test/oatpp/web/app/Controller.hpp	/^  Controller(const std::shared_ptr<ObjectMapper>& objectMapper)$/;"	f	class:oatpp::test::web::app::Controller
Controller	../oatpp/test/oatpp/web/app/Controller.hpp	/^class Controller : public oatpp::web::server::api::ApiController {$/;"	c	namespace:oatpp::test::web::app
Controller	../oatpp/test/oatpp/web/server/api/ApiControllerTest.cpp	/^  Controller(const std::shared_ptr<ObjectMapper>& objectMapper)$/;"	f	class:oatpp::test::web::server::api::__anon4b1d35700110::Controller	file:
Controller	../oatpp/test/oatpp/web/server/api/ApiControllerTest.cpp	/^class Controller : public oatpp::web::server::api::ApiController {$/;"	c	namespace:oatpp::test::web::server::api::__anon4b1d35700110	file:
ControllerAsync	../oatpp/test/oatpp/web/app/ControllerAsync.hpp	/^  ControllerAsync(const std::shared_ptr<ObjectMapper>& objectMapper)$/;"	f	class:oatpp::test::web::app::ControllerAsync
ControllerAsync	../oatpp/test/oatpp/web/app/ControllerAsync.hpp	/^class ControllerAsync : public oatpp::web::server::api::ApiController {$/;"	c	namespace:oatpp::test::web::app
Coroutine	../oatpp/src/oatpp/core/async/Coroutine.hpp	/^class Coroutine : public AbstractCoroutine {$/;"	c	namespace:oatpp::async
Coroutine	../oatpp/src/oatpp/web/server/HttpProcessor.hpp	/^    Coroutine(HttpRouter* router,$/;"	f	class:oatpp::web::server::HttpProcessor::Coroutine
Coroutine	../oatpp/src/oatpp/web/server/HttpProcessor.hpp	/^  class Coroutine : public oatpp::async::Coroutine<HttpProcessor::Coroutine> {$/;"	c	class:oatpp::web::server::HttpProcessor
CoroutineStarter	../oatpp/src/oatpp/core/async/Coroutine.cpp	/^CoroutineStarter::CoroutineStarter(AbstractCoroutine* coroutine)$/;"	f	class:oatpp::async::CoroutineStarter
CoroutineStarter	../oatpp/src/oatpp/core/async/Coroutine.cpp	/^CoroutineStarter::CoroutineStarter(CoroutineStarter&& other)$/;"	f	class:oatpp::async::CoroutineStarter
CoroutineStarter	../oatpp/src/oatpp/core/async/Coroutine.hpp	/^class CoroutineStarter {$/;"	c	namespace:oatpp::async
CoroutineStarter	../oatpp/src/oatpp/core/async/Lock.hpp	/^  typedef oatpp::async::CoroutineStarter CoroutineStarter;$/;"	t	class:oatpp::async::LockGuard	typeref:typename:oatpp::async::CoroutineStarter
CoroutineStarterForResult	../oatpp/src/oatpp/core/async/Coroutine.hpp	/^CoroutineStarterForResult = typename AbstractCoroutineWithResult::StarterForResult<Args...>;$/;"	t	namespace:oatpp::async	typeref:typename:AbstractCoroutineWithResult::StarterForResult<Args...>
CoroutineWaitList	../oatpp/src/oatpp/core/async/CoroutineWaitList.cpp	/^CoroutineWaitList::CoroutineWaitList(CoroutineWaitList&& other) {$/;"	f	class:oatpp::async::CoroutineWaitList
CoroutineWaitList	../oatpp/src/oatpp/core/async/CoroutineWaitList.hpp	/^class CoroutineWaitList {$/;"	c	namespace:oatpp::async
CoroutineWithResult	../oatpp/src/oatpp/core/async/Coroutine.hpp	/^class CoroutineWithResult : public AbstractCoroutineWithResult {$/;"	c	namespace:oatpp::async
Countable	../oatpp/src/oatpp/core/base/Countable.cpp	/^Countable::Countable() {$/;"	f	class:oatpp::base::Countable
Countable	../oatpp/src/oatpp/core/base/Countable.cpp	/^Countable::Countable(const Countable& other) {$/;"	f	class:oatpp::base::Countable
Countable	../oatpp/src/oatpp/core/base/Countable.hpp	/^class Countable {$/;"	c	namespace:oatpp::base
Create Endpoint	../oatpp/README.md	/^### Create Endpoint$/;"	S
Create Endpoint Async	../oatpp/README.md	/^### Create Endpoint Async$/;"	S
Create Oat++ extension module	../oatpp/CONTRIBUTING.md	/^### Create Oat++ extension module$/;"	S
Create a pull request	../oatpp/CONTRIBUTING.md	/^### Create a pull request$/;"	S
Creator	../oatpp/src/oatpp/core/data/mapping/type/Type.hpp	/^  typedef AbstractObjectWrapper (*Creator)();$/;"	t	class:oatpp::data::mapping::type::Type	typeref:typename:AbstractObjectWrapper (*)()
CustomPoolSharedObjectAllocator	../oatpp/src/oatpp/core/base/memory/Allocator.hpp	/^  CustomPoolSharedObjectAllocator(AllocationExtras& info, P& pool)$/;"	f	class:oatpp::base::memory::CustomPoolSharedObjectAllocator
CustomPoolSharedObjectAllocator	../oatpp/src/oatpp/core/base/memory/Allocator.hpp	/^  CustomPoolSharedObjectAllocator(const CustomPoolSharedObjectAllocator<U, P>& other)$/;"	f	class:oatpp::base::memory::CustomPoolSharedObjectAllocator
CustomPoolSharedObjectAllocator	../oatpp/src/oatpp/core/base/memory/Allocator.hpp	/^class CustomPoolSharedObjectAllocator {$/;"	c	namespace:oatpp::base::memory
DATA_CHUNK	../oatpp/test/oatpp/network/virtual_/PipeTest.cpp	/^  const char* DATA_CHUNK = "<0123456789\/abcdefghijklmnopqrstuvwxyz\/ABCDEFGHIJKLMNOPQRSTUVWXYZ>/;"	v	namespace:oatpp::test::network::virtual_::__anon0e2557b20110	typeref:typename:const char *
DEC	../oatpp/build/CMakeFiles/3.14.5/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#define DEC(/;"	d	file:
DTO	../oatpp/test/oatpp/core/data/mapping/type/TypeTest.cpp	/^  typedef oatpp::data::mapping::type::Object DTO;$/;"	t	namespace:oatpp::test::core::data::mapping::type::__anonbcec93450110	typeref:typename:oatpp::data::mapping::type::Object	file:
DTO	../oatpp/test/oatpp/parser/json/mapping/DTOMapperTest.cpp	/^typedef oatpp::data::mapping::type::Object DTO;$/;"	t	namespace:oatpp::test::parser::json::mapping::__anon2594df220110	typeref:typename:oatpp::data::mapping::type::Object	file:
DTO	../oatpp/test/oatpp/parser/json/mapping/DeserializerTest.cpp	/^typedef oatpp::data::mapping::type::Object DTO;$/;"	t	namespace:oatpp::test::parser::json::mapping::__anon769c5f590110	typeref:typename:oatpp::data::mapping::type::Object	file:
DTOMapperPerfTest	../oatpp/test/oatpp/parser/json/mapping/DTOMapperPerfTest.hpp	/^  DTOMapperPerfTest():UnitTest("TEST[parser::json::mapping::DTOMapperPerfTest]"){}$/;"	f	class:oatpp::test::parser::json::mapping::DTOMapperPerfTest
DTOMapperPerfTest	../oatpp/test/oatpp/parser/json/mapping/DTOMapperPerfTest.hpp	/^class DTOMapperPerfTest : public UnitTest{$/;"	c	namespace:oatpp::test::parser::json::mapping
DTOMapperTest	../oatpp/test/oatpp/parser/json/mapping/DTOMapperTest.hpp	/^  DTOMapperTest():UnitTest("TEST[parser::json::mapping::DTOMapperTest]"){}$/;"	f	class:oatpp::test::parser::json::mapping::DTOMapperTest
DTOMapperTest	../oatpp/test/oatpp/parser/json/mapping/DTOMapperTest.hpp	/^class DTOMapperTest : public UnitTest{$/;"	c	namespace:oatpp::test::parser::json::mapping
DTO_FIELD	../oatpp/src/oatpp/codegen/codegen_define_DTO_.hpp	/^#define DTO_FIELD(/;"	d
DTO_INIT	../oatpp/src/oatpp/codegen/codegen_define_DTO_.hpp	/^#define DTO_INIT(/;"	d
DTO_INIT	../oatpp/test/oatpp/parser/json/mapping/DTOMapperTest.cpp	/^  DTO_INIT(TestChild, DTO)$/;"	f	class:oatpp::test::parser::json::mapping::__anon2594df220110::TestChild	file:
Data	../oatpp/src/oatpp/core/async/Coroutine.hpp	/^  union Data {$/;"	u	class:oatpp::async::Action
DecodingError	../oatpp/src/oatpp/encoding/Base64.hpp	/^    DecodingError(const char* message)$/;"	f	class:oatpp::encoding::Base64::DecodingError
DecodingError	../oatpp/src/oatpp/encoding/Base64.hpp	/^  class DecodingError : public std::runtime_error {$/;"	c	class:oatpp::encoding::Base64
DefaultErrorHandler	../oatpp/src/oatpp/web/server/handler/ErrorHandler.hpp	/^  DefaultErrorHandler()$/;"	f	class:oatpp::web::server::handler::DefaultErrorHandler
DefaultErrorHandler	../oatpp/src/oatpp/web/server/handler/ErrorHandler.hpp	/^class DefaultErrorHandler : public oatpp::base::Countable, public ErrorHandler {$/;"	c	namespace:oatpp::web::server::handler
DefaultLogger	../oatpp/src/oatpp/core/base/Environment.cpp	/^DefaultLogger::DefaultLogger(const Config& config)$/;"	f	class:oatpp::base::DefaultLogger
DefaultLogger	../oatpp/src/oatpp/core/base/Environment.hpp	/^class DefaultLogger : public Logger {$/;"	c	namespace:oatpp::base
Deserializer	../oatpp/src/oatpp/parser/json/mapping/Deserializer.hpp	/^class Deserializer {$/;"	c	namespace:oatpp::parser::json::mapping
Deserializer	../oatpp/test/oatpp/parser/json/mapping/DTOMapperPerfTest.cpp	/^typedef oatpp::parser::json::mapping::Deserializer Deserializer;$/;"	t	namespace:oatpp::test::parser::json::mapping::__anon21ca47af0110	typeref:typename:oatpp::parser::json::mapping::Deserializer	file:
Deserializer	../oatpp/test/oatpp/parser/json/mapping/DeserializerTest.cpp	/^typedef oatpp::parser::json::mapping::Deserializer Deserializer;$/;"	t	namespace:oatpp::test::parser::json::mapping::__anon769c5f590110	typeref:typename:oatpp::parser::json::mapping::Deserializer	file:
DeserializerTest	../oatpp/test/oatpp/parser/json/mapping/DeserializerTest.hpp	/^  DeserializerTest():UnitTest("TEST[parser::json::mapping::DeserializerTestTest]"){}$/;"	f	class:oatpp::test::parser::json::mapping::DeserializerTest
DeserializerTest	../oatpp/test/oatpp/parser/json/mapping/DeserializerTest.hpp	/^class DeserializerTest : public UnitTest{$/;"	c	namespace:oatpp::test::parser::json::mapping
DtoBody	../oatpp/src/oatpp/web/protocol/http/outgoing/DtoBody.cpp	/^DtoBody::DtoBody(const oatpp::data::mapping::type::AbstractObjectWrapper& dto,$/;"	f	class:oatpp::web::protocol::http::outgoing::DtoBody
DtoBody	../oatpp/src/oatpp/web/protocol/http/outgoing/DtoBody.hpp	/^class DtoBody : public ChunkedBufferBody {$/;"	c	namespace:oatpp::web::protocol::http::outgoing
ENDPOINT	../oatpp/src/oatpp/codegen/codegen_define_ApiController_.hpp	/^#define ENDPOINT(/;"	d
ENDPOINT_ASYNC	../oatpp/src/oatpp/codegen/codegen_define_ApiController_.hpp	/^#define ENDPOINT_ASYNC(/;"	d
ENDPOINT_ASYNC_INIT	../oatpp/src/oatpp/codegen/codegen_define_ApiController_.hpp	/^#define ENDPOINT_ASYNC_INIT(/;"	d
ENDPOINT_ASYNC_INIT	../oatpp/test/oatpp/web/app/ControllerAsync.hpp	/^    ENDPOINT_ASYNC_INIT(Echo)$/;"	f	class:oatpp::test::web::app::ControllerAsync
ENDPOINT_ASYNC_INIT	../oatpp/test/oatpp/web/app/ControllerAsync.hpp	/^    ENDPOINT_ASYNC_INIT(GetWithHeaders)$/;"	f	class:oatpp::test::web::app::ControllerAsync
ENDPOINT_ASYNC_INIT	../oatpp/test/oatpp/web/app/ControllerAsync.hpp	/^    ENDPOINT_ASYNC_INIT(GetWithParams)$/;"	f	class:oatpp::test::web::app::ControllerAsync
ENDPOINT_ASYNC_INIT	../oatpp/test/oatpp/web/app/ControllerAsync.hpp	/^    ENDPOINT_ASYNC_INIT(PostBody)$/;"	f	class:oatpp::test::web::app::ControllerAsync
ENDPOINT_ASYNC_INIT	../oatpp/test/oatpp/web/app/ControllerAsync.hpp	/^    ENDPOINT_ASYNC_INIT(Root)$/;"	f	class:oatpp::test::web::app::ControllerAsync
ENDPOINT_ASYNC_INIT	src/controller/MediaController.hpp	/^    ENDPOINT_ASYNC_INIT(Live)$/;"	f	class:MediaController
ENDPOINT_ASYNC_INIT	src/controller/MediaController.hpp	/^    ENDPOINT_ASYNC_INIT(Static)$/;"	f	class:MediaController
ENDPOINT_INFO	../oatpp/src/oatpp/codegen/codegen_define_ApiController_.hpp	/^#define ENDPOINT_INFO(/;"	d
ENDPOINT_INFO	../oatpp/test/oatpp/web/server/api/ApiControllerTest.cpp	/^  ENDPOINT_INFO(pathParams) {$/;"	f	class:oatpp::test::web::server::api::__anon4b1d35700110::Controller	file:
ENDPOINT_INFO	../oatpp/test/oatpp/web/server/api/ApiControllerTest.cpp	/^  ENDPOINT_INFO(queryParams) {$/;"	f	class:oatpp::test::web::server::api::__anon4b1d35700110::Controller	file:
ENDPOINT_INFO	../oatpp/test/oatpp/web/server/api/ApiControllerTest.cpp	/^  ENDPOINT_INFO(root) {$/;"	f	class:oatpp::test::web::server::api::__anon4b1d35700110::Controller	file:
EQUALS	../oatpp/build/Makefile	/^EQUALS = =$/;"	m
EQUALS	../oatpp/build/src/Makefile	/^EQUALS = =$/;"	m
EQUALS	../oatpp/build/test/Makefile	/^EQUALS = =$/;"	m
ERROR_ASYNC_FAILED_TO_WRITE_ALL_DATA	../oatpp/src/oatpp/core/data/stream/ChunkedBuffer.cpp	/^const char* ChunkedBuffer::ERROR_ASYNC_FAILED_TO_WRITE_ALL_DATA = "ERROR_ASYNC_FAILED_TO_WRITE_A/;"	m	class:oatpp::data::stream::ChunkedBuffer	typeref:typename:const char *
ERROR_ASYNC_FAILED_TO_WRITE_ALL_DATA	../oatpp/src/oatpp/core/data/stream/ChunkedBuffer.hpp	/^  static const char* ERROR_ASYNC_FAILED_TO_WRITE_ALL_DATA;$/;"	m	class:oatpp::data::stream::ChunkedBuffer	typeref:typename:const char *
ERROR_BROKEN_PIPE	../oatpp/src/oatpp/core/data/IODefinitions.cpp	/^const std::shared_ptr<const oatpp::async::Error> AsyncIOError::ERROR_BROKEN_PIPE = std::make_sha/;"	m	class:oatpp::data::AsyncIOError	typeref:typename:const std::shared_ptr<const oatpp::async::Error>
ERROR_BROKEN_PIPE	../oatpp/src/oatpp/core/data/IODefinitions.hpp	/^  static const std::shared_ptr<const Error> ERROR_BROKEN_PIPE;$/;"	m	class:oatpp::data::AsyncIOError	typeref:typename:const std::shared_ptr<const Error>
ERROR_CODE_ARRAY_SCOPE_CLOSE	../oatpp/src/oatpp/parser/json/mapping/Deserializer.hpp	/^  static constexpr v_int32 ERROR_CODE_ARRAY_SCOPE_CLOSE = 6;$/;"	m	class:oatpp::parser::json::mapping::Deserializer	typeref:typename:v_int32
ERROR_CODE_ARRAY_SCOPE_OPEN	../oatpp/src/oatpp/parser/json/mapping/Deserializer.hpp	/^  static constexpr v_int32 ERROR_CODE_ARRAY_SCOPE_OPEN = 5;$/;"	m	class:oatpp::parser::json::mapping::Deserializer	typeref:typename:v_int32
ERROR_CODE_CANT_CONNECT	../oatpp/src/oatpp/web/client/RequestExecutor.hpp	/^    constexpr static const v_int32 ERROR_CODE_CANT_CONNECT = 1;$/;"	m	class:oatpp::web::client::RequestExecutor::RequestExecutionError	typeref:typename:const v_int32
ERROR_CODE_CANT_PARSE_HEADERS	../oatpp/src/oatpp/web/client/RequestExecutor.hpp	/^    constexpr static const v_int32 ERROR_CODE_CANT_PARSE_HEADERS = 3;$/;"	m	class:oatpp::web::client::RequestExecutor::RequestExecutionError	typeref:typename:const v_int32
ERROR_CODE_CANT_PARSE_STARTING_LINE	../oatpp/src/oatpp/web/client/RequestExecutor.hpp	/^    constexpr static const v_int32 ERROR_CODE_CANT_PARSE_STARTING_LINE = 2;$/;"	m	class:oatpp::web::client::RequestExecutor::RequestExecutionError	typeref:typename:const v_int32
ERROR_CODE_CANT_READ_RESPONSE	../oatpp/src/oatpp/web/client/RequestExecutor.hpp	/^    constexpr static const v_int32 ERROR_CODE_CANT_READ_RESPONSE = 4;$/;"	m	class:oatpp::web::client::RequestExecutor::RequestExecutionError	typeref:typename:const v_int32
ERROR_CODE_INVALID_ESCAPED_CHAR	../oatpp/src/oatpp/parser/json/Utils.hpp	/^  static constexpr v_int32 ERROR_CODE_INVALID_ESCAPED_CHAR = 1;$/;"	m	class:oatpp::parser::json::Utils	typeref:typename:v_int32
ERROR_CODE_INVALID_SURROGATE_PAIR	../oatpp/src/oatpp/parser/json/Utils.hpp	/^  static constexpr v_int32 ERROR_CODE_INVALID_SURROGATE_PAIR = 2;$/;"	m	class:oatpp::parser::json::Utils	typeref:typename:v_int32
ERROR_CODE_NO_RESPONSE	../oatpp/src/oatpp/web/client/RequestExecutor.hpp	/^    constexpr static const v_int32 ERROR_CODE_NO_RESPONSE = 5;$/;"	m	class:oatpp::web::client::RequestExecutor::RequestExecutionError	typeref:typename:const v_int32
ERROR_CODE_OBJECT_SCOPE_CLOSE	../oatpp/src/oatpp/parser/json/mapping/Deserializer.hpp	/^  static constexpr v_int32 ERROR_CODE_OBJECT_SCOPE_CLOSE = 2;$/;"	m	class:oatpp::parser::json::mapping::Deserializer	typeref:typename:v_int32
ERROR_CODE_OBJECT_SCOPE_COLON_MISSING	../oatpp/src/oatpp/parser/json/mapping/Deserializer.hpp	/^  static constexpr v_int32 ERROR_CODE_OBJECT_SCOPE_COLON_MISSING = 4;$/;"	m	class:oatpp::parser::json::mapping::Deserializer	typeref:typename:v_int32
ERROR_CODE_OBJECT_SCOPE_OPEN	../oatpp/src/oatpp/parser/json/mapping/Deserializer.hpp	/^  static constexpr v_int32 ERROR_CODE_OBJECT_SCOPE_OPEN = 1;$/;"	m	class:oatpp::parser::json::mapping::Deserializer	typeref:typename:v_int32
ERROR_CODE_OBJECT_SCOPE_UNKNOWN_FIELD	../oatpp/src/oatpp/parser/json/mapping/Deserializer.hpp	/^  static constexpr v_int32 ERROR_CODE_OBJECT_SCOPE_UNKNOWN_FIELD = 3;$/;"	m	class:oatpp::parser::json::mapping::Deserializer	typeref:typename:v_int32
ERROR_CODE_PARSER_QUOTE_EXPECTED	../oatpp/src/oatpp/parser/json/Utils.hpp	/^  static constexpr v_int32 ERROR_CODE_PARSER_QUOTE_EXPECTED = 3;$/;"	m	class:oatpp::parser::json::Utils	typeref:typename:v_int32
ERROR_CODE_VALUE_BOOLEAN	../oatpp/src/oatpp/parser/json/mapping/Deserializer.hpp	/^  static constexpr v_int32 ERROR_CODE_VALUE_BOOLEAN = 7;$/;"	m	class:oatpp::parser::json::mapping::Deserializer	typeref:typename:v_int32
ERROR_FAILED_TO_WRITE_DATA	../oatpp/src/oatpp/web/protocol/http/outgoing/ChunkedBufferBody.cpp	/^const char* ChunkedBufferBody::ERROR_FAILED_TO_WRITE_DATA = "ERROR_FAILED_TO_WRITE_DATA";$/;"	m	class:oatpp::web::protocol::http::outgoing::ChunkedBufferBody	typeref:typename:const char *
ERROR_FAILED_TO_WRITE_DATA	../oatpp/src/oatpp/web/protocol/http/outgoing/ChunkedBufferBody.hpp	/^  static const char* ERROR_FAILED_TO_WRITE_DATA;$/;"	m	class:oatpp::web::protocol::http::outgoing::ChunkedBufferBody	typeref:typename:const char *
ERROR_INVALID_BOOLEAN	../oatpp/src/oatpp/core/parser/Caret.cpp	/^  const char* const Caret::ERROR_INVALID_BOOLEAN = "ERROR_INVALID_BOOLEAN";$/;"	m	class:oatpp::parser::Caret	typeref:typename:const char * const
ERROR_INVALID_BOOLEAN	../oatpp/src/oatpp/core/parser/Caret.hpp	/^  static const char* const ERROR_INVALID_BOOLEAN;$/;"	m	class:oatpp::parser::Caret	typeref:typename:const char * const
ERROR_INVALID_FLOAT	../oatpp/src/oatpp/core/parser/Caret.cpp	/^  const char* const Caret::ERROR_INVALID_FLOAT = "ERROR_INVALID_FLOAT";$/;"	m	class:oatpp::parser::Caret	typeref:typename:const char * const
ERROR_INVALID_FLOAT	../oatpp/src/oatpp/core/parser/Caret.hpp	/^  static const char* const ERROR_INVALID_FLOAT;$/;"	m	class:oatpp::parser::Caret	typeref:typename:const char * const
ERROR_INVALID_INTEGER	../oatpp/src/oatpp/core/parser/Caret.cpp	/^  const char* const Caret::ERROR_INVALID_INTEGER = "ERROR_INVALID_INTEGER";$/;"	m	class:oatpp::parser::Caret	typeref:typename:const char * const
ERROR_INVALID_INTEGER	../oatpp/src/oatpp/core/parser/Caret.hpp	/^  static const char* const ERROR_INVALID_INTEGER;$/;"	m	class:oatpp::parser::Caret	typeref:typename:const char * const
ERROR_NAME_EXPECTED	../oatpp/src/oatpp/core/parser/Caret.cpp	/^  const char* const Caret::ERROR_NAME_EXPECTED = "ERROR_NAME_EXPECTED";$/;"	m	class:oatpp::parser::Caret	typeref:typename:const char * const
ERROR_NAME_EXPECTED	../oatpp/src/oatpp/core/parser/Caret.hpp	/^  static const char* const ERROR_NAME_EXPECTED;$/;"	m	class:oatpp::parser::Caret	typeref:typename:const char * const
ERROR_NO_CLOSE_TAG	../oatpp/src/oatpp/core/parser/Caret.cpp	/^  const char* const Caret::ERROR_NO_CLOSE_TAG = "ERROR_NO_CLOSE_TAG";$/;"	m	class:oatpp::parser::Caret	typeref:typename:const char * const
ERROR_NO_CLOSE_TAG	../oatpp/src/oatpp/core/parser/Caret.hpp	/^  static const char* const ERROR_NO_CLOSE_TAG;$/;"	m	class:oatpp::parser::Caret	typeref:typename:const char * const
ERROR_NO_OPEN_TAG	../oatpp/src/oatpp/core/parser/Caret.cpp	/^  const char* const Caret::ERROR_NO_OPEN_TAG = "ERROR_NO_OPEN_TAG";$/;"	m	class:oatpp::parser::Caret	typeref:typename:const char * const
ERROR_NO_OPEN_TAG	../oatpp/src/oatpp/core/parser/Caret.hpp	/^  static const char* const ERROR_NO_OPEN_TAG;$/;"	m	class:oatpp::parser::Caret	typeref:typename:const char * const
ERROR_UNKNOWN	../oatpp/src/oatpp/core/async/Coroutine.cpp	/^std::shared_ptr<const Error> AbstractCoroutine::ERROR_UNKNOWN = std::make_shared<Error>("Unknown/;"	m	class:oatpp::async::AbstractCoroutine	typeref:typename:std::shared_ptr<const Error>
ERROR_UNKNOWN	../oatpp/src/oatpp/core/async/Coroutine.hpp	/^  static std::shared_ptr<const Error> ERROR_UNKNOWN;$/;"	m	class:oatpp::async::AbstractCoroutine	typeref:typename:std::shared_ptr<const Error>
ERROR_UNKNOWN_SYMBOL	../oatpp/src/oatpp/encoding/Hex.hpp	/^  static constexpr v_int32 ERROR_UNKNOWN_SYMBOL = 1;$/;"	m	class:oatpp::encoding::Hex	typeref:typename:v_int32
ERROR_ZERO_VALUE	../oatpp/src/oatpp/core/data/IODefinitions.cpp	/^const std::shared_ptr<const oatpp::async::Error> AsyncIOError::ERROR_ZERO_VALUE = std::make_shar/;"	m	class:oatpp::data::AsyncIOError	typeref:typename:const std::shared_ptr<const oatpp::async::Error>
ERROR_ZERO_VALUE	../oatpp/src/oatpp/core/data/IODefinitions.hpp	/^  static const std::shared_ptr<const Error> ERROR_ZERO_VALUE;$/;"	m	class:oatpp::data::AsyncIOError	typeref:typename:const std::shared_ptr<const Error>
EmptyDto	../oatpp/test/oatpp/parser/json/mapping/DeserializerTest.cpp	/^class EmptyDto : public DTO {$/;"	c	namespace:oatpp::test::parser::json::mapping::__anon769c5f590110	file:
Endpoint	../oatpp/src/oatpp/web/server/api/ApiController.hpp	/^  typedef oatpp::web::server::api::Endpoint Endpoint;$/;"	t	class:oatpp::web::server::api::ApiController	typeref:typename:oatpp::web::server::api::Endpoint
Endpoint	../oatpp/src/oatpp/web/server/api/Endpoint.cpp	/^Endpoint::Endpoint(const std::shared_ptr<RequestHandler>& pHandler,$/;"	f	class:oatpp::web::server::api::Endpoint
Endpoint	../oatpp/src/oatpp/web/server/api/Endpoint.hpp	/^class Endpoint : public oatpp::base::Countable {$/;"	c	namespace:oatpp::web::server::api
Endpoints	../oatpp/src/oatpp/web/server/api/ApiController.hpp	/^  typedef oatpp::collection::LinkedList<std::shared_ptr<Endpoint>> Endpoints;$/;"	t	class:oatpp::web::server::api::ApiController	typeref:typename:oatpp::collection::LinkedList<std::shared_ptr<Endpoint>>
Enforcement	../oatpp/CODE_OF_CONDUCT.md	/^## Enforcement$/;"	s
Entry	../oatpp/src/oatpp/core/collection/ListMap.hpp	/^    Entry(const K& pKey, const V& pValue, Entry* pNext)$/;"	f	class:oatpp::collection::ListMap::Entry
Entry	../oatpp/src/oatpp/core/collection/ListMap.hpp	/^  class Entry{$/;"	c	class:oatpp::collection::ListMap
EntryHeader	../oatpp/src/oatpp/core/base/memory/MemoryPool.hpp	/^    EntryHeader(MemoryPool* pPool, v_int64 pPoolId, EntryHeader* pNext)$/;"	f	class:oatpp::base::memory::MemoryPool::EntryHeader
EntryHeader	../oatpp/src/oatpp/core/base/memory/MemoryPool.hpp	/^  class EntryHeader {$/;"	c	class:oatpp::base::memory::MemoryPool
Environment	../oatpp/src/oatpp/core/base/Environment.hpp	/^class Environment{$/;"	c	namespace:oatpp::base
Error	../oatpp/src/oatpp/core/async/Coroutine.hpp	/^  typedef oatpp::async::Error Error;$/;"	t	class:oatpp::async::AbstractCoroutine	typeref:typename:oatpp::async::Error
Error	../oatpp/src/oatpp/core/async/Error.cpp	/^Error::Error(const char* what)$/;"	f	class:oatpp::async::Error
Error	../oatpp/src/oatpp/core/async/Error.hpp	/^class Error {$/;"	c	namespace:oatpp::async
ErrorHandler	../oatpp/src/oatpp/web/server/handler/ErrorHandler.hpp	/^class ErrorHandler {$/;"	c	namespace:oatpp::web::server::handler
Example-HLS-Media-Stream [![Build Status](https://dev.azure.com/lganzzzo/lganzzzo/_apis/build/status/oatpp.example-hls-media-stream?branchName=master)](https://dev.azure.com/lganzzzo/lganzzzo/_build?definitionId=12&branchName=master)	README.md	/^# Example-HLS-Media-Stream [![Build Status](https:\/\/dev.azure.com\/lganzzzo\/lganzzzo\/_apis\//;"	c
Examples:	../oatpp/README.md	/^### Examples:$/;"	S
Executor	../oatpp/src/oatpp/core/async/Executor.cpp	/^Executor::Executor(v_int32 processorWorkersCount, v_int32 ioWorkersCount, v_int32 timerWorkersCo/;"	f	class:oatpp::async::Executor
Executor	../oatpp/src/oatpp/core/async/Executor.hpp	/^class Executor {$/;"	c	namespace:oatpp::async
ExecutorCoroutine	../oatpp/src/oatpp/web/client/HttpRequestExecutor.cpp	/^    ExecutorCoroutine(const std::shared_ptr<oatpp::network::ClientConnectionProvider>& connectio/;"	f	class:oatpp::web::client::HttpRequestExecutor::executeAsync::ExecutorCoroutine	file:
ExecutorCoroutine	../oatpp/src/oatpp/web/client/HttpRequestExecutor.cpp	/^  class ExecutorCoroutine : public oatpp::async::CoroutineWithResult<ExecutorCoroutine, const st/;"	c	function:oatpp::web::client::HttpRequestExecutor::executeAsync	file:
FIFOBuffer	../oatpp/src/oatpp/core/data/buffer/FIFOBuffer.cpp	/^FIFOBuffer::FIFOBuffer(void* buffer, v_io_size bufferSize,$/;"	f	class:oatpp::data::buffer::FIFOBuffer
FIFOBuffer	../oatpp/src/oatpp/core/data/buffer/FIFOBuffer.hpp	/^class FIFOBuffer : public std::enable_shared_from_this<FIFOBuffer> {$/;"	c	namespace:oatpp::data::buffer
FUNCTION_ANY_END	../oatpp/src/oatpp/web/url/mapping/Pattern.cpp	/^const char* Pattern::Part::FUNCTION_ANY_END = "tail";$/;"	m	class:oatpp::web::url::mapping::Pattern::Part	typeref:typename:const char *
FUNCTION_ANY_END	../oatpp/src/oatpp/web/url/mapping/Pattern.hpp	/^    static const char* FUNCTION_ANY_END;$/;"	m	class:oatpp::web::url::mapping::Pattern::Part	typeref:typename:const char *
FUNCTION_CONST	../oatpp/src/oatpp/web/url/mapping/Pattern.cpp	/^const char* Pattern::Part::FUNCTION_CONST = "const";$/;"	m	class:oatpp::web::url::mapping::Pattern::Part	typeref:typename:const char *
FUNCTION_CONST	../oatpp/src/oatpp/web/url/mapping/Pattern.hpp	/^    static const char* FUNCTION_CONST;$/;"	m	class:oatpp::web::url::mapping::Pattern::Part	typeref:typename:const char *
FUNCTION_VAR	../oatpp/src/oatpp/web/url/mapping/Pattern.cpp	/^const char* Pattern::Part::FUNCTION_VAR = "var";$/;"	m	class:oatpp::web::url::mapping::Pattern::Part	typeref:typename:const char *
FUNCTION_VAR	../oatpp/src/oatpp/web/url/mapping/Pattern.hpp	/^    static const char* FUNCTION_VAR;$/;"	m	class:oatpp::web::url::mapping::Pattern::Part	typeref:typename:const char *
FastQueue	../oatpp/src/oatpp/core/collection/FastQueue.hpp	/^  FastQueue()$/;"	f	class:oatpp::collection::FastQueue
FastQueue	../oatpp/src/oatpp/core/collection/FastQueue.hpp	/^class FastQueue {$/;"	c	namespace:oatpp::collection
Features	../oatpp/README.md	/^## Features$/;"	s
Fields	../oatpp/src/oatpp/core/data/mapping/type/Object.hpp	/^  using Fields = oatpp::data::mapping::type::ListMap<String, Value>;$/;"	t	class:oatpp::data::mapping::type::Object	typeref:typename:oatpp::data::mapping::type::ListMap<String,Value>
Fields	../oatpp/src/oatpp/web/server/api/ApiController.hpp	/^  using Fields = oatpp::data::mapping::type::ListMap<String, Value>;$/;"	t	class:oatpp::web::server::api::ApiController	typeref:typename:oatpp::data::mapping::type::ListMap<String,Value>
Files	README.md	/^### Files$/;"	S
Float32	../oatpp/src/oatpp/core/Types.hpp	/^  typedef oatpp::data::mapping::type::Float32 Float32;$/;"	t	namespace:oatpp	typeref:typename:oatpp::data::mapping::type::Float32
Float32	../oatpp/src/oatpp/core/data/mapping/type/Object.hpp	/^  typedef oatpp::data::mapping::type::Float32 Float32;$/;"	t	class:oatpp::data::mapping::type::Object	typeref:typename:oatpp::data::mapping::type::Float32
Float32	../oatpp/src/oatpp/core/data/mapping/type/Primitive.hpp	/^  class Float32 {$/;"	c	namespace:oatpp::data::mapping::type::__class
Float32	../oatpp/src/oatpp/core/data/mapping/type/Primitive.hpp	/^typedef Primitive<v_float32, __class::Float32>::ObjectWrapper Float32;$/;"	t	namespace:oatpp::data::mapping::type	typeref:typename:Primitive<v_float32,__class::Float32>::ObjectWrapper
Float32	../oatpp/src/oatpp/parser/json/mapping/Deserializer.hpp	/^  typedef oatpp::data::mapping::type::Float32 Float32;$/;"	t	class:oatpp::parser::json::mapping::Deserializer	typeref:typename:oatpp::data::mapping::type::Float32
Float32	../oatpp/src/oatpp/web/client/ApiClient.hpp	/^  typedef oatpp::data::mapping::type::Float32 Float32;$/;"	t	class:oatpp::web::client::ApiClient	typeref:typename:oatpp::data::mapping::type::Float32
Float32	../oatpp/src/oatpp/web/server/api/ApiController.hpp	/^  typedef oatpp::data::mapping::type::Float32 Float32;$/;"	t	class:oatpp::web::server::api::ApiController	typeref:typename:oatpp::data::mapping::type::Float32
Float32	../oatpp/test/oatpp/core/base/RegRuleTest.cpp	/^  typedef oatpp::data::mapping::type::Float32 Float32;$/;"	t	namespace:oatpp::test::base::__anon40c2e60e0110	typeref:typename:oatpp::data::mapping::type::Float32	file:
Float64	../oatpp/src/oatpp/core/Types.hpp	/^  typedef oatpp::data::mapping::type::Float64 Float64;$/;"	t	namespace:oatpp	typeref:typename:oatpp::data::mapping::type::Float64
Float64	../oatpp/src/oatpp/core/data/mapping/type/Object.hpp	/^  typedef oatpp::data::mapping::type::Float64 Float64;$/;"	t	class:oatpp::data::mapping::type::Object	typeref:typename:oatpp::data::mapping::type::Float64
Float64	../oatpp/src/oatpp/core/data/mapping/type/Primitive.hpp	/^  class Float64 {$/;"	c	namespace:oatpp::data::mapping::type::__class
Float64	../oatpp/src/oatpp/core/data/mapping/type/Primitive.hpp	/^typedef Primitive<v_float64, __class::Float64>::ObjectWrapper Float64;$/;"	t	namespace:oatpp::data::mapping::type	typeref:typename:Primitive<v_float64,__class::Float64>::ObjectWrapper
Float64	../oatpp/src/oatpp/parser/json/mapping/Deserializer.hpp	/^  typedef oatpp::data::mapping::type::Float64 Float64;$/;"	t	class:oatpp::parser::json::mapping::Deserializer	typeref:typename:oatpp::data::mapping::type::Float64
Float64	../oatpp/src/oatpp/web/client/ApiClient.hpp	/^  typedef oatpp::data::mapping::type::Float64 Float64;$/;"	t	class:oatpp::web::client::ApiClient	typeref:typename:oatpp::data::mapping::type::Float64
Float64	../oatpp/src/oatpp/web/server/api/ApiController.hpp	/^  typedef oatpp::data::mapping::type::Float64 Float64;$/;"	t	class:oatpp::web::server::api::ApiController	typeref:typename:oatpp::data::mapping::type::Float64
Float64	../oatpp/test/oatpp/core/base/RegRuleTest.cpp	/^  typedef oatpp::data::mapping::type::Float64 Float64;$/;"	t	namespace:oatpp::test::base::__anon40c2e60e0110	typeref:typename:oatpp::data::mapping::type::Float64	file:
FlushCoroutine	../oatpp/src/oatpp/core/data/buffer/FIFOBuffer.cpp	/^    FlushCoroutine(const std::shared_ptr<FIFOBuffer>& fifo, const std::shared_ptr<data::stream::/;"	f	class:oatpp::data::buffer::FIFOBuffer::flushToStreamAsync::FlushCoroutine	file:
FlushCoroutine	../oatpp/src/oatpp/core/data/buffer/FIFOBuffer.cpp	/^  class FlushCoroutine : public oatpp::async::Coroutine<FlushCoroutine> {$/;"	c	function:oatpp::data::buffer::FIFOBuffer::flushToStreamAsync	file:
FlushCoroutine	../oatpp/src/oatpp/core/data/stream/ChunkedBuffer.cpp	/^    FlushCoroutine(const std::shared_ptr<ChunkedBuffer>& chunkedBuffer,$/;"	f	class:oatpp::data::stream::ChunkedBuffer::flushToStreamAsync::FlushCoroutine	file:
FlushCoroutine	../oatpp/src/oatpp/core/data/stream/ChunkedBuffer.cpp	/^  class FlushCoroutine : public oatpp::async::Coroutine<FlushCoroutine> {$/;"	c	function:oatpp::data::stream::ChunkedBuffer::flushToStreamAsync	file:
FullAsyncClientTest	../oatpp/test/oatpp/web/FullAsyncClientTest.hpp	/^  FullAsyncClientTest(v_int32 port, v_int32 connectionsPerEndpoint)$/;"	f	class:oatpp::test::web::FullAsyncClientTest
FullAsyncClientTest	../oatpp/test/oatpp/web/FullAsyncClientTest.hpp	/^class FullAsyncClientTest : public UnitTest {$/;"	c	namespace:oatpp::test::web
FullAsyncTest	../oatpp/test/oatpp/web/FullAsyncTest.hpp	/^  FullAsyncTest(v_int32 port, v_int32 iterationsPerStep)$/;"	f	class:oatpp::test::web::FullAsyncTest
FullAsyncTest	../oatpp/test/oatpp/web/FullAsyncTest.hpp	/^class FullAsyncTest : public UnitTest {$/;"	c	namespace:oatpp::test::web
FullTest	../oatpp/test/oatpp/web/FullTest.hpp	/^  FullTest(v_int32 port, v_int32 iterationsPerStep)$/;"	f	class:oatpp::test::web::FullTest
FullTest	../oatpp/test/oatpp/web/FullTest.hpp	/^class FullTest : public UnitTest {$/;"	c	namespace:oatpp::test::web
Function	../oatpp/src/oatpp/core/async/Coroutine.hpp	/^  typedef Action (T::*Function)();$/;"	t	class:oatpp::async::Coroutine	typeref:typename:Action (T::*)()
Function	../oatpp/src/oatpp/core/async/Coroutine.hpp	/^  typedef Action (T::*Function)();$/;"	t	class:oatpp::async::CoroutineWithResult	typeref:typename:Action (T::*)()
FunctionPtr	../oatpp/src/oatpp/core/async/Coroutine.hpp	/^  typedef Action (AbstractCoroutine::*FunctionPtr)();$/;"	t	class:oatpp::async::AbstractCoroutine	typeref:typename:Action (AbstractCoroutine::*)()
FunctionPtr	../oatpp/src/oatpp/core/async/Coroutine.hpp	/^  typedef Action (AbstractCoroutine::*FunctionPtr)();$/;"	t	class:oatpp::async::Action	typeref:typename:Action (AbstractCoroutine::*)()
GetConnectionCoroutine	../oatpp/src/oatpp/web/client/HttpRequestExecutor.cpp	/^    GetConnectionCoroutine(const std::shared_ptr<oatpp::network::ClientConnectionProvider>& conn/;"	f	class:oatpp::web::client::HttpRequestExecutor::getConnectionAsync::GetConnectionCoroutine	file:
GetConnectionCoroutine	../oatpp/src/oatpp/web/client/HttpRequestExecutor.cpp	/^  class GetConnectionCoroutine : public oatpp::async::CoroutineWithResult<GetConnectionCoroutine/;"	c	function:oatpp::web::client::HttpRequestExecutor::getConnectionAsync	file:
HEADER	../oatpp/src/oatpp/codegen/codegen_define_ApiClient_.hpp	/^#define HEADER(/;"	d
HEADER	../oatpp/src/oatpp/codegen/codegen_define_ApiController_.hpp	/^#define HEADER(/;"	d
HEX	../oatpp/build/CMakeFiles/3.14.5/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#define HEX(/;"	d	file:
HOST	../oatpp/src/oatpp/web/protocol/http/Http.cpp	/^const char* const Header::HOST = "Host";$/;"	m	class:oatpp::web::protocol::http::Header	typeref:typename:const char * const
HOST	../oatpp/src/oatpp/web/protocol/http/Http.hpp	/^  static const char* const HOST;                \/\/ "Host"$/;"	m	class:oatpp::web::protocol::http::Header	typeref:typename:const char * const
Handler	../oatpp/src/oatpp/web/server/api/ApiController.hpp	/^    Handler(T* controller, Method method, MethodAsync methodAsync)$/;"	f	class:oatpp::web::server::api::ApiController::Handler
Handler	../oatpp/src/oatpp/web/server/api/ApiController.hpp	/^  class Handler : public oatpp::web::server::HttpRequestHandler {$/;"	c	class:oatpp::web::server::api::ApiController
HandlerCoroutine	../oatpp/src/oatpp/web/server/api/ApiController.hpp	/^    HandlerCoroutine(ControllerT* pController,$/;"	f	class:oatpp::web::server::api::ApiController::HandlerCoroutine
HandlerCoroutine	../oatpp/src/oatpp/web/server/api/ApiController.hpp	/^  class HandlerCoroutine : public oatpp::async::CoroutineWithResult<CoroutineT, const std::share/;"	c	class:oatpp::web::server::api::ApiController
Header	../oatpp/src/oatpp/web/client/ApiClient.hpp	/^  typedef oatpp::web::protocol::http::Header Header;$/;"	t	class:oatpp::web::client::ApiClient	typeref:typename:oatpp::web::protocol::http::Header
Header	../oatpp/src/oatpp/web/client/HttpRequestExecutor.hpp	/^  typedef oatpp::web::protocol::http::Header Header;$/;"	t	class:oatpp::web::client::HttpRequestExecutor	typeref:typename:oatpp::web::protocol::http::Header
Header	../oatpp/src/oatpp/web/protocol/http/Http.hpp	/^class Header {$/;"	c	namespace:oatpp::web::protocol::http
Header	../oatpp/src/oatpp/web/server/HttpRequestHandler.hpp	/^  typedef oatpp::web::protocol::http::Header Header;$/;"	t	class:oatpp::web::server::HttpRequestHandler	typeref:typename:oatpp::web::protocol::http::Header
Header	../oatpp/src/oatpp/web/server/api/ApiController.hpp	/^  typedef oatpp::web::protocol::http::Header Header;$/;"	t	class:oatpp::web::server::api::ApiController	typeref:typename:oatpp::web::protocol::http::Header
Headers	../oatpp/src/oatpp/web/client/RequestExecutor.hpp	/^  typedef oatpp::web::protocol::http::Headers Headers;$/;"	t	class:oatpp::web::client::RequestExecutor	typeref:typename:oatpp::web::protocol::http::Headers
Headers	../oatpp/src/oatpp/web/protocol/http/Http.hpp	/^typedef std::unordered_map<oatpp::data::share::StringKeyLabelCI_FAST, oatpp::data::share::String/;"	t	namespace:oatpp::web::protocol::http	typeref:typename:std::unordered_map<oatpp::data::share::StringKeyLabelCI_FAST,oatpp::data::share::StringKeyLabel>
Headers	../oatpp/src/oatpp/web/protocol/http/outgoing/Body.hpp	/^  typedef http::Headers Headers;$/;"	t	class:oatpp::web::protocol::http::outgoing::Body	typeref:typename:http::Headers
Headers	../oatpp/src/oatpp/web/protocol/http/outgoing/Request.hpp	/^  typedef protocol::http::Headers Headers;$/;"	t	class:oatpp::web::protocol::http::outgoing::Request	typeref:typename:protocol::http::Headers
Headers	../oatpp/src/oatpp/web/protocol/http/outgoing/Response.hpp	/^  typedef http::Headers Headers;$/;"	t	class:oatpp::web::protocol::http::outgoing::Response	typeref:typename:http::Headers
Headers	../oatpp/src/oatpp/web/server/HttpRequestHandler.hpp	/^  typedef oatpp::web::protocol::http::Headers Headers;$/;"	t	class:oatpp::web::server::HttpRequestHandler	typeref:typename:oatpp::web::protocol::http::Headers
Hex	../oatpp/src/oatpp/encoding/Hex.hpp	/^class Hex {$/;"	c	namespace:oatpp::encoding
How to contribute	../oatpp/CONTRIBUTING.md	/^## How to contribute$/;"	s
How to start	../oatpp/README.md	/^## How to start$/;"	s
HttpConnectionHandle	../oatpp/src/oatpp/web/client/HttpRequestExecutor.hpp	/^    HttpConnectionHandle(const std::shared_ptr<oatpp::network::ConnectionProvider::IOStream>& st/;"	f	class:oatpp::web::client::HttpRequestExecutor::HttpConnectionHandle
HttpConnectionHandle	../oatpp/src/oatpp/web/client/HttpRequestExecutor.hpp	/^  class HttpConnectionHandle : public ConnectionHandle {$/;"	c	class:oatpp::web::client::HttpRequestExecutor
HttpConnectionHandler	../oatpp/src/oatpp/web/server/HttpConnectionHandler.cpp	/^HttpConnectionHandler::HttpConnectionHandler(const std::shared_ptr<HttpRouter>& router)$/;"	f	class:oatpp::web::server::HttpConnectionHandler
HttpConnectionHandler	../oatpp/src/oatpp/web/server/HttpConnectionHandler.hpp	/^class HttpConnectionHandler : public base::Countable, public network::server::ConnectionHandler /;"	c	namespace:oatpp::web::server
HttpError	../oatpp/src/oatpp/web/protocol/http/Http.hpp	/^  HttpError(const Info& info, const oatpp::String& message)$/;"	f	class:oatpp::web::protocol::http::HttpError
HttpError	../oatpp/src/oatpp/web/protocol/http/Http.hpp	/^  HttpError(const Status& status, const oatpp::String& message)$/;"	f	class:oatpp::web::protocol::http::HttpError
HttpError	../oatpp/src/oatpp/web/protocol/http/Http.hpp	/^class HttpError : public protocol::ProtocolError<Status> {$/;"	c	namespace:oatpp::web::protocol::http
HttpError	../oatpp/src/oatpp/web/server/HttpRequestHandler.hpp	/^  typedef oatpp::web::protocol::http::HttpError HttpError;$/;"	t	class:oatpp::web::server::HttpRequestHandler	typeref:typename:oatpp::web::protocol::http::HttpError
HttpProcessor	../oatpp/src/oatpp/web/server/HttpProcessor.hpp	/^class HttpProcessor {$/;"	c	namespace:oatpp::web::server
HttpRequestExecutor	../oatpp/src/oatpp/web/client/HttpRequestExecutor.cpp	/^HttpRequestExecutor::HttpRequestExecutor(const std::shared_ptr<oatpp::network::ClientConnectionP/;"	f	class:oatpp::web::client::HttpRequestExecutor
HttpRequestExecutor	../oatpp/src/oatpp/web/client/HttpRequestExecutor.hpp	/^class HttpRequestExecutor : public oatpp::base::Countable, public RequestExecutor {$/;"	c	namespace:oatpp::web::client
HttpRequestHandler	../oatpp/src/oatpp/web/server/HttpRequestHandler.hpp	/^class HttpRequestHandler {$/;"	c	namespace:oatpp::web::server
HttpRouter	../oatpp/src/oatpp-test/web/ClientServerTestRunner.hpp	/^  typedef oatpp::web::server::HttpRouter HttpRouter;$/;"	t	class:oatpp::test::web::ClientServerTestRunner	typeref:typename:oatpp::web::server::HttpRouter
HttpRouter	../oatpp/src/oatpp/web/server/HttpRouter.cpp	/^HttpRouter::HttpRouter()$/;"	f	class:oatpp::web::server::HttpRouter
HttpRouter	../oatpp/src/oatpp/web/server/HttpRouter.hpp	/^class HttpRouter : public oatpp::base::Countable {$/;"	c	namespace:oatpp::web::server
IO	../oatpp/src/oatpp/core/async/worker/Worker.hpp	/^    IO = 2,$/;"	e	enum:oatpp::async::worker::Worker::Type
IOBuffer	../oatpp/src/oatpp/core/data/buffer/IOBuffer.cpp	/^IOBuffer::IOBuffer()$/;"	f	class:oatpp::data::buffer::IOBuffer
IOBuffer	../oatpp/src/oatpp/core/data/buffer/IOBuffer.hpp	/^class IOBuffer : public oatpp::base::Countable {$/;"	c	namespace:oatpp::data::buffer
IOData	../oatpp/src/oatpp/core/async/Coroutine.hpp	/^  struct IOData {$/;"	s	class:oatpp::async::Action
IOError	../oatpp/src/oatpp/core/data/IODefinitions.hpp	/^enum IOError : v_io_size {$/;"	g	namespace:oatpp::data	typeref:typename:v_io_size
IOEventType	../oatpp/src/oatpp/core/async/Coroutine.hpp	/^  enum IOEventType : v_int32 {$/;"	g	class:oatpp::async::Action	typeref:typename:v_int32
IOEventWorker	../oatpp/src/oatpp/core/async/worker/IOEventWorker.hpp	/^class IOEventWorker : public Worker {$/;"	c	namespace:oatpp::async::worker
IOEventWorker	../oatpp/src/oatpp/core/async/worker/IOEventWorker_common.cpp	/^IOEventWorker::IOEventWorker(IOEventWorkerForeman* foreman, Action::IOEventType specialization)$/;"	f	class:oatpp::async::worker::IOEventWorker
IOEventWorkerForeman	../oatpp/src/oatpp/core/async/worker/IOEventWorker.hpp	/^class IOEventWorkerForeman : public Worker {$/;"	c	namespace:oatpp::async::worker
IOEventWorkerForeman	../oatpp/src/oatpp/core/async/worker/IOEventWorker_common.cpp	/^IOEventWorkerForeman::IOEventWorkerForeman()$/;"	f	class:oatpp::async::worker::IOEventWorkerForeman
IOMode	../oatpp/src/oatpp/core/data/stream/Stream.hpp	/^enum IOMode : v_int32 {$/;"	g	namespace:oatpp::data::stream	typeref:typename:v_int32
IOStream	../oatpp/src/oatpp/core/data/stream/Stream.hpp	/^class IOStream : public InputStream, public OutputStream {$/;"	c	namespace:oatpp::data::stream
IOStream	../oatpp/src/oatpp/network/ConnectionProvider.hpp	/^  typedef oatpp::data::stream::IOStream IOStream;$/;"	t	class:oatpp::network::ConnectionProvider	typeref:typename:oatpp::data::stream::IOStream
IOStream	../oatpp/src/oatpp/network/server/ConnectionHandler.hpp	/^  typedef oatpp::data::stream::IOStream IOStream;$/;"	t	class:oatpp::network::server::ConnectionHandler	typeref:typename:oatpp::data::stream::IOStream
IOWorker	../oatpp/src/oatpp/core/async/worker/IOWorker.cpp	/^IOWorker::IOWorker()$/;"	f	class:oatpp::async::worker::IOWorker
IOWorker	../oatpp/src/oatpp/core/async/worker/IOWorker.hpp	/^class IOWorker : public Worker {$/;"	c	namespace:oatpp::async::worker
IO_EVENT_READ	../oatpp/src/oatpp/core/async/Coroutine.hpp	/^    IO_EVENT_READ = 256,$/;"	e	enum:oatpp::async::Action::IOEventType
IO_EVENT_WRITE	../oatpp/src/oatpp/core/async/Coroutine.hpp	/^    IO_EVENT_WRITE = 512$/;"	e	enum:oatpp::async::Action::IOEventType
In Docker	README.md	/^#### In Docker$/;"	t
IncomingRequest	../oatpp/src/oatpp/web/server/HttpRequestHandler.hpp	/^  typedef oatpp::web::protocol::http::incoming::Request IncomingRequest;$/;"	t	class:oatpp::web::server::HttpRequestHandler	typeref:typename:oatpp::web::protocol::http::incoming::Request
IncomingRequest	../oatpp/src/oatpp/web/server/api/ApiController.hpp	/^  typedef oatpp::web::protocol::http::incoming::Request IncomingRequest;$/;"	t	class:oatpp::web::server::api::ApiController	typeref:typename:oatpp::web::protocol::http::incoming::Request
IncomingRequest	../oatpp/src/oatpp/web/server/handler/Interceptor.hpp	/^  typedef oatpp::web::protocol::http::incoming::Request IncomingRequest;$/;"	t	class:oatpp::web::server::handler::RequestInterceptor	typeref:typename:oatpp::web::protocol::http::incoming::Request
IncomingResponse	../oatpp/src/oatpp/web/server/api/ApiController.hpp	/^  typedef oatpp::web::protocol::http::incoming::Response IncomingResponse;$/;"	t	class:oatpp::web::server::api::ApiController	typeref:typename:oatpp::web::protocol::http::incoming::Response
IncomingResponse	../oatpp/test/oatpp/web/FullAsyncClientTest.cpp	/^typedef oatpp::web::protocol::http::incoming::Response IncomingResponse;$/;"	t	namespace:oatpp::test::web::__anonb368a9f30110	typeref:typename:oatpp::web::protocol::http::incoming::Response	file:
IndexSequence	../oatpp/src/oatpp/core/async/Processor.hpp	/^  template<int ...> struct IndexSequence {};$/;"	s	class:oatpp::async::Processor
Info	../oatpp/src/oatpp/core/data/mapping/ObjectMapper.hpp	/^    Info(const char* _http_content_type)$/;"	f	class:oatpp::data::mapping::ObjectMapper::Info
Info	../oatpp/src/oatpp/core/data/mapping/ObjectMapper.hpp	/^  class Info {$/;"	c	class:oatpp::data::mapping::ObjectMapper
Info	../oatpp/src/oatpp/web/protocol/CommunicationError.hpp	/^  typedef ProtocolErrorInfo<Status> Info;$/;"	t	class:oatpp::web::protocol::AsyncProtocolError	typeref:typename:ProtocolErrorInfo<Status>
Info	../oatpp/src/oatpp/web/protocol/CommunicationError.hpp	/^  typedef ProtocolErrorInfo<Status> Info;$/;"	t	class:oatpp::web::protocol::ProtocolError	typeref:typename:ProtocolErrorInfo<Status>
Info	../oatpp/src/oatpp/web/server/api/Endpoint.cpp	/^Endpoint::Info::Info()$/;"	f	class:oatpp::web::server::api::Endpoint::Info
Info	../oatpp/src/oatpp/web/server/api/Endpoint.hpp	/^  class Info : public oatpp::base::Countable {$/;"	c	class:oatpp::web::server::api::Endpoint
InputStream	../oatpp/src/oatpp/core/data/stream/Stream.hpp	/^class InputStream {$/;"	c	namespace:oatpp::data::stream
InputStreamBufferedProxy	../oatpp/src/oatpp/core/data/stream/StreamBufferedProxy.hpp	/^  InputStreamBufferedProxy(const std::shared_ptr<InputStream>& inputStream,$/;"	f	class:oatpp::data::stream::InputStreamBufferedProxy
InputStreamBufferedProxy	../oatpp/src/oatpp/core/data/stream/StreamBufferedProxy.hpp	/^class InputStreamBufferedProxy : public oatpp::base::Countable, public InputStream {$/;"	c	namespace:oatpp::data::stream
Int16	../oatpp/src/oatpp/core/Types.hpp	/^  typedef oatpp::data::mapping::type::Int16 Int16;$/;"	t	namespace:oatpp	typeref:typename:oatpp::data::mapping::type::Int16
Int16	../oatpp/src/oatpp/core/data/mapping/type/Object.hpp	/^  typedef oatpp::data::mapping::type::Int16 Int16;$/;"	t	class:oatpp::data::mapping::type::Object	typeref:typename:oatpp::data::mapping::type::Int16
Int16	../oatpp/src/oatpp/core/data/mapping/type/Primitive.hpp	/^  class Int16 {$/;"	c	namespace:oatpp::data::mapping::type::__class
Int16	../oatpp/src/oatpp/core/data/mapping/type/Primitive.hpp	/^typedef Primitive<v_int16, __class::Int16>::ObjectWrapper Int16;$/;"	t	namespace:oatpp::data::mapping::type	typeref:typename:Primitive<v_int16,__class::Int16>::ObjectWrapper
Int32	../oatpp/src/oatpp/core/Types.hpp	/^  typedef oatpp::data::mapping::type::Int32 Int32;$/;"	t	namespace:oatpp	typeref:typename:oatpp::data::mapping::type::Int32
Int32	../oatpp/src/oatpp/core/data/mapping/type/Object.hpp	/^  typedef oatpp::data::mapping::type::Int32 Int32;$/;"	t	class:oatpp::data::mapping::type::Object	typeref:typename:oatpp::data::mapping::type::Int32
Int32	../oatpp/src/oatpp/core/data/mapping/type/Primitive.hpp	/^  class Int32 {$/;"	c	namespace:oatpp::data::mapping::type::__class
Int32	../oatpp/src/oatpp/core/data/mapping/type/Primitive.hpp	/^typedef Primitive<v_int32, __class::Int32>::ObjectWrapper Int32;$/;"	t	namespace:oatpp::data::mapping::type	typeref:typename:Primitive<v_int32,__class::Int32>::ObjectWrapper
Int32	../oatpp/src/oatpp/parser/json/mapping/Deserializer.hpp	/^  typedef oatpp::data::mapping::type::Int32 Int32;$/;"	t	class:oatpp::parser::json::mapping::Deserializer	typeref:typename:oatpp::data::mapping::type::Int32
Int32	../oatpp/src/oatpp/web/client/ApiClient.hpp	/^  typedef oatpp::data::mapping::type::Int32 Int32;$/;"	t	class:oatpp::web::client::ApiClient	typeref:typename:oatpp::data::mapping::type::Int32
Int32	../oatpp/src/oatpp/web/server/api/ApiController.hpp	/^  typedef oatpp::data::mapping::type::Int32 Int32;$/;"	t	class:oatpp::web::server::api::ApiController	typeref:typename:oatpp::data::mapping::type::Int32
Int32	../oatpp/test/oatpp/core/base/RegRuleTest.cpp	/^  typedef oatpp::data::mapping::type::Int32 Int32;$/;"	t	namespace:oatpp::test::base::__anon40c2e60e0110	typeref:typename:oatpp::data::mapping::type::Int32	file:
Int64	../oatpp/src/oatpp/core/Types.hpp	/^  typedef oatpp::data::mapping::type::Int64 Int64;$/;"	t	namespace:oatpp	typeref:typename:oatpp::data::mapping::type::Int64
Int64	../oatpp/src/oatpp/core/data/mapping/type/Object.hpp	/^  typedef oatpp::data::mapping::type::Int64 Int64;$/;"	t	class:oatpp::data::mapping::type::Object	typeref:typename:oatpp::data::mapping::type::Int64
Int64	../oatpp/src/oatpp/core/data/mapping/type/Primitive.hpp	/^  class Int64 {$/;"	c	namespace:oatpp::data::mapping::type::__class
Int64	../oatpp/src/oatpp/core/data/mapping/type/Primitive.hpp	/^typedef Primitive<v_int64, __class::Int64>::ObjectWrapper Int64;$/;"	t	namespace:oatpp::data::mapping::type	typeref:typename:Primitive<v_int64,__class::Int64>::ObjectWrapper
Int64	../oatpp/src/oatpp/parser/json/mapping/Deserializer.hpp	/^  typedef oatpp::data::mapping::type::Int64 Int64;$/;"	t	class:oatpp::parser::json::mapping::Deserializer	typeref:typename:oatpp::data::mapping::type::Int64
Int64	../oatpp/src/oatpp/web/client/ApiClient.hpp	/^  typedef oatpp::data::mapping::type::Int64 Int64;$/;"	t	class:oatpp::web::client::ApiClient	typeref:typename:oatpp::data::mapping::type::Int64
Int64	../oatpp/src/oatpp/web/server/api/ApiController.hpp	/^  typedef oatpp::data::mapping::type::Int64 Int64;$/;"	t	class:oatpp::web::server::api::ApiController	typeref:typename:oatpp::data::mapping::type::Int64
Int64	../oatpp/test/oatpp/core/base/RegRuleTest.cpp	/^  typedef oatpp::data::mapping::type::Int64 Int64;$/;"	t	namespace:oatpp::test::base::__anon40c2e60e0110	typeref:typename:oatpp::data::mapping::type::Int64	file:
Int8	../oatpp/src/oatpp/core/Types.hpp	/^  typedef oatpp::data::mapping::type::Int8 Int8;$/;"	t	namespace:oatpp	typeref:typename:oatpp::data::mapping::type::Int8
Int8	../oatpp/src/oatpp/core/data/mapping/type/Object.hpp	/^  typedef oatpp::data::mapping::type::Int8 Int8;$/;"	t	class:oatpp::data::mapping::type::Object	typeref:typename:oatpp::data::mapping::type::Int8
Int8	../oatpp/src/oatpp/core/data/mapping/type/Primitive.hpp	/^  class Int8 {$/;"	c	namespace:oatpp::data::mapping::type::__class
Int8	../oatpp/src/oatpp/core/data/mapping/type/Primitive.hpp	/^typedef Primitive<v_int8, __class::Int8>::ObjectWrapper Int8;$/;"	t	namespace:oatpp::data::mapping::type	typeref:typename:Primitive<v_int8,__class::Int8>::ObjectWrapper
Interface	../oatpp/src/oatpp/network/virtual_/Interface.hpp	/^  Interface(const oatpp::String& name)$/;"	f	class:oatpp::network::virtual_::Interface
Interface	../oatpp/src/oatpp/network/virtual_/Interface.hpp	/^class Interface : public oatpp::base::Countable {$/;"	c	namespace:oatpp::network::virtual_
Interface	../oatpp/test/oatpp/network/virtual_/InterfaceTest.cpp	/^  typedef oatpp::network::virtual_::Interface Interface;$/;"	t	namespace:oatpp::test::network::virtual_::__anoncbc809950110	typeref:typename:oatpp::network::virtual_::Interface	file:
InterfaceTest	../oatpp/test/oatpp/network/virtual_/InterfaceTest.hpp	/^  InterfaceTest():UnitTest("TEST[network::virtual_::InterfaceTest]"){}$/;"	f	class:oatpp::test::network::virtual_::InterfaceTest
InterfaceTest	../oatpp/test/oatpp/network/virtual_/InterfaceTest.hpp	/^class InterfaceTest : public UnitTest {$/;"	c	namespace:oatpp::test::network::virtual_
Join the community	../oatpp/CONTRIBUTING.md	/^### Join the community$/;"	S
Label	../oatpp/src/oatpp/core/parser/Caret.cpp	/^  Caret::Label::Label(Caret* caret)$/;"	f	class:oatpp::parser::Caret::Label
Label	../oatpp/src/oatpp/core/parser/Caret.hpp	/^  class Label {$/;"	c	class:oatpp::parser::Caret
LinkedList	../oatpp/src/oatpp/core/collection/LinkedList.hpp	/^  LinkedList()$/;"	f	class:oatpp::collection::LinkedList
LinkedList	../oatpp/src/oatpp/core/collection/LinkedList.hpp	/^class LinkedList : public base::Countable {$/;"	c	namespace:oatpp::collection
LinkedListNode	../oatpp/src/oatpp/core/collection/LinkedList.hpp	/^    LinkedListNode(const T& nodeData, LinkedListNode* nextNode)$/;"	f	class:oatpp::collection::LinkedList::LinkedListNode
LinkedListNode	../oatpp/src/oatpp/core/collection/LinkedList.hpp	/^  class LinkedListNode {$/;"	c	class:oatpp::collection::LinkedList
LinkedListTest	../oatpp/test/oatpp/core/base/collection/LinkedListTest.hpp	/^  LinkedListTest():UnitTest("TEST[oatpp::collection::LinkedListTest]"){}$/;"	f	class:oatpp::test::collection::LinkedListTest
LinkedListTest	../oatpp/test/oatpp/core/base/collection/LinkedListTest.hpp	/^class LinkedListTest : public UnitTest{$/;"	c	namespace:oatpp::test::collection
List	../oatpp/src/oatpp/core/data/mapping/type/List.hpp	/^  class List : public AbstractList {$/;"	c	namespace:oatpp::data::mapping::type::__class
List	../oatpp/src/oatpp/core/data/mapping/type/List.hpp	/^using List = ListTypeTemplate<T, __class::List<T>>;$/;"	t	namespace:oatpp::data::mapping::type	typeref:typename:ListTypeTemplate<T,__class::List<T>>
List	../oatpp/src/oatpp/core/data/mapping/type/Object.hpp	/^  using List = oatpp::data::mapping::type::List<T>;$/;"	t	class:oatpp::data::mapping::type::Object	typeref:typename:oatpp::data::mapping::type::List<T>
List	../oatpp/src/oatpp/web/server/api/ApiController.hpp	/^  using List = oatpp::data::mapping::type::List<T>;$/;"	t	class:oatpp::web::server::api::ApiController	typeref:typename:oatpp::data::mapping::type::List<T>
ListMap	../oatpp/src/oatpp/core/collection/ListMap.hpp	/^  ListMap()$/;"	f	class:oatpp::collection::ListMap
ListMap	../oatpp/src/oatpp/core/collection/ListMap.hpp	/^class ListMap : public oatpp::base::Countable {$/;"	c	namespace:oatpp::collection
ListMap	../oatpp/src/oatpp/core/data/mapping/type/ListMap.hpp	/^  ListMap()$/;"	f	class:oatpp::data::mapping::type::ListMap
ListMap	../oatpp/src/oatpp/core/data/mapping/type/ListMap.hpp	/^  class ListMap : public AbstractListMap{$/;"	c	namespace:oatpp::data::mapping::type::__class
ListMap	../oatpp/src/oatpp/core/data/mapping/type/ListMap.hpp	/^class ListMap : public oatpp::collection::ListMap<Key, Value> {$/;"	c	namespace:oatpp::data::mapping::type
ListTypeTemplate	../oatpp/src/oatpp/core/data/mapping/type/List.hpp	/^  ListTypeTemplate()$/;"	f	class:oatpp::data::mapping::type::ListTypeTemplate
ListTypeTemplate	../oatpp/src/oatpp/core/data/mapping/type/List.hpp	/^class ListTypeTemplate : public oatpp::collection::LinkedList<T> {$/;"	c	namespace:oatpp::data::mapping::type
Listener	../oatpp/src/oatpp/core/async/CoroutineWaitList.hpp	/^  class Listener {$/;"	c	class:oatpp::async::CoroutineWaitList
Lock	../oatpp/src/oatpp/core/async/Lock.cpp	/^Lock::Lock()$/;"	f	class:oatpp::async::Lock
Lock	../oatpp/src/oatpp/core/async/Lock.hpp	/^class Lock : private CoroutineWaitList::Listener {$/;"	c	namespace:oatpp::async
LockCoroutine	../oatpp/src/oatpp/core/async/Lock.cpp	/^    LockCoroutine(LockGuard* guard)$/;"	f	class:oatpp::async::LockGuard::lockAsync::LockCoroutine	file:
LockCoroutine	../oatpp/src/oatpp/core/async/Lock.cpp	/^  class LockCoroutine : public Coroutine<LockCoroutine> {$/;"	c	function:oatpp::async::LockGuard::lockAsync	file:
LockGuard	../oatpp/src/oatpp/core/async/Lock.cpp	/^LockGuard::LockGuard()$/;"	f	class:oatpp::async::LockGuard
LockGuard	../oatpp/src/oatpp/core/async/Lock.cpp	/^LockGuard::LockGuard(Lock* lock)$/;"	f	class:oatpp::async::LockGuard
LockGuard	../oatpp/src/oatpp/core/async/Lock.hpp	/^class LockGuard {$/;"	c	namespace:oatpp::async
LockTest	../oatpp/test/oatpp/core/async/LockTest.hpp	/^  LockTest():UnitTest("TEST[async::LockTest]"){}$/;"	f	class:oatpp::test::async::LockTest
LockTest	../oatpp/test/oatpp/core/async/LockTest.hpp	/^class LockTest : public UnitTest{$/;"	c	namespace:oatpp::test::async
Logger	../oatpp/src/oatpp/core/base/Environment.hpp	/^class Logger {$/;"	c	namespace:oatpp::base
MAX_EVENTS	../oatpp/src/oatpp/core/async/worker/IOEventWorker.hpp	/^  static constexpr const v_int32 MAX_EVENTS = 10000;$/;"	m	class:oatpp::async::worker::IOEventWorker	typeref:typename:const v_int32
MAX_LINE_SIZE	../oatpp/src/oatpp/web/protocol/http/incoming/SimpleBodyDecoder.cpp	/^    const v_int32 MAX_LINE_SIZE = 8;$/;"	m	class:oatpp::web::protocol::http::incoming::SimpleBodyDecoder::doChunkedDecodingAsync::ChunkedDecoder	typeref:typename:const v_int32	file:
MINGW	../oatpp/build/CMakeFiles/3.14.5/CMakeCXXCompiler.cmake	/^  set(MINGW 1)$/;"	v
MatchMap	../oatpp/src/oatpp/web/url/mapping/Pattern.hpp	/^    MatchMap() {}$/;"	f	class:oatpp::web::url::mapping::Pattern::MatchMap
MatchMap	../oatpp/src/oatpp/web/url/mapping/Pattern.hpp	/^    MatchMap(const Variables& vars, const StringKeyLabel& urlTail)$/;"	f	class:oatpp::web::url::mapping::Pattern::MatchMap
MatchMap	../oatpp/src/oatpp/web/url/mapping/Pattern.hpp	/^  class MatchMap {$/;"	c	class:oatpp::web::url::mapping::Pattern
MediaController	src/controller/MediaController.hpp	/^  MediaController(const std::shared_ptr<ObjectMapper>& objectMapper)$/;"	f	class:MediaController
MediaController	src/controller/MediaController.hpp	/^class MediaController : public oatpp::web::server::api::ApiController {$/;"	c
MediaController_hpp	src/controller/MediaController.hpp	/^#define MediaController_hpp$/;"	d
MemberCaller	../oatpp/src/oatpp/core/async/Coroutine.hpp	/^    MemberCaller(void* objectPtr)$/;"	f	class:oatpp::async::AbstractCoroutine::MemberCaller
MemberCaller	../oatpp/src/oatpp/core/async/Coroutine.hpp	/^  class MemberCaller {$/;"	c	class:oatpp::async::AbstractCoroutine
MemoryLabel	../oatpp/src/oatpp/core/data/share/MemoryLabel.cpp	/^MemoryLabel::MemoryLabel(const std::shared_ptr<base::StrBuffer>& memHandle, p_char8 data, v_int3/;"	f	class:oatpp::data::share::MemoryLabel
MemoryLabel	../oatpp/src/oatpp/core/data/share/MemoryLabel.hpp	/^  MemoryLabel()$/;"	f	class:oatpp::data::share::MemoryLabel
MemoryLabel	../oatpp/src/oatpp/core/data/share/MemoryLabel.hpp	/^class MemoryLabel {$/;"	c	namespace:oatpp::data::share
MemoryLabelTest	../oatpp/test/oatpp/core/data/share/MemoryLabelTest.hpp	/^  MemoryLabelTest():UnitTest("TEST[core::data::share::MemoryLabelTest]"){}$/;"	f	class:oatpp::test::core::data::share::MemoryLabelTest
MemoryLabelTest	../oatpp/test/oatpp/core/data/share/MemoryLabelTest.hpp	/^class MemoryLabelTest : public UnitTest{$/;"	c	namespace:oatpp::test::core::data::share
MemoryPool	../oatpp/src/oatpp/core/base/memory/MemoryPool.cpp	/^MemoryPool::MemoryPool(const std::string& name, v_int32 entrySize, v_int32 chunkSize)$/;"	f	class:oatpp::base::memory::MemoryPool
MemoryPool	../oatpp/src/oatpp/core/base/memory/MemoryPool.hpp	/^class MemoryPool {$/;"	c	namespace:oatpp::base::memory
MemoryPoolData	../oatpp/src/oatpp-test/Checker.hpp	/^  class MemoryPoolData {$/;"	c	class:oatpp::test::ThreadLocalObjectsChecker
MemoryPoolTest	../oatpp/test/oatpp/core/base/memory/MemoryPoolTest.hpp	/^  MemoryPoolTest():UnitTest("TEST[base::memory::MemoryPoolTest]"){}$/;"	f	class:oatpp::test::memory::MemoryPoolTest
MemoryPoolTest	../oatpp/test/oatpp/core/base/memory/MemoryPoolTest.hpp	/^class MemoryPoolTest : public UnitTest{$/;"	c	namespace:oatpp::test::memory
Method	../oatpp/src/oatpp/web/server/api/ApiController.hpp	/^    typedef std::shared_ptr<OutgoingResponse> (T::*Method)(const std::shared_ptr<protocol::http:/;"	t	class:oatpp::web::server::api::ApiController::Handler	typeref:typename:std::shared_ptr<OutgoingResponse> (T::*)(const std::shared_ptr<protocol::http::incoming::Request> &)
MethodAsync	../oatpp/src/oatpp/web/server/api/ApiController.hpp	/^            (T::*MethodAsync)(const std::shared_ptr<protocol::http::incoming::Request>&);$/;"	t	class:oatpp::web::server::api::ApiController::Handler	typeref:typename:oatpp::async::CoroutineStarterForResult<const std::shared_ptr<OutgoingResponse> &> (T::*)(const std::shared_ptr<protocol::http::incoming::Request> &)
NON_BLOCKING	../oatpp/src/oatpp/core/data/stream/Stream.hpp	/^  NON_BLOCKING = 1$/;"	e	enum:oatpp::data::stream::IOMode
NUM_SYMBOLS	../oatpp/test/oatpp/core/async/LockTest.cpp	/^static constexpr v_int32 NUM_SYMBOLS = 20;$/;"	v	namespace:oatpp::test::async::__anonf33831840110	typeref:typename:v_int32	file:
NotSynchronizedCoroutine	../oatpp/test/oatpp/core/async/LockTest.cpp	/^  NotSynchronizedCoroutine(char symbol, Buff *buff)$/;"	f	class:oatpp::test::async::__anonf33831840110::NotSynchronizedCoroutine	file:
NotSynchronizedCoroutine	../oatpp/test/oatpp/core/async/LockTest.cpp	/^class NotSynchronizedCoroutine : public oatpp::async::Coroutine<NotSynchronizedCoroutine> {$/;"	c	namespace:oatpp::test::async::__anonf33831840110	file:
Note	README.md	/^### Note$/;"	S
Notes	README.md	/^## Notes$/;"	s
OATPP_API_CALL_	../oatpp/src/oatpp/codegen/codegen_define_ApiClient_.hpp	/^#define OATPP_API_CALL_(/;"	d
OATPP_API_CALL_0	../oatpp/src/oatpp/codegen/codegen_define_ApiClient_.hpp	/^#define OATPP_API_CALL_0(/;"	d
OATPP_API_CALL_1	../oatpp/src/oatpp/codegen/codegen_define_ApiClient_.hpp	/^#define OATPP_API_CALL_1(/;"	d
OATPP_API_CALL_ASYNC_	../oatpp/src/oatpp/codegen/codegen_define_ApiClient_.hpp	/^#define OATPP_API_CALL_ASYNC_(/;"	d
OATPP_API_CALL_ASYNC_0	../oatpp/src/oatpp/codegen/codegen_define_ApiClient_.hpp	/^#define OATPP_API_CALL_ASYNC_0(/;"	d
OATPP_API_CALL_ASYNC_1	../oatpp/src/oatpp/codegen/codegen_define_ApiClient_.hpp	/^#define OATPP_API_CALL_ASYNC_1(/;"	d
OATPP_API_CALL_ASYNC__	../oatpp/src/oatpp/codegen/codegen_define_ApiClient_.hpp	/^#define OATPP_API_CALL_ASYNC__(/;"	d
OATPP_API_CALL_ASYNC___	../oatpp/src/oatpp/codegen/codegen_define_ApiClient_.hpp	/^#define OATPP_API_CALL_ASYNC___(/;"	d
OATPP_API_CALL__	../oatpp/src/oatpp/codegen/codegen_define_ApiClient_.hpp	/^#define OATPP_API_CALL__(/;"	d
OATPP_API_CALL___	../oatpp/src/oatpp/codegen/codegen_define_ApiClient_.hpp	/^#define OATPP_API_CALL___(/;"	d
OATPP_ASSERT	../oatpp/src/oatpp/core/base/Environment.hpp	/^#define OATPP_ASSERT(/;"	d
OATPP_ASSERT_HTTP	../oatpp/src/oatpp/web/protocol/http/Http.hpp	/^#define OATPP_ASSERT_HTTP(/;"	d
OATPP_ASYNC_EXECUTOR_THREAD_NUM_DEFAULT	../oatpp/CMakeLists.txt	/^set(OATPP_ASYNC_EXECUTOR_THREAD_NUM_DEFAULT "2" CACHE STRING "oatpp::async::Executor default num/;"	v
OATPP_ASYNC_EXECUTOR_THREAD_NUM_DEFAULT	../oatpp/src/oatpp/core/base/Config.hpp	/^  #define OATPP_ASYNC_EXECUTOR_THREAD_NUM_DEFAULT /;"	d
OATPP_BASE_DIR	../oatpp/build/src/oatppConfig.cmake	/^set(OATPP_BASE_DIR "${PACKAGE_PREFIX_DIR}\/include\/oatpp-0.19.6\/")$/;"	v
OATPP_BASE_DIR	../oatpp/cmake/module-config.cmake.in	/^set(OATPP_BASE_DIR "${PACKAGE_PREFIX_DIR}\/include\/oatpp-@OATPP_MODULE_VERSION@\/")$/;"	v
OATPP_BUILD_TESTS	../oatpp/CMakeLists.txt	/^option(OATPP_BUILD_TESTS "Create test target for oat++" ON)$/;"	D
OATPP_CODEGEN_BEGIN	../oatpp/src/oatpp/core/macro/codegen.hpp	/^#define OATPP_CODEGEN_BEGIN(/;"	d
OATPP_CODEGEN_END	../oatpp/src/oatpp/core/macro/codegen.hpp	/^#define OATPP_CODEGEN_END(/;"	d
OATPP_COMPAT_BUILD_NO_THREAD_LOCAL	../oatpp/CMakeLists.txt	/^option(OATPP_COMPAT_BUILD_NO_THREAD_LOCAL "Disable 'thread_local' feature" OFF)$/;"	D
OATPP_COMPONENT	../oatpp/src/oatpp/core/macro/component.hpp	/^#define OATPP_COMPONENT(/;"	d
OATPP_CREATE_COMPONENT	../oatpp/src/oatpp/core/macro/component.hpp	/^#define OATPP_CREATE_COMPONENT(/;"	d
OATPP_DISABLE_ENV_OBJECT_COUNTERS	../oatpp/CMakeLists.txt	/^option(OATPP_DISABLE_ENV_OBJECT_COUNTERS "Disable object counting for Release builds for better /;"	D
OATPP_DISABLE_POOL_ALLOCATIONS	../oatpp/CMakeLists.txt	/^option(OATPP_DISABLE_POOL_ALLOCATIONS "This will make oatpp::base::memory::MemoryPool, method ob/;"	D
OATPP_GET_COMPONENT	../oatpp/src/oatpp/core/macro/component.hpp	/^#define OATPP_GET_COMPONENT(/;"	d
OATPP_INSTALL	../oatpp/CMakeLists.txt	/^option(OATPP_INSTALL "Create installation target for oat++" ON)$/;"	D
OATPP_IO_EVENT_INTERFACE	../oatpp/src/oatpp/core/async/worker/IOEventWorker.hpp	/^    #define OATPP_IO_EVENT_INTERFACE /;"	d
OATPP_IO_EVENT_INTERFACE_EPOLL	../oatpp/src/oatpp/core/async/worker/IOEventWorker.hpp	/^    #define OATPP_IO_EVENT_INTERFACE_EPOLL$/;"	d
OATPP_IO_EVENT_INTERFACE_KQUEUE	../oatpp/src/oatpp/core/async/worker/IOEventWorker.hpp	/^    #define OATPP_IO_EVENT_INTERFACE_KQUEUE$/;"	d
OATPP_LOGD	../oatpp/src/oatpp/core/base/Environment.hpp	/^  #define OATPP_LOGD(/;"	d
OATPP_LOGE	../oatpp/src/oatpp/core/base/Environment.hpp	/^  #define OATPP_LOGE(/;"	d
OATPP_LOGI	../oatpp/src/oatpp/core/base/Environment.hpp	/^  #define OATPP_LOGI(/;"	d
OATPP_LOGV	../oatpp/src/oatpp/core/base/Environment.hpp	/^  #define OATPP_LOGV(/;"	d
OATPP_LOGW	../oatpp/src/oatpp/core/base/Environment.hpp	/^  #define OATPP_LOGW(/;"	d
OATPP_MACRO_API_CLIENT_BODY	../oatpp/src/oatpp/codegen/codegen_define_ApiClient_.hpp	/^#define OATPP_MACRO_API_CLIENT_BODY(/;"	d
OATPP_MACRO_API_CLIENT_BODY_DTO	../oatpp/src/oatpp/codegen/codegen_define_ApiClient_.hpp	/^#define OATPP_MACRO_API_CLIENT_BODY_DTO(/;"	d
OATPP_MACRO_API_CLIENT_BODY_STRING	../oatpp/src/oatpp/codegen/codegen_define_ApiClient_.hpp	/^#define OATPP_MACRO_API_CLIENT_BODY_STRING(/;"	d
OATPP_MACRO_API_CLIENT_HEADER	../oatpp/src/oatpp/codegen/codegen_define_ApiClient_.hpp	/^#define OATPP_MACRO_API_CLIENT_HEADER(/;"	d
OATPP_MACRO_API_CLIENT_HEADER_0	../oatpp/src/oatpp/codegen/codegen_define_ApiClient_.hpp	/^#define OATPP_MACRO_API_CLIENT_HEADER_0(/;"	d
OATPP_MACRO_API_CLIENT_HEADER_1	../oatpp/src/oatpp/codegen/codegen_define_ApiClient_.hpp	/^#define OATPP_MACRO_API_CLIENT_HEADER_1(/;"	d
OATPP_MACRO_API_CLIENT_HEADER_CHOOSER	../oatpp/src/oatpp/codegen/codegen_define_ApiClient_.hpp	/^#define OATPP_MACRO_API_CLIENT_HEADER_CHOOSER(/;"	d
OATPP_MACRO_API_CLIENT_HEADER_CHOOSER_EXP	../oatpp/src/oatpp/codegen/codegen_define_ApiClient_.hpp	/^#define OATPP_MACRO_API_CLIENT_HEADER_CHOOSER_EXP(/;"	d
OATPP_MACRO_API_CLIENT_PARAM	../oatpp/src/oatpp/codegen/codegen_define_ApiClient_.hpp	/^#define OATPP_MACRO_API_CLIENT_PARAM(/;"	d
OATPP_MACRO_API_CLIENT_PARAM_DECL	../oatpp/src/oatpp/codegen/codegen_define_ApiClient_.hpp	/^#define OATPP_MACRO_API_CLIENT_PARAM_DECL(/;"	d
OATPP_MACRO_API_CLIENT_PARAM_MACRO	../oatpp/src/oatpp/codegen/codegen_define_ApiClient_.hpp	/^#define OATPP_MACRO_API_CLIENT_PARAM_MACRO(/;"	d
OATPP_MACRO_API_CLIENT_PARAM_NAME	../oatpp/src/oatpp/codegen/codegen_define_ApiClient_.hpp	/^#define OATPP_MACRO_API_CLIENT_PARAM_NAME(/;"	d
OATPP_MACRO_API_CLIENT_PARAM_NAME_STR	../oatpp/src/oatpp/codegen/codegen_define_ApiClient_.hpp	/^#define OATPP_MACRO_API_CLIENT_PARAM_NAME_STR(/;"	d
OATPP_MACRO_API_CLIENT_PARAM_PUT	../oatpp/src/oatpp/codegen/codegen_define_ApiClient_.hpp	/^#define OATPP_MACRO_API_CLIENT_PARAM_PUT(/;"	d
OATPP_MACRO_API_CLIENT_PARAM_TYPE	../oatpp/src/oatpp/codegen/codegen_define_ApiClient_.hpp	/^#define OATPP_MACRO_API_CLIENT_PARAM_TYPE(/;"	d
OATPP_MACRO_API_CLIENT_PARAM_TYPE_STR	../oatpp/src/oatpp/codegen/codegen_define_ApiClient_.hpp	/^#define OATPP_MACRO_API_CLIENT_PARAM_TYPE_STR(/;"	d
OATPP_MACRO_API_CLIENT_PATH	../oatpp/src/oatpp/codegen/codegen_define_ApiClient_.hpp	/^#define OATPP_MACRO_API_CLIENT_PATH(/;"	d
OATPP_MACRO_API_CLIENT_PATH_0	../oatpp/src/oatpp/codegen/codegen_define_ApiClient_.hpp	/^#define OATPP_MACRO_API_CLIENT_PATH_0(/;"	d
OATPP_MACRO_API_CLIENT_PATH_1	../oatpp/src/oatpp/codegen/codegen_define_ApiClient_.hpp	/^#define OATPP_MACRO_API_CLIENT_PATH_1(/;"	d
OATPP_MACRO_API_CLIENT_PATH_CHOOSER	../oatpp/src/oatpp/codegen/codegen_define_ApiClient_.hpp	/^#define OATPP_MACRO_API_CLIENT_PATH_CHOOSER(/;"	d
OATPP_MACRO_API_CLIENT_PATH_CHOOSER_EXP	../oatpp/src/oatpp/codegen/codegen_define_ApiClient_.hpp	/^#define OATPP_MACRO_API_CLIENT_PATH_CHOOSER_EXP(/;"	d
OATPP_MACRO_API_CLIENT_QUERY	../oatpp/src/oatpp/codegen/codegen_define_ApiClient_.hpp	/^#define OATPP_MACRO_API_CLIENT_QUERY(/;"	d
OATPP_MACRO_API_CLIENT_QUERY_0	../oatpp/src/oatpp/codegen/codegen_define_ApiClient_.hpp	/^#define OATPP_MACRO_API_CLIENT_QUERY_0(/;"	d
OATPP_MACRO_API_CLIENT_QUERY_1	../oatpp/src/oatpp/codegen/codegen_define_ApiClient_.hpp	/^#define OATPP_MACRO_API_CLIENT_QUERY_1(/;"	d
OATPP_MACRO_API_CLIENT_QUERY_CHOOSER	../oatpp/src/oatpp/codegen/codegen_define_ApiClient_.hpp	/^#define OATPP_MACRO_API_CLIENT_QUERY_CHOOSER(/;"	d
OATPP_MACRO_API_CLIENT_QUERY_CHOOSER_EXP	../oatpp/src/oatpp/codegen/codegen_define_ApiClient_.hpp	/^#define OATPP_MACRO_API_CLIENT_QUERY_CHOOSER_EXP(/;"	d
OATPP_MACRO_API_CONTROLLER_BODY_DTO	../oatpp/src/oatpp/codegen/codegen_define_ApiController_.hpp	/^#define OATPP_MACRO_API_CONTROLLER_BODY_DTO(/;"	d
OATPP_MACRO_API_CONTROLLER_BODY_DTO_INFO	../oatpp/src/oatpp/codegen/codegen_define_ApiController_.hpp	/^#define OATPP_MACRO_API_CONTROLLER_BODY_DTO_INFO(/;"	d
OATPP_MACRO_API_CONTROLLER_BODY_STRING	../oatpp/src/oatpp/codegen/codegen_define_ApiController_.hpp	/^#define OATPP_MACRO_API_CONTROLLER_BODY_STRING(/;"	d
OATPP_MACRO_API_CONTROLLER_BODY_STRING_INFO	../oatpp/src/oatpp/codegen/codegen_define_ApiController_.hpp	/^#define OATPP_MACRO_API_CONTROLLER_BODY_STRING_INFO(/;"	d
OATPP_MACRO_API_CONTROLLER_ENDPOINT_	../oatpp/src/oatpp/codegen/codegen_define_ApiController_.hpp	/^#define OATPP_MACRO_API_CONTROLLER_ENDPOINT_(/;"	d
OATPP_MACRO_API_CONTROLLER_ENDPOINT_0	../oatpp/src/oatpp/codegen/codegen_define_ApiController_.hpp	/^#define OATPP_MACRO_API_CONTROLLER_ENDPOINT_0(/;"	d
OATPP_MACRO_API_CONTROLLER_ENDPOINT_1	../oatpp/src/oatpp/codegen/codegen_define_ApiController_.hpp	/^#define OATPP_MACRO_API_CONTROLLER_ENDPOINT_1(/;"	d
OATPP_MACRO_API_CONTROLLER_ENDPOINT_ASYNC_DECL	../oatpp/src/oatpp/codegen/codegen_define_ApiController_.hpp	/^#define OATPP_MACRO_API_CONTROLLER_ENDPOINT_ASYNC_DECL(/;"	d
OATPP_MACRO_API_CONTROLLER_ENDPOINT_ASYNC_DECL_DEFAULTS	../oatpp/src/oatpp/codegen/codegen_define_ApiController_.hpp	/^#define OATPP_MACRO_API_CONTROLLER_ENDPOINT_ASYNC_DECL_DEFAULTS(/;"	d
OATPP_MACRO_API_CONTROLLER_ENDPOINT_DECL_0	../oatpp/src/oatpp/codegen/codegen_define_ApiController_.hpp	/^#define OATPP_MACRO_API_CONTROLLER_ENDPOINT_DECL_0(/;"	d
OATPP_MACRO_API_CONTROLLER_ENDPOINT_DECL_1	../oatpp/src/oatpp/codegen/codegen_define_ApiController_.hpp	/^#define OATPP_MACRO_API_CONTROLLER_ENDPOINT_DECL_1(/;"	d
OATPP_MACRO_API_CONTROLLER_ENDPOINT_DECL_DEFAULTS	../oatpp/src/oatpp/codegen/codegen_define_ApiController_.hpp	/^#define OATPP_MACRO_API_CONTROLLER_ENDPOINT_DECL_DEFAULTS(/;"	d
OATPP_MACRO_API_CONTROLLER_ENDPOINT__	../oatpp/src/oatpp/codegen/codegen_define_ApiController_.hpp	/^#define OATPP_MACRO_API_CONTROLLER_ENDPOINT__(/;"	d
OATPP_MACRO_API_CONTROLLER_ENDPOINT___	../oatpp/src/oatpp/codegen/codegen_define_ApiController_.hpp	/^#define OATPP_MACRO_API_CONTROLLER_ENDPOINT___(/;"	d
OATPP_MACRO_API_CONTROLLER_FOR_EACH_PARAM_CALL_FIRST	../oatpp/src/oatpp/codegen/codegen_define_ApiController_.hpp	/^#define OATPP_MACRO_API_CONTROLLER_FOR_EACH_PARAM_CALL_FIRST(/;"	d
OATPP_MACRO_API_CONTROLLER_FOR_EACH_PARAM_CALL_REST	../oatpp/src/oatpp/codegen/codegen_define_ApiController_.hpp	/^#define OATPP_MACRO_API_CONTROLLER_FOR_EACH_PARAM_CALL_REST(/;"	d
OATPP_MACRO_API_CONTROLLER_FOR_EACH_PARAM_DECL_FIRST	../oatpp/src/oatpp/codegen/codegen_define_ApiController_.hpp	/^#define OATPP_MACRO_API_CONTROLLER_FOR_EACH_PARAM_DECL_FIRST(/;"	d
OATPP_MACRO_API_CONTROLLER_FOR_EACH_PARAM_DECL_REST	../oatpp/src/oatpp/codegen/codegen_define_ApiController_.hpp	/^#define OATPP_MACRO_API_CONTROLLER_FOR_EACH_PARAM_DECL_REST(/;"	d
OATPP_MACRO_API_CONTROLLER_FOR_EACH_PARAM_INFO	../oatpp/src/oatpp/codegen/codegen_define_ApiController_.hpp	/^#define OATPP_MACRO_API_CONTROLLER_FOR_EACH_PARAM_INFO(/;"	d
OATPP_MACRO_API_CONTROLLER_FOR_EACH_PARAM_PUT	../oatpp/src/oatpp/codegen/codegen_define_ApiController_.hpp	/^#define OATPP_MACRO_API_CONTROLLER_FOR_EACH_PARAM_PUT(/;"	d
OATPP_MACRO_API_CONTROLLER_HEADER	../oatpp/src/oatpp/codegen/codegen_define_ApiController_.hpp	/^#define OATPP_MACRO_API_CONTROLLER_HEADER(/;"	d
OATPP_MACRO_API_CONTROLLER_HEADER_0	../oatpp/src/oatpp/codegen/codegen_define_ApiController_.hpp	/^#define OATPP_MACRO_API_CONTROLLER_HEADER_0(/;"	d
OATPP_MACRO_API_CONTROLLER_HEADER_1	../oatpp/src/oatpp/codegen/codegen_define_ApiController_.hpp	/^#define OATPP_MACRO_API_CONTROLLER_HEADER_1(/;"	d
OATPP_MACRO_API_CONTROLLER_HEADER_CHOOSER	../oatpp/src/oatpp/codegen/codegen_define_ApiController_.hpp	/^#define OATPP_MACRO_API_CONTROLLER_HEADER_CHOOSER(/;"	d
OATPP_MACRO_API_CONTROLLER_HEADER_CHOOSER_EXP	../oatpp/src/oatpp/codegen/codegen_define_ApiController_.hpp	/^#define OATPP_MACRO_API_CONTROLLER_HEADER_CHOOSER_EXP(/;"	d
OATPP_MACRO_API_CONTROLLER_HEADER_INFO	../oatpp/src/oatpp/codegen/codegen_define_ApiController_.hpp	/^#define OATPP_MACRO_API_CONTROLLER_HEADER_INFO(/;"	d
OATPP_MACRO_API_CONTROLLER_HEADER_INFO_0	../oatpp/src/oatpp/codegen/codegen_define_ApiController_.hpp	/^#define OATPP_MACRO_API_CONTROLLER_HEADER_INFO_0(/;"	d
OATPP_MACRO_API_CONTROLLER_HEADER_INFO_1	../oatpp/src/oatpp/codegen/codegen_define_ApiController_.hpp	/^#define OATPP_MACRO_API_CONTROLLER_HEADER_INFO_1(/;"	d
OATPP_MACRO_API_CONTROLLER_HEADER_INFO_CHOOSER	../oatpp/src/oatpp/codegen/codegen_define_ApiController_.hpp	/^#define OATPP_MACRO_API_CONTROLLER_HEADER_INFO_CHOOSER(/;"	d
OATPP_MACRO_API_CONTROLLER_HEADER_INFO_CHOOSER_EXP	../oatpp/src/oatpp/codegen/codegen_define_ApiController_.hpp	/^#define OATPP_MACRO_API_CONTROLLER_HEADER_INFO_CHOOSER_EXP(/;"	d
OATPP_MACRO_API_CONTROLLER_PARAM	../oatpp/src/oatpp/codegen/codegen_define_ApiController_.hpp	/^#define OATPP_MACRO_API_CONTROLLER_PARAM(/;"	d
OATPP_MACRO_API_CONTROLLER_PARAM_INFO	../oatpp/src/oatpp/codegen/codegen_define_ApiController_.hpp	/^#define OATPP_MACRO_API_CONTROLLER_PARAM_INFO(/;"	d
OATPP_MACRO_API_CONTROLLER_PARAM_MACRO	../oatpp/src/oatpp/codegen/codegen_define_ApiController_.hpp	/^#define OATPP_MACRO_API_CONTROLLER_PARAM_MACRO(/;"	d
OATPP_MACRO_API_CONTROLLER_PARAM_NAME	../oatpp/src/oatpp/codegen/codegen_define_ApiController_.hpp	/^#define OATPP_MACRO_API_CONTROLLER_PARAM_NAME(/;"	d
OATPP_MACRO_API_CONTROLLER_PARAM_NAME_STR	../oatpp/src/oatpp/codegen/codegen_define_ApiController_.hpp	/^#define OATPP_MACRO_API_CONTROLLER_PARAM_NAME_STR(/;"	d
OATPP_MACRO_API_CONTROLLER_PARAM_TYPE	../oatpp/src/oatpp/codegen/codegen_define_ApiController_.hpp	/^#define OATPP_MACRO_API_CONTROLLER_PARAM_TYPE(/;"	d
OATPP_MACRO_API_CONTROLLER_PARAM_TYPE_STR	../oatpp/src/oatpp/codegen/codegen_define_ApiController_.hpp	/^#define OATPP_MACRO_API_CONTROLLER_PARAM_TYPE_STR(/;"	d
OATPP_MACRO_API_CONTROLLER_PATH	../oatpp/src/oatpp/codegen/codegen_define_ApiController_.hpp	/^#define OATPP_MACRO_API_CONTROLLER_PATH(/;"	d
OATPP_MACRO_API_CONTROLLER_PATH_0	../oatpp/src/oatpp/codegen/codegen_define_ApiController_.hpp	/^#define OATPP_MACRO_API_CONTROLLER_PATH_0(/;"	d
OATPP_MACRO_API_CONTROLLER_PATH_1	../oatpp/src/oatpp/codegen/codegen_define_ApiController_.hpp	/^#define OATPP_MACRO_API_CONTROLLER_PATH_1(/;"	d
OATPP_MACRO_API_CONTROLLER_PATH_CHOOSER	../oatpp/src/oatpp/codegen/codegen_define_ApiController_.hpp	/^#define OATPP_MACRO_API_CONTROLLER_PATH_CHOOSER(/;"	d
OATPP_MACRO_API_CONTROLLER_PATH_CHOOSER_EXP	../oatpp/src/oatpp/codegen/codegen_define_ApiController_.hpp	/^#define OATPP_MACRO_API_CONTROLLER_PATH_CHOOSER_EXP(/;"	d
OATPP_MACRO_API_CONTROLLER_PATH_INFO	../oatpp/src/oatpp/codegen/codegen_define_ApiController_.hpp	/^#define OATPP_MACRO_API_CONTROLLER_PATH_INFO(/;"	d
OATPP_MACRO_API_CONTROLLER_PATH_INFO_0	../oatpp/src/oatpp/codegen/codegen_define_ApiController_.hpp	/^#define OATPP_MACRO_API_CONTROLLER_PATH_INFO_0(/;"	d
OATPP_MACRO_API_CONTROLLER_PATH_INFO_1	../oatpp/src/oatpp/codegen/codegen_define_ApiController_.hpp	/^#define OATPP_MACRO_API_CONTROLLER_PATH_INFO_1(/;"	d
OATPP_MACRO_API_CONTROLLER_PATH_INFO_CHOOSER	../oatpp/src/oatpp/codegen/codegen_define_ApiController_.hpp	/^#define OATPP_MACRO_API_CONTROLLER_PATH_INFO_CHOOSER(/;"	d
OATPP_MACRO_API_CONTROLLER_PATH_INFO_CHOOSER_EXP	../oatpp/src/oatpp/codegen/codegen_define_ApiController_.hpp	/^#define OATPP_MACRO_API_CONTROLLER_PATH_INFO_CHOOSER_EXP(/;"	d
OATPP_MACRO_API_CONTROLLER_QUERIES	../oatpp/src/oatpp/codegen/codegen_define_ApiController_.hpp	/^#define OATPP_MACRO_API_CONTROLLER_QUERIES(/;"	d
OATPP_MACRO_API_CONTROLLER_QUERIES_INFO	../oatpp/src/oatpp/codegen/codegen_define_ApiController_.hpp	/^#define OATPP_MACRO_API_CONTROLLER_QUERIES_INFO(/;"	d
OATPP_MACRO_API_CONTROLLER_QUERY	../oatpp/src/oatpp/codegen/codegen_define_ApiController_.hpp	/^#define OATPP_MACRO_API_CONTROLLER_QUERY(/;"	d
OATPP_MACRO_API_CONTROLLER_QUERY_0	../oatpp/src/oatpp/codegen/codegen_define_ApiController_.hpp	/^#define OATPP_MACRO_API_CONTROLLER_QUERY_0(/;"	d
OATPP_MACRO_API_CONTROLLER_QUERY_1	../oatpp/src/oatpp/codegen/codegen_define_ApiController_.hpp	/^#define OATPP_MACRO_API_CONTROLLER_QUERY_1(/;"	d
OATPP_MACRO_API_CONTROLLER_QUERY_CHOOSER	../oatpp/src/oatpp/codegen/codegen_define_ApiController_.hpp	/^#define OATPP_MACRO_API_CONTROLLER_QUERY_CHOOSER(/;"	d
OATPP_MACRO_API_CONTROLLER_QUERY_CHOOSER_EXP	../oatpp/src/oatpp/codegen/codegen_define_ApiController_.hpp	/^#define OATPP_MACRO_API_CONTROLLER_QUERY_CHOOSER_EXP(/;"	d
OATPP_MACRO_API_CONTROLLER_QUERY_INFO	../oatpp/src/oatpp/codegen/codegen_define_ApiController_.hpp	/^#define OATPP_MACRO_API_CONTROLLER_QUERY_INFO(/;"	d
OATPP_MACRO_API_CONTROLLER_QUERY_INFO_0	../oatpp/src/oatpp/codegen/codegen_define_ApiController_.hpp	/^#define OATPP_MACRO_API_CONTROLLER_QUERY_INFO_0(/;"	d
OATPP_MACRO_API_CONTROLLER_QUERY_INFO_1	../oatpp/src/oatpp/codegen/codegen_define_ApiController_.hpp	/^#define OATPP_MACRO_API_CONTROLLER_QUERY_INFO_1(/;"	d
OATPP_MACRO_API_CONTROLLER_QUERY_INFO_CHOOSER	../oatpp/src/oatpp/codegen/codegen_define_ApiController_.hpp	/^#define OATPP_MACRO_API_CONTROLLER_QUERY_INFO_CHOOSER(/;"	d
OATPP_MACRO_API_CONTROLLER_QUERY_INFO_CHOOSER_EXP	../oatpp/src/oatpp/codegen/codegen_define_ApiController_.hpp	/^#define OATPP_MACRO_API_CONTROLLER_QUERY_INFO_CHOOSER_EXP(/;"	d
OATPP_MACRO_API_CONTROLLER_REQUEST	../oatpp/src/oatpp/codegen/codegen_define_ApiController_.hpp	/^#define OATPP_MACRO_API_CONTROLLER_REQUEST(/;"	d
OATPP_MACRO_API_CONTROLLER_REQUEST_INFO	../oatpp/src/oatpp/codegen/codegen_define_ApiController_.hpp	/^#define OATPP_MACRO_API_CONTROLLER_REQUEST_INFO(/;"	d
OATPP_MACRO_CODEGEN_EXPAND	../oatpp/src/oatpp/core/macro/codegen.hpp	/^#define OATPP_MACRO_CODEGEN_EXPAND(/;"	d
OATPP_MACRO_COMPONENT_	../oatpp/src/oatpp/core/macro/component.hpp	/^#define OATPP_MACRO_COMPONENT_(/;"	d
OATPP_MACRO_COMPONENT_0	../oatpp/src/oatpp/core/macro/component.hpp	/^#define OATPP_MACRO_COMPONENT_0(/;"	d
OATPP_MACRO_COMPONENT_1	../oatpp/src/oatpp/core/macro/component.hpp	/^#define OATPP_MACRO_COMPONENT_1(/;"	d
OATPP_MACRO_COMPONENT__	../oatpp/src/oatpp/core/macro/component.hpp	/^#define OATPP_MACRO_COMPONENT__(/;"	d
OATPP_MACRO_COMPONENT___	../oatpp/src/oatpp/core/macro/component.hpp	/^#define OATPP_MACRO_COMPONENT___(/;"	d
OATPP_MACRO_CONCAT	../oatpp/src/oatpp/core/macro/basic.hpp	/^#define OATPP_MACRO_CONCAT(/;"	d
OATPP_MACRO_CONCAT2	../oatpp/src/oatpp/core/macro/basic.hpp	/^#define OATPP_MACRO_CONCAT2(/;"	d
OATPP_MACRO_CONCAT_2	../oatpp/src/oatpp/core/macro/basic.hpp	/^#define OATPP_MACRO_CONCAT_2 /;"	d
OATPP_MACRO_CONCAT_3	../oatpp/src/oatpp/core/macro/basic.hpp	/^#define OATPP_MACRO_CONCAT_3(/;"	d
OATPP_MACRO_DTO_FIELD_	../oatpp/src/oatpp/codegen/codegen_define_DTO_.hpp	/^#define OATPP_MACRO_DTO_FIELD_(/;"	d
OATPP_MACRO_DTO_FIELD_0	../oatpp/src/oatpp/codegen/codegen_define_DTO_.hpp	/^#define OATPP_MACRO_DTO_FIELD_0(/;"	d
OATPP_MACRO_DTO_FIELD_1	../oatpp/src/oatpp/codegen/codegen_define_DTO_.hpp	/^#define OATPP_MACRO_DTO_FIELD_1(/;"	d
OATPP_MACRO_DTO_FIELD__	../oatpp/src/oatpp/codegen/codegen_define_DTO_.hpp	/^#define OATPP_MACRO_DTO_FIELD__(/;"	d
OATPP_MACRO_DTO_FIELD___	../oatpp/src/oatpp/codegen/codegen_define_DTO_.hpp	/^#define OATPP_MACRO_DTO_FIELD___(/;"	d
OATPP_MACRO_EXPAND	../oatpp/src/oatpp/core/macro/basic.hpp	/^#define OATPP_MACRO_EXPAND(/;"	d
OATPP_MACRO_FIRSTARG	../oatpp/src/oatpp/core/macro/basic.hpp	/^#define OATPP_MACRO_FIRSTARG(/;"	d
OATPP_MACRO_FIRSTARG_EXPAND	../oatpp/src/oatpp/core/macro/basic.hpp	/^#define OATPP_MACRO_FIRSTARG_EXPAND(/;"	d
OATPP_MACRO_FIRSTARG_STR	../oatpp/src/oatpp/core/macro/basic.hpp	/^#define OATPP_MACRO_FIRSTARG_STR(/;"	d
OATPP_MACRO_FOREACH	../oatpp/src/oatpp/core/macro/basic.hpp	/^#define OATPP_MACRO_FOREACH(/;"	d
OATPP_MACRO_FOREACH_	../oatpp/src/oatpp/core/macro/basic.hpp	/^#define OATPP_MACRO_FOREACH_(/;"	d
OATPP_MACRO_FOREACH_1	../oatpp/src/oatpp/core/macro/basic.hpp	/^#define OATPP_MACRO_FOREACH_1(/;"	d
OATPP_MACRO_FOREACH_10	../oatpp/src/oatpp/core/macro/basic.hpp	/^#define OATPP_MACRO_FOREACH_10(/;"	d
OATPP_MACRO_FOREACH_11	../oatpp/src/oatpp/core/macro/basic.hpp	/^#define OATPP_MACRO_FOREACH_11(/;"	d
OATPP_MACRO_FOREACH_12	../oatpp/src/oatpp/core/macro/basic.hpp	/^#define OATPP_MACRO_FOREACH_12(/;"	d
OATPP_MACRO_FOREACH_13	../oatpp/src/oatpp/core/macro/basic.hpp	/^#define OATPP_MACRO_FOREACH_13(/;"	d
OATPP_MACRO_FOREACH_14	../oatpp/src/oatpp/core/macro/basic.hpp	/^#define OATPP_MACRO_FOREACH_14(/;"	d
OATPP_MACRO_FOREACH_15	../oatpp/src/oatpp/core/macro/basic.hpp	/^#define OATPP_MACRO_FOREACH_15(/;"	d
OATPP_MACRO_FOREACH_16	../oatpp/src/oatpp/core/macro/basic.hpp	/^#define OATPP_MACRO_FOREACH_16(/;"	d
OATPP_MACRO_FOREACH_17	../oatpp/src/oatpp/core/macro/basic.hpp	/^#define OATPP_MACRO_FOREACH_17(/;"	d
OATPP_MACRO_FOREACH_18	../oatpp/src/oatpp/core/macro/basic.hpp	/^#define OATPP_MACRO_FOREACH_18(/;"	d
OATPP_MACRO_FOREACH_19	../oatpp/src/oatpp/core/macro/basic.hpp	/^#define OATPP_MACRO_FOREACH_19(/;"	d
OATPP_MACRO_FOREACH_2	../oatpp/src/oatpp/core/macro/basic.hpp	/^#define OATPP_MACRO_FOREACH_2(/;"	d
OATPP_MACRO_FOREACH_20	../oatpp/src/oatpp/core/macro/basic.hpp	/^#define OATPP_MACRO_FOREACH_20(/;"	d
OATPP_MACRO_FOREACH_21	../oatpp/src/oatpp/core/macro/basic.hpp	/^#define OATPP_MACRO_FOREACH_21(/;"	d
OATPP_MACRO_FOREACH_22	../oatpp/src/oatpp/core/macro/basic.hpp	/^#define OATPP_MACRO_FOREACH_22(/;"	d
OATPP_MACRO_FOREACH_23	../oatpp/src/oatpp/core/macro/basic.hpp	/^#define OATPP_MACRO_FOREACH_23(/;"	d
OATPP_MACRO_FOREACH_24	../oatpp/src/oatpp/core/macro/basic.hpp	/^#define OATPP_MACRO_FOREACH_24(/;"	d
OATPP_MACRO_FOREACH_25	../oatpp/src/oatpp/core/macro/basic.hpp	/^#define OATPP_MACRO_FOREACH_25(/;"	d
OATPP_MACRO_FOREACH_26	../oatpp/src/oatpp/core/macro/basic.hpp	/^#define OATPP_MACRO_FOREACH_26(/;"	d
OATPP_MACRO_FOREACH_27	../oatpp/src/oatpp/core/macro/basic.hpp	/^#define OATPP_MACRO_FOREACH_27(/;"	d
OATPP_MACRO_FOREACH_28	../oatpp/src/oatpp/core/macro/basic.hpp	/^#define OATPP_MACRO_FOREACH_28(/;"	d
OATPP_MACRO_FOREACH_29	../oatpp/src/oatpp/core/macro/basic.hpp	/^#define OATPP_MACRO_FOREACH_29(/;"	d
OATPP_MACRO_FOREACH_3	../oatpp/src/oatpp/core/macro/basic.hpp	/^#define OATPP_MACRO_FOREACH_3(/;"	d
OATPP_MACRO_FOREACH_30	../oatpp/src/oatpp/core/macro/basic.hpp	/^#define OATPP_MACRO_FOREACH_30(/;"	d
OATPP_MACRO_FOREACH_31	../oatpp/src/oatpp/core/macro/basic.hpp	/^#define OATPP_MACRO_FOREACH_31(/;"	d
OATPP_MACRO_FOREACH_32	../oatpp/src/oatpp/core/macro/basic.hpp	/^#define OATPP_MACRO_FOREACH_32(/;"	d
OATPP_MACRO_FOREACH_33	../oatpp/src/oatpp/core/macro/basic.hpp	/^#define OATPP_MACRO_FOREACH_33(/;"	d
OATPP_MACRO_FOREACH_34	../oatpp/src/oatpp/core/macro/basic.hpp	/^#define OATPP_MACRO_FOREACH_34(/;"	d
OATPP_MACRO_FOREACH_35	../oatpp/src/oatpp/core/macro/basic.hpp	/^#define OATPP_MACRO_FOREACH_35(/;"	d
OATPP_MACRO_FOREACH_36	../oatpp/src/oatpp/core/macro/basic.hpp	/^#define OATPP_MACRO_FOREACH_36(/;"	d
OATPP_MACRO_FOREACH_37	../oatpp/src/oatpp/core/macro/basic.hpp	/^#define OATPP_MACRO_FOREACH_37(/;"	d
OATPP_MACRO_FOREACH_38	../oatpp/src/oatpp/core/macro/basic.hpp	/^#define OATPP_MACRO_FOREACH_38(/;"	d
OATPP_MACRO_FOREACH_39	../oatpp/src/oatpp/core/macro/basic.hpp	/^#define OATPP_MACRO_FOREACH_39(/;"	d
OATPP_MACRO_FOREACH_4	../oatpp/src/oatpp/core/macro/basic.hpp	/^#define OATPP_MACRO_FOREACH_4(/;"	d
OATPP_MACRO_FOREACH_40	../oatpp/src/oatpp/core/macro/basic.hpp	/^#define OATPP_MACRO_FOREACH_40(/;"	d
OATPP_MACRO_FOREACH_41	../oatpp/src/oatpp/core/macro/basic.hpp	/^#define OATPP_MACRO_FOREACH_41(/;"	d
OATPP_MACRO_FOREACH_42	../oatpp/src/oatpp/core/macro/basic.hpp	/^#define OATPP_MACRO_FOREACH_42(/;"	d
OATPP_MACRO_FOREACH_43	../oatpp/src/oatpp/core/macro/basic.hpp	/^#define OATPP_MACRO_FOREACH_43(/;"	d
OATPP_MACRO_FOREACH_44	../oatpp/src/oatpp/core/macro/basic.hpp	/^#define OATPP_MACRO_FOREACH_44(/;"	d
OATPP_MACRO_FOREACH_45	../oatpp/src/oatpp/core/macro/basic.hpp	/^#define OATPP_MACRO_FOREACH_45(/;"	d
OATPP_MACRO_FOREACH_46	../oatpp/src/oatpp/core/macro/basic.hpp	/^#define OATPP_MACRO_FOREACH_46(/;"	d
OATPP_MACRO_FOREACH_47	../oatpp/src/oatpp/core/macro/basic.hpp	/^#define OATPP_MACRO_FOREACH_47(/;"	d
OATPP_MACRO_FOREACH_48	../oatpp/src/oatpp/core/macro/basic.hpp	/^#define OATPP_MACRO_FOREACH_48(/;"	d
OATPP_MACRO_FOREACH_49	../oatpp/src/oatpp/core/macro/basic.hpp	/^#define OATPP_MACRO_FOREACH_49(/;"	d
OATPP_MACRO_FOREACH_5	../oatpp/src/oatpp/core/macro/basic.hpp	/^#define OATPP_MACRO_FOREACH_5(/;"	d
OATPP_MACRO_FOREACH_50	../oatpp/src/oatpp/core/macro/basic.hpp	/^#define OATPP_MACRO_FOREACH_50(/;"	d
OATPP_MACRO_FOREACH_51	../oatpp/src/oatpp/core/macro/basic.hpp	/^#define OATPP_MACRO_FOREACH_51(/;"	d
OATPP_MACRO_FOREACH_52	../oatpp/src/oatpp/core/macro/basic.hpp	/^#define OATPP_MACRO_FOREACH_52(/;"	d
OATPP_MACRO_FOREACH_53	../oatpp/src/oatpp/core/macro/basic.hpp	/^#define OATPP_MACRO_FOREACH_53(/;"	d
OATPP_MACRO_FOREACH_54	../oatpp/src/oatpp/core/macro/basic.hpp	/^#define OATPP_MACRO_FOREACH_54(/;"	d
OATPP_MACRO_FOREACH_55	../oatpp/src/oatpp/core/macro/basic.hpp	/^#define OATPP_MACRO_FOREACH_55(/;"	d
OATPP_MACRO_FOREACH_56	../oatpp/src/oatpp/core/macro/basic.hpp	/^#define OATPP_MACRO_FOREACH_56(/;"	d
OATPP_MACRO_FOREACH_57	../oatpp/src/oatpp/core/macro/basic.hpp	/^#define OATPP_MACRO_FOREACH_57(/;"	d
OATPP_MACRO_FOREACH_58	../oatpp/src/oatpp/core/macro/basic.hpp	/^#define OATPP_MACRO_FOREACH_58(/;"	d
OATPP_MACRO_FOREACH_59	../oatpp/src/oatpp/core/macro/basic.hpp	/^#define OATPP_MACRO_FOREACH_59(/;"	d
OATPP_MACRO_FOREACH_6	../oatpp/src/oatpp/core/macro/basic.hpp	/^#define OATPP_MACRO_FOREACH_6(/;"	d
OATPP_MACRO_FOREACH_60	../oatpp/src/oatpp/core/macro/basic.hpp	/^#define OATPP_MACRO_FOREACH_60(/;"	d
OATPP_MACRO_FOREACH_61	../oatpp/src/oatpp/core/macro/basic.hpp	/^#define OATPP_MACRO_FOREACH_61(/;"	d
OATPP_MACRO_FOREACH_62	../oatpp/src/oatpp/core/macro/basic.hpp	/^#define OATPP_MACRO_FOREACH_62(/;"	d
OATPP_MACRO_FOREACH_63	../oatpp/src/oatpp/core/macro/basic.hpp	/^#define OATPP_MACRO_FOREACH_63(/;"	d
OATPP_MACRO_FOREACH_64	../oatpp/src/oatpp/core/macro/basic.hpp	/^#define OATPP_MACRO_FOREACH_64(/;"	d
OATPP_MACRO_FOREACH_65	../oatpp/src/oatpp/core/macro/basic.hpp	/^#define OATPP_MACRO_FOREACH_65(/;"	d
OATPP_MACRO_FOREACH_66	../oatpp/src/oatpp/core/macro/basic.hpp	/^#define OATPP_MACRO_FOREACH_66(/;"	d
OATPP_MACRO_FOREACH_67	../oatpp/src/oatpp/core/macro/basic.hpp	/^#define OATPP_MACRO_FOREACH_67(/;"	d
OATPP_MACRO_FOREACH_68	../oatpp/src/oatpp/core/macro/basic.hpp	/^#define OATPP_MACRO_FOREACH_68(/;"	d
OATPP_MACRO_FOREACH_69	../oatpp/src/oatpp/core/macro/basic.hpp	/^#define OATPP_MACRO_FOREACH_69(/;"	d
OATPP_MACRO_FOREACH_7	../oatpp/src/oatpp/core/macro/basic.hpp	/^#define OATPP_MACRO_FOREACH_7(/;"	d
OATPP_MACRO_FOREACH_70	../oatpp/src/oatpp/core/macro/basic.hpp	/^#define OATPP_MACRO_FOREACH_70(/;"	d
OATPP_MACRO_FOREACH_71	../oatpp/src/oatpp/core/macro/basic.hpp	/^#define OATPP_MACRO_FOREACH_71(/;"	d
OATPP_MACRO_FOREACH_72	../oatpp/src/oatpp/core/macro/basic.hpp	/^#define OATPP_MACRO_FOREACH_72(/;"	d
OATPP_MACRO_FOREACH_73	../oatpp/src/oatpp/core/macro/basic.hpp	/^#define OATPP_MACRO_FOREACH_73(/;"	d
OATPP_MACRO_FOREACH_74	../oatpp/src/oatpp/core/macro/basic.hpp	/^#define OATPP_MACRO_FOREACH_74(/;"	d
OATPP_MACRO_FOREACH_75	../oatpp/src/oatpp/core/macro/basic.hpp	/^#define OATPP_MACRO_FOREACH_75(/;"	d
OATPP_MACRO_FOREACH_76	../oatpp/src/oatpp/core/macro/basic.hpp	/^#define OATPP_MACRO_FOREACH_76(/;"	d
OATPP_MACRO_FOREACH_77	../oatpp/src/oatpp/core/macro/basic.hpp	/^#define OATPP_MACRO_FOREACH_77(/;"	d
OATPP_MACRO_FOREACH_78	../oatpp/src/oatpp/core/macro/basic.hpp	/^#define OATPP_MACRO_FOREACH_78(/;"	d
OATPP_MACRO_FOREACH_79	../oatpp/src/oatpp/core/macro/basic.hpp	/^#define OATPP_MACRO_FOREACH_79(/;"	d
OATPP_MACRO_FOREACH_8	../oatpp/src/oatpp/core/macro/basic.hpp	/^#define OATPP_MACRO_FOREACH_8(/;"	d
OATPP_MACRO_FOREACH_80	../oatpp/src/oatpp/core/macro/basic.hpp	/^#define OATPP_MACRO_FOREACH_80(/;"	d
OATPP_MACRO_FOREACH_81	../oatpp/src/oatpp/core/macro/basic.hpp	/^#define OATPP_MACRO_FOREACH_81(/;"	d
OATPP_MACRO_FOREACH_82	../oatpp/src/oatpp/core/macro/basic.hpp	/^#define OATPP_MACRO_FOREACH_82(/;"	d
OATPP_MACRO_FOREACH_83	../oatpp/src/oatpp/core/macro/basic.hpp	/^#define OATPP_MACRO_FOREACH_83(/;"	d
OATPP_MACRO_FOREACH_84	../oatpp/src/oatpp/core/macro/basic.hpp	/^#define OATPP_MACRO_FOREACH_84(/;"	d
OATPP_MACRO_FOREACH_85	../oatpp/src/oatpp/core/macro/basic.hpp	/^#define OATPP_MACRO_FOREACH_85(/;"	d
OATPP_MACRO_FOREACH_86	../oatpp/src/oatpp/core/macro/basic.hpp	/^#define OATPP_MACRO_FOREACH_86(/;"	d
OATPP_MACRO_FOREACH_87	../oatpp/src/oatpp/core/macro/basic.hpp	/^#define OATPP_MACRO_FOREACH_87(/;"	d
OATPP_MACRO_FOREACH_88	../oatpp/src/oatpp/core/macro/basic.hpp	/^#define OATPP_MACRO_FOREACH_88(/;"	d
OATPP_MACRO_FOREACH_89	../oatpp/src/oatpp/core/macro/basic.hpp	/^#define OATPP_MACRO_FOREACH_89(/;"	d
OATPP_MACRO_FOREACH_9	../oatpp/src/oatpp/core/macro/basic.hpp	/^#define OATPP_MACRO_FOREACH_9(/;"	d
OATPP_MACRO_FOREACH_90	../oatpp/src/oatpp/core/macro/basic.hpp	/^#define OATPP_MACRO_FOREACH_90(/;"	d
OATPP_MACRO_FOREACH_91	../oatpp/src/oatpp/core/macro/basic.hpp	/^#define OATPP_MACRO_FOREACH_91(/;"	d
OATPP_MACRO_FOREACH_92	../oatpp/src/oatpp/core/macro/basic.hpp	/^#define OATPP_MACRO_FOREACH_92(/;"	d
OATPP_MACRO_FOREACH_93	../oatpp/src/oatpp/core/macro/basic.hpp	/^#define OATPP_MACRO_FOREACH_93(/;"	d
OATPP_MACRO_FOREACH_94	../oatpp/src/oatpp/core/macro/basic.hpp	/^#define OATPP_MACRO_FOREACH_94(/;"	d
OATPP_MACRO_FOREACH_95	../oatpp/src/oatpp/core/macro/basic.hpp	/^#define OATPP_MACRO_FOREACH_95(/;"	d
OATPP_MACRO_FOREACH_96	../oatpp/src/oatpp/core/macro/basic.hpp	/^#define OATPP_MACRO_FOREACH_96(/;"	d
OATPP_MACRO_FOREACH_97	../oatpp/src/oatpp/core/macro/basic.hpp	/^#define OATPP_MACRO_FOREACH_97(/;"	d
OATPP_MACRO_FOREACH_98	../oatpp/src/oatpp/core/macro/basic.hpp	/^#define OATPP_MACRO_FOREACH_98(/;"	d
OATPP_MACRO_FOREACH_99	../oatpp/src/oatpp/core/macro/basic.hpp	/^#define OATPP_MACRO_FOREACH_99(/;"	d
OATPP_MACRO_FOREACH_CALL	../oatpp/src/oatpp/core/macro/basic.hpp	/^#define OATPP_MACRO_FOREACH_CALL(/;"	d
OATPP_MACRO_FOREACH_EXAMPLE	../oatpp/src/oatpp/core/macro/basic.hpp	/^#define OATPP_MACRO_FOREACH_EXAMPLE(/;"	d
OATPP_MACRO_FOREACH_EXAMPLE_FUNC	../oatpp/src/oatpp/core/macro/basic.hpp	/^#define OATPP_MACRO_FOREACH_EXAMPLE_FUNC(/;"	d
OATPP_MACRO_FOREACH_FIRST_AND_REST	../oatpp/src/oatpp/core/macro/basic.hpp	/^#define OATPP_MACRO_FOREACH_FIRST_AND_REST(/;"	d
OATPP_MACRO_FOREACH_FIRST_AND_REST_	../oatpp/src/oatpp/core/macro/basic.hpp	/^#define OATPP_MACRO_FOREACH_FIRST_AND_REST_(/;"	d
OATPP_MACRO_FOREACH_OR_EMPTY	../oatpp/src/oatpp/core/macro/basic.hpp	/^#define OATPP_MACRO_FOREACH_OR_EMPTY(/;"	d
OATPP_MACRO_FOREACH_OR_EMPTY_	../oatpp/src/oatpp/core/macro/basic.hpp	/^#define OATPP_MACRO_FOREACH_OR_EMPTY_(/;"	d
OATPP_MACRO_FOREACH_OR_EMPTY_0	../oatpp/src/oatpp/core/macro/basic.hpp	/^#define OATPP_MACRO_FOREACH_OR_EMPTY_0(/;"	d
OATPP_MACRO_FOREACH_OR_EMPTY_1	../oatpp/src/oatpp/core/macro/basic.hpp	/^#define OATPP_MACRO_FOREACH_OR_EMPTY_1(/;"	d
OATPP_MACRO_FOREACH_OR_EMPTY__	../oatpp/src/oatpp/core/macro/basic.hpp	/^#define OATPP_MACRO_FOREACH_OR_EMPTY__(/;"	d
OATPP_MACRO_FOREACH_OR_EMPTY___	../oatpp/src/oatpp/core/macro/basic.hpp	/^#define OATPP_MACRO_FOREACH_OR_EMPTY___(/;"	d
OATPP_MACRO_FOREACH__	../oatpp/src/oatpp/core/macro/basic.hpp	/^#define OATPP_MACRO_FOREACH__(/;"	d
OATPP_MACRO_GET_COMPONENT_	../oatpp/src/oatpp/core/macro/component.hpp	/^#define OATPP_MACRO_GET_COMPONENT_(/;"	d
OATPP_MACRO_GET_COMPONENT_0	../oatpp/src/oatpp/core/macro/component.hpp	/^#define OATPP_MACRO_GET_COMPONENT_0(/;"	d
OATPP_MACRO_GET_COMPONENT_1	../oatpp/src/oatpp/core/macro/component.hpp	/^#define OATPP_MACRO_GET_COMPONENT_1(/;"	d
OATPP_MACRO_GET_COMPONENT__	../oatpp/src/oatpp/core/macro/component.hpp	/^#define OATPP_MACRO_GET_COMPONENT__(/;"	d
OATPP_MACRO_GET_COMPONENT___	../oatpp/src/oatpp/core/macro/component.hpp	/^#define OATPP_MACRO_GET_COMPONENT___(/;"	d
OATPP_MACRO_HAS_ARGS	../oatpp/src/oatpp/core/macro/basic.hpp	/^#define OATPP_MACRO_HAS_ARGS(/;"	d
OATPP_MACRO_HAS_ARGS_	../oatpp/src/oatpp/core/macro/basic.hpp	/^#define OATPP_MACRO_HAS_ARGS_(/;"	d
OATPP_MACRO_HAS_ARGS_ARR	../oatpp/src/oatpp/core/macro/basic.hpp	/^#define OATPP_MACRO_HAS_ARGS_ARR(/;"	d
OATPP_MACRO_HAS_ARGS_NOT_0	../oatpp/src/oatpp/core/macro/basic.hpp	/^#define OATPP_MACRO_HAS_ARGS_NOT_0 /;"	d
OATPP_MACRO_HAS_ARGS_NOT_1	../oatpp/src/oatpp/core/macro/basic.hpp	/^#define OATPP_MACRO_HAS_ARGS_NOT_1 /;"	d
OATPP_MACRO_HAS_ARGS__	../oatpp/src/oatpp/core/macro/basic.hpp	/^#define OATPP_MACRO_HAS_ARGS__(/;"	d
OATPP_MACRO_ISEMPTY	../oatpp/src/oatpp/core/macro/basic.hpp	/^#define OATPP_MACRO_ISEMPTY(/;"	d
OATPP_MACRO_ISEMPTY_	../oatpp/src/oatpp/core/macro/basic.hpp	/^#define OATPP_MACRO_ISEMPTY_(/;"	d
OATPP_MACRO_IS_EMPTY_CASE_0001	../oatpp/src/oatpp/core/macro/basic.hpp	/^#define OATPP_MACRO_IS_EMPTY_CASE_0001 /;"	d
OATPP_MACRO_MACRO_OR_EMPTY	../oatpp/src/oatpp/core/macro/basic.hpp	/^#define OATPP_MACRO_MACRO_OR_EMPTY(/;"	d
OATPP_MACRO_MACRO_OR_EMPTY_	../oatpp/src/oatpp/core/macro/basic.hpp	/^#define OATPP_MACRO_MACRO_OR_EMPTY_(/;"	d
OATPP_MACRO_MACRO_OR_EMPTY_0	../oatpp/src/oatpp/core/macro/basic.hpp	/^#define OATPP_MACRO_MACRO_OR_EMPTY_0(/;"	d
OATPP_MACRO_MACRO_OR_EMPTY_1	../oatpp/src/oatpp/core/macro/basic.hpp	/^#define OATPP_MACRO_MACRO_OR_EMPTY_1(/;"	d
OATPP_MACRO_MACRO_OR_EMPTY__	../oatpp/src/oatpp/core/macro/basic.hpp	/^#define OATPP_MACRO_MACRO_OR_EMPTY__(/;"	d
OATPP_MACRO_MACRO_OR_EMPTY___	../oatpp/src/oatpp/core/macro/basic.hpp	/^#define OATPP_MACRO_MACRO_OR_EMPTY___(/;"	d
OATPP_MACRO_NUM_ARGS	../oatpp/src/oatpp/core/macro/basic.hpp	/^#define OATPP_MACRO_NUM_ARGS(/;"	d
OATPP_MACRO_PASTE5	../oatpp/src/oatpp/core/macro/basic.hpp	/^#define OATPP_MACRO_PASTE5(/;"	d
OATPP_MACRO_RESTARGS	../oatpp/src/oatpp/core/macro/basic.hpp	/^#define OATPP_MACRO_RESTARGS(/;"	d
OATPP_MACRO_STR	../oatpp/src/oatpp/core/macro/basic.hpp	/^#define OATPP_MACRO_STR(/;"	d
OATPP_MACRO_TRIGGER_PARENTHESIS_	../oatpp/src/oatpp/core/macro/basic.hpp	/^#define OATPP_MACRO_TRIGGER_PARENTHESIS_(/;"	d
OATPP_MACRO__NUM_ARGS	../oatpp/src/oatpp/core/macro/basic.hpp	/^#define OATPP_MACRO__NUM_ARGS(/;"	d
OATPP_MODULE_LIBDIR	../oatpp/cmake/module-install.cmake	/^set(OATPP_MODULE_LIBDIR ${CMAKE_INSTALL_LIBDIR} CACHE STRING "lib folder name")$/;"	v
OATPP_MODULE_LIBRARIES	../oatpp/cmake/module-install.cmake	/^set(OATPP_MODULE_LIBRARIES$/;"	v
OATPP_MODULE_NAME	../oatpp/cmake/module-install.cmake	/^set(OATPP_MODULE_NAME ${OATPP_THIS_MODULE_NAME} CACHE STRING "oatpp module name")$/;"	v
OATPP_MODULE_VERSION	../oatpp/cmake/module-install.cmake	/^set(OATPP_MODULE_VERSION "${OATPP_THIS_MODULE_VERSION}" CACHE STRING "oatpp module version")$/;"	v
OATPP_RUN_TEST	../oatpp/src/oatpp-test/UnitTest.hpp	/^#define OATPP_RUN_TEST(/;"	d
OATPP_THIS_MODULE_DIRECTORIES	../oatpp/CMakeLists.txt	/^set(OATPP_THIS_MODULE_DIRECTORIES oatpp oatpp-test) ## list of directories to install$/;"	v
OATPP_THIS_MODULE_LIBRARIES	../oatpp/CMakeLists.txt	/^set(OATPP_THIS_MODULE_LIBRARIES oatpp oatpp-test) ## list of libraries to find when find_package/;"	v
OATPP_THIS_MODULE_NAME	../oatpp/CMakeLists.txt	/^set(OATPP_THIS_MODULE_NAME oatpp) ## name of the module (also name of folders in installation di/;"	v
OATPP_THIS_MODULE_TARGETS	../oatpp/CMakeLists.txt	/^set(OATPP_THIS_MODULE_TARGETS oatpp oatpp-test) ## list of targets to install$/;"	v
OATPP_THIS_MODULE_VERSION	../oatpp/CMakeLists.txt	/^set(OATPP_THIS_MODULE_VERSION ${oatpp_VERSION}) ## version of the module (also sufix of folders /;"	v
OATPP_THREAD_DISTRIBUTED_MEM_POOL_SHARDS_COUNT	../oatpp/CMakeLists.txt	/^set(OATPP_THREAD_DISTRIBUTED_MEM_POOL_SHARDS_COUNT "10" CACHE STRING "Number of shards of Thread/;"	v
OATPP_THREAD_DISTRIBUTED_MEM_POOL_SHARDS_COUNT	../oatpp/src/oatpp/core/base/Config.hpp	/^  #define OATPP_THREAD_DISTRIBUTED_MEM_POOL_SHARDS_COUNT /;"	d
OATPP_THREAD_HARDWARE_CONCURRENCY	../oatpp/CMakeLists.txt	/^set(OATPP_THREAD_HARDWARE_CONCURRENCY "AUTO" CACHE STRING "Predefined value for function oatpp::/;"	v
OATPP_VERSION	../oatpp/src/oatpp/core/base/Environment.hpp	/^#define OATPP_VERSION /;"	d
OBJECT_POOL	../oatpp/src/oatpp/core/base/memory/ObjectPool.hpp	/^#define OBJECT_POOL(/;"	d
OBJECT_POOL_THREAD_LOCAL	../oatpp/src/oatpp/core/base/memory/ObjectPool.hpp	/^  #define OBJECT_POOL_THREAD_LOCAL(/;"	d
Object	../oatpp/src/oatpp/core/data/mapping/type/Object.hpp	/^  class Object : public AbstractObject {$/;"	c	namespace:oatpp::data::mapping::type::__class
Object	../oatpp/src/oatpp/core/data/mapping/type/Object.hpp	/^class Object : public oatpp::base::Countable {$/;"	c	namespace:oatpp::data::mapping::type
Object	../oatpp/src/oatpp/parser/json/mapping/Deserializer.hpp	/^  typedef oatpp::data::mapping::type::Object Object;$/;"	t	class:oatpp::parser::json::mapping::Deserializer	typeref:typename:oatpp::data::mapping::type::Object
Object	../oatpp/src/oatpp/parser/json/mapping/Serializer.hpp	/^  typedef oatpp::data::mapping::type::Object Object;$/;"	t	class:oatpp::parser::json::mapping::Serializer	typeref:typename:oatpp::data::mapping::type::Object
ObjectMapper	../oatpp/src/oatpp/core/data/mapping/ObjectMapper.cpp	/^ObjectMapper::ObjectMapper(const Info& info)$/;"	f	class:oatpp::data::mapping::ObjectMapper
ObjectMapper	../oatpp/src/oatpp/core/data/mapping/ObjectMapper.hpp	/^class ObjectMapper {$/;"	c	namespace:oatpp::data::mapping
ObjectMapper	../oatpp/src/oatpp/parser/json/mapping/ObjectMapper.cpp	/^ObjectMapper::ObjectMapper(const std::shared_ptr<Serializer::Config>& pSerializerConfig,$/;"	f	class:oatpp::parser::json::mapping::ObjectMapper
ObjectMapper	../oatpp/src/oatpp/parser/json/mapping/ObjectMapper.hpp	/^class ObjectMapper : public oatpp::base::Countable, public oatpp::data::mapping::ObjectMapper {$/;"	c	namespace:oatpp::parser::json::mapping
ObjectMapper	../oatpp/src/oatpp/web/server/api/ApiController.hpp	/^  typedef oatpp::data::mapping::ObjectMapper ObjectMapper;$/;"	t	class:oatpp::web::server::api::ApiController	typeref:typename:oatpp::data::mapping::ObjectMapper
ObjectType	../oatpp/src/oatpp/core/data/mapping/type/Type.hpp	/^  typedef T ObjectType;$/;"	t	class:oatpp::data::mapping::type::ObjectWrapper	typeref:typename:T
ObjectType	../oatpp/src/oatpp/core/data/mapping/type/Type.hpp	/^  typedef T ObjectType;$/;"	t	class:oatpp::data::mapping::type::PolymorphicWrapper	typeref:typename:T
ObjectWrapper	../oatpp/src/oatpp/core/data/mapping/type/List.hpp	/^  typedef oatpp::data::mapping::type::ObjectWrapper<ListTypeTemplate, Class> ObjectWrapper;$/;"	t	class:oatpp::data::mapping::type::ListTypeTemplate	typeref:typename:oatpp::data::mapping::type::ObjectWrapper<ListTypeTemplate,Class>
ObjectWrapper	../oatpp/src/oatpp/core/data/mapping/type/ListMap.hpp	/^  typedef oatpp::data::mapping::type::ObjectWrapper<ListMap, __class::ListMap<Key, Value>> Objec/;"	t	class:oatpp::data::mapping::type::ListMap	typeref:typename:oatpp::data::mapping::type::ObjectWrapper<ListMap,__class::ListMap<Key,Value>>
ObjectWrapper	../oatpp/src/oatpp/core/data/mapping/type/Primitive.hpp	/^    ObjectWrapper()$/;"	f	class:oatpp::data::mapping::type::Primitive::ObjectWrapper
ObjectWrapper	../oatpp/src/oatpp/core/data/mapping/type/Primitive.hpp	/^    ObjectWrapper(ObjectWrapper&& other)$/;"	f	class:oatpp::data::mapping::type::Primitive::ObjectWrapper
ObjectWrapper	../oatpp/src/oatpp/core/data/mapping/type/Primitive.hpp	/^    ObjectWrapper(const ObjectWrapper& other)$/;"	f	class:oatpp::data::mapping::type::Primitive::ObjectWrapper
ObjectWrapper	../oatpp/src/oatpp/core/data/mapping/type/Primitive.hpp	/^    ObjectWrapper(const ValueType& value)$/;"	f	class:oatpp::data::mapping::type::Primitive::ObjectWrapper
ObjectWrapper	../oatpp/src/oatpp/core/data/mapping/type/Primitive.hpp	/^    ObjectWrapper(const std::shared_ptr<Primitive>& ptr)$/;"	f	class:oatpp::data::mapping::type::Primitive::ObjectWrapper
ObjectWrapper	../oatpp/src/oatpp/core/data/mapping/type/Primitive.hpp	/^    ObjectWrapper(const std::shared_ptr<Primitive>& ptr, const type::Type* const valueType)$/;"	f	class:oatpp::data::mapping::type::Primitive::ObjectWrapper
ObjectWrapper	../oatpp/src/oatpp/core/data/mapping/type/Primitive.hpp	/^    ObjectWrapper(std::shared_ptr<Primitive>&& ptr)$/;"	f	class:oatpp::data::mapping::type::Primitive::ObjectWrapper
ObjectWrapper	../oatpp/src/oatpp/core/data/mapping/type/Primitive.hpp	/^  class ObjectWrapper : public oatpp::data::mapping::type::ObjectWrapper<Primitive, Clazz> {$/;"	c	class:oatpp::data::mapping::type::Primitive
ObjectWrapper	../oatpp/src/oatpp/core/data/mapping/type/Type.hpp	/^  ObjectWrapper()$/;"	f	class:oatpp::data::mapping::type::ObjectWrapper
ObjectWrapper	../oatpp/src/oatpp/core/data/mapping/type/Type.hpp	/^  ObjectWrapper(PolymorphicWrapper<T>&& other)$/;"	f	class:oatpp::data::mapping::type::ObjectWrapper
ObjectWrapper	../oatpp/src/oatpp/core/data/mapping/type/Type.hpp	/^  ObjectWrapper(const PolymorphicWrapper<T>& other)$/;"	f	class:oatpp::data::mapping::type::ObjectWrapper
ObjectWrapper	../oatpp/src/oatpp/core/data/mapping/type/Type.hpp	/^  ObjectWrapper(const std::shared_ptr<T>& ptr)$/;"	f	class:oatpp::data::mapping::type::ObjectWrapper
ObjectWrapper	../oatpp/src/oatpp/core/data/mapping/type/Type.hpp	/^  ObjectWrapper(const std::shared_ptr<T>& ptr, const type::Type* const valueType)$/;"	f	class:oatpp::data::mapping::type::ObjectWrapper
ObjectWrapper	../oatpp/src/oatpp/core/data/mapping/type/Type.hpp	/^  ObjectWrapper(std::nullptr_t nullptrt)$/;"	f	class:oatpp::data::mapping::type::ObjectWrapper
ObjectWrapper	../oatpp/src/oatpp/core/data/mapping/type/Type.hpp	/^class ObjectWrapper : public PolymorphicWrapper<T>{$/;"	c	namespace:oatpp::data::mapping::type
ObjectWrapper	../oatpp/test/oatpp/core/base/RegRuleTest.cpp	/^  using ObjectWrapper = oatpp::data::mapping::type::PolymorphicWrapper<T>;$/;"	t	namespace:oatpp::test::base::__anon40c2e60e0110	typeref:typename:oatpp::data::mapping::type::PolymorphicWrapper<T>	file:
Open an issue	../oatpp/CONTRIBUTING.md	/^### Open an issue$/;"	S
Our Pledge	../oatpp/CODE_OF_CONDUCT.md	/^## Our Pledge$/;"	s
Our Responsibilities	../oatpp/CODE_OF_CONDUCT.md	/^## Our Responsibilities$/;"	s
Our Standards	../oatpp/CODE_OF_CONDUCT.md	/^## Our Standards$/;"	s
OutgoingRequest	../oatpp/src/oatpp/web/server/api/ApiController.hpp	/^  typedef oatpp::web::protocol::http::outgoing::Request OutgoingRequest;$/;"	t	class:oatpp::web::server::api::ApiController	typeref:typename:oatpp::web::protocol::http::outgoing::Request
OutgoingResponse	../oatpp/src/oatpp/web/server/HttpRequestHandler.hpp	/^  typedef oatpp::web::protocol::http::outgoing::Response OutgoingResponse;$/;"	t	class:oatpp::web::server::HttpRequestHandler	typeref:typename:oatpp::web::protocol::http::outgoing::Response
OutgoingResponse	../oatpp/src/oatpp/web/server/api/ApiController.hpp	/^  typedef oatpp::web::protocol::http::outgoing::Response OutgoingResponse;$/;"	t	class:oatpp::web::server::api::ApiController	typeref:typename:oatpp::web::protocol::http::outgoing::Response
OutgoingResponse	../oatpp/src/oatpp/web/server/handler/Interceptor.hpp	/^  typedef oatpp::web::protocol::http::outgoing::Response OutgoingResponse;$/;"	t	class:oatpp::web::server::handler::RequestInterceptor	typeref:typename:oatpp::web::protocol::http::outgoing::Response
OutputStream	../oatpp/src/oatpp/core/data/stream/Stream.hpp	/^class OutputStream {$/;"	c	namespace:oatpp::data::stream
OutputStream	../oatpp/src/oatpp/web/protocol/http/outgoing/Body.hpp	/^  typedef oatpp::data::stream::OutputStream OutputStream;$/;"	t	class:oatpp::web::protocol::http::outgoing::Body	typeref:typename:oatpp::data::stream::OutputStream
OutputStreamBufferedProxy	../oatpp/src/oatpp/core/data/stream/StreamBufferedProxy.hpp	/^  OutputStreamBufferedProxy(const std::shared_ptr<OutputStream>& outputStream,$/;"	f	class:oatpp::data::stream::OutputStreamBufferedProxy
OutputStreamBufferedProxy	../oatpp/src/oatpp/core/data/stream/StreamBufferedProxy.hpp	/^class OutputStreamBufferedProxy : public oatpp::base::Countable, public OutputStream {$/;"	c	namespace:oatpp::data::stream
Overview	README.md	/^## Overview$/;"	s
PACKAGE_VERSION	../oatpp/build/src/oatppConfigVersion.cmake	/^  set(PACKAGE_VERSION "${PACKAGE_VERSION} (${installedBits}bit)")$/;"	v
PACKAGE_VERSION	../oatpp/build/src/oatppConfigVersion.cmake	/^set(PACKAGE_VERSION "0.19.6")$/;"	v
PACKAGE_VERSION_COMPATIBLE	../oatpp/build/src/oatppConfigVersion.cmake	/^  set(PACKAGE_VERSION_COMPATIBLE FALSE)$/;"	v
PACKAGE_VERSION_COMPATIBLE	../oatpp/build/src/oatppConfigVersion.cmake	/^  set(PACKAGE_VERSION_COMPATIBLE TRUE)$/;"	v
PACKAGE_VERSION_EXACT	../oatpp/build/src/oatppConfigVersion.cmake	/^  set(PACKAGE_VERSION_EXACT TRUE)$/;"	v
PACKAGE_VERSION_UNSUITABLE	../oatpp/build/src/oatppConfigVersion.cmake	/^  set(PACKAGE_VERSION_UNSUITABLE TRUE)$/;"	v
PATH	../oatpp/src/oatpp/codegen/codegen_define_ApiClient_.hpp	/^#define PATH(/;"	d
PATH	../oatpp/src/oatpp/codegen/codegen_define_ApiController_.hpp	/^#define PATH(/;"	d
PLATFORM_ID	../oatpp/build/CMakeFiles/3.14.5/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#  define PLATFORM_ID /;"	d	file:
PLATFORM_ID	../oatpp/build/CMakeFiles/3.14.5/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#  define PLATFORM_ID$/;"	d	file:
PLATFORM_ID	../oatpp/build/CMakeFiles/3.14.5/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^# define PLATFORM_ID /;"	d	file:
PLATFORM_ID	../oatpp/build/CMakeFiles/3.14.5/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^# define PLATFORM_ID$/;"	d	file:
POOLS	../oatpp/src/oatpp/core/base/memory/MemoryPool.cpp	/^std::unordered_map<v_int64, MemoryPool*> MemoryPool::POOLS;$/;"	m	class:oatpp::base::memory::MemoryPool	typeref:typename:std::unordered_map<v_int64,MemoryPool * >
POOLS	../oatpp/src/oatpp/core/base/memory/MemoryPool.hpp	/^  static std::unordered_map<v_int64, MemoryPool*> POOLS;$/;"	m	class:oatpp::base::memory::MemoryPool	typeref:typename:std::unordered_map<v_int64,MemoryPool * >
POOLS_SPIN_LOCK	../oatpp/src/oatpp/core/base/memory/MemoryPool.cpp	/^oatpp::concurrency::SpinLock MemoryPool::POOLS_SPIN_LOCK;$/;"	m	class:oatpp::base::memory::MemoryPool	typeref:typename:oatpp::concurrency::SpinLock
POOLS_SPIN_LOCK	../oatpp/src/oatpp/core/base/memory/MemoryPool.hpp	/^  static oatpp::concurrency::SpinLock POOLS_SPIN_LOCK;$/;"	m	class:oatpp::base::memory::MemoryPool	typeref:typename:oatpp::concurrency::SpinLock
PRIORITY_D	../oatpp/src/oatpp/core/base/Environment.hpp	/^  static constexpr v_int32 PRIORITY_D = 1;$/;"	m	class:oatpp::base::Logger	typeref:typename:v_int32
PRIORITY_E	../oatpp/src/oatpp/core/base/Environment.hpp	/^  static constexpr v_int32 PRIORITY_E = 4;$/;"	m	class:oatpp::base::Logger	typeref:typename:v_int32
PRIORITY_I	../oatpp/src/oatpp/core/base/Environment.hpp	/^  static constexpr v_int32 PRIORITY_I = 2;$/;"	m	class:oatpp::base::Logger	typeref:typename:v_int32
PRIORITY_V	../oatpp/src/oatpp/core/base/Environment.hpp	/^  static constexpr v_int32 PRIORITY_V = 0;$/;"	m	class:oatpp::base::Logger	typeref:typename:v_int32
PRIORITY_W	../oatpp/src/oatpp/core/base/Environment.hpp	/^  static constexpr v_int32 PRIORITY_W = 3;$/;"	m	class:oatpp::base::Logger	typeref:typename:v_int32
PROCESSOR	../oatpp/src/oatpp/core/async/worker/Worker.hpp	/^    PROCESSOR = 0,$/;"	e	enum:oatpp::async::worker::Worker::Type
PROPERTY_HOST	../oatpp/src/oatpp/network/ConnectionProvider.cpp	/^const char* const ConnectionProvider::PROPERTY_HOST = "host";$/;"	m	class:oatpp::network::ConnectionProvider	typeref:typename:const char * const
PROPERTY_HOST	../oatpp/src/oatpp/network/ConnectionProvider.hpp	/^  static const char* const PROPERTY_HOST;$/;"	m	class:oatpp::network::ConnectionProvider	typeref:typename:const char * const
PROPERTY_PORT	../oatpp/src/oatpp/network/ConnectionProvider.cpp	/^const char* const ConnectionProvider::PROPERTY_PORT = "port";$/;"	m	class:oatpp::network::ConnectionProvider	typeref:typename:const char * const
PROPERTY_PORT	../oatpp/src/oatpp/network/ConnectionProvider.hpp	/^  static const char* const PROPERTY_PORT;$/;"	m	class:oatpp::network::ConnectionProvider	typeref:typename:const char * const
Pair	../oatpp/src/oatpp/web/url/mapping/Router.hpp	/^  typedef std::pair<std::shared_ptr<Pattern>, std::shared_ptr<Endpoint>> Pair;$/;"	t	class:oatpp::web::url::mapping::Router	typeref:typename:std::pair<std::shared_ptr<Pattern>,std::shared_ptr<Endpoint>>
Param	../oatpp/src/oatpp/web/server/api/Endpoint.cpp	/^Endpoint::Info::Param::Param()$/;"	f	class:oatpp::web::server::api::Endpoint::Info::Param
Param	../oatpp/src/oatpp/web/server/api/Endpoint.cpp	/^Endpoint::Info::Param::Param(const oatpp::String& pName,$/;"	f	class:oatpp::web::server::api::Endpoint::Info::Param
Param	../oatpp/src/oatpp/web/server/api/Endpoint.hpp	/^    struct Param {$/;"	s	class:oatpp::web::server::api::Endpoint::Info
ParameterMap	../oatpp/src/oatpp/network/server/ConnectionHandler.hpp	/^  typedef std::unordered_map<oatpp::String, oatpp::String> ParameterMap;$/;"	t	class:oatpp::network::server::ConnectionHandler	typeref:typename:std::unordered_map<oatpp::String,oatpp::String>
Parameters	../oatpp/src/oatpp/network/Url.hpp	/^  typedef std::unordered_map<oatpp::String, oatpp::String> Parameters;$/;"	t	class:oatpp::network::Url	typeref:typename:std::unordered_map<oatpp::String,oatpp::String>
ParametersAsLabels	../oatpp/src/oatpp/network/Url.hpp	/^  typedef std::unordered_map<StringKeyLabel, StringKeyLabel> ParametersAsLabels;$/;"	t	class:oatpp::network::Url	typeref:typename:std::unordered_map<StringKeyLabel,StringKeyLabel>
Params	../oatpp/src/oatpp/web/server/api/Endpoint.hpp	/^    class Params {$/;"	c	class:oatpp::web::server::api::Endpoint::Info
Parser	../oatpp/src/oatpp/core/base/CommandLineArguments.hpp	/^  class Parser {$/;"	c	class:oatpp::base::CommandLineArguments
Parser	../oatpp/src/oatpp/network/Url.hpp	/^  class Parser {$/;"	c	class:oatpp::network::Url
Parser	../oatpp/src/oatpp/web/protocol/http/Http.hpp	/^class Parser {$/;"	c	namespace:oatpp::web::protocol::http
ParsingCaret	../oatpp/src/oatpp/parser/json/Utils.hpp	/^  typedef oatpp::parser::Caret ParsingCaret;$/;"	t	class:oatpp::parser::json::Utils	typeref:typename:oatpp::parser::Caret
ParsingCaret	../oatpp/test/oatpp/parser/json/mapping/DeserializerTest.cpp	/^typedef oatpp::parser::Caret ParsingCaret;$/;"	t	namespace:oatpp::test::parser::json::mapping::__anon769c5f590110	typeref:typename:oatpp::parser::Caret	file:
ParsingError	../oatpp/src/oatpp/core/parser/ParsingError.cpp	/^ParsingError::ParsingError(const oatpp::String &message, v_int32 code, v_int32 position)$/;"	f	class:oatpp::parser::ParsingError
ParsingError	../oatpp/src/oatpp/core/parser/ParsingError.hpp	/^class ParsingError : public std::runtime_error {$/;"	c	namespace:oatpp::parser
Part	../oatpp/src/oatpp/web/url/mapping/Pattern.hpp	/^    Part(const char* pFunction, const oatpp::String& pText)$/;"	f	class:oatpp::web::url::mapping::Pattern::Part
Part	../oatpp/src/oatpp/web/url/mapping/Pattern.hpp	/^  class Part : public base::Countable{$/;"	c	class:oatpp::web::url::mapping::Pattern
Pass parameters to endpoint	../oatpp/README.md	/^### Pass parameters to endpoint$/;"	S
Pass parameters to endpoint Async	../oatpp/README.md	/^### Pass parameters to endpoint Async$/;"	S
PathPattern	../oatpp/src/oatpp/web/client/ApiClient.hpp	/^  typedef std::list<PathSegment> PathPattern;$/;"	t	class:oatpp::web::client::ApiClient	typeref:typename:std::list<PathSegment>
PathSegment	../oatpp/src/oatpp/web/client/ApiClient.hpp	/^    PathSegment(const std::string& pText, v_int32 pType)$/;"	f	class:oatpp::web::client::ApiClient::PathSegment
PathSegment	../oatpp/src/oatpp/web/client/ApiClient.hpp	/^  class PathSegment {$/;"	c	class:oatpp::web::client::ApiClient
PathVariablesMap	../oatpp/src/oatpp/web/client/ApiClient.hpp	/^  typedef std::unordered_map<std::string, oatpp::String> PathVariablesMap;$/;"	t	class:oatpp::web::client::ApiClient	typeref:typename:std::unordered_map<std::string,oatpp::String>
Pattern	../oatpp/src/oatpp/web/url/mapping/Pattern.hpp	/^  Pattern()$/;"	f	class:oatpp::web::url::mapping::Pattern
Pattern	../oatpp/src/oatpp/web/url/mapping/Pattern.hpp	/^class Pattern : public base::Countable{$/;"	c	namespace:oatpp::web::url::mapping
PerfTest	../oatpp/test/oatpp/core/base/memory/PerfTest.hpp	/^  PerfTest():UnitTest("TEST[base::memory::PerfTest]"){}$/;"	f	class:oatpp::test::memory::PerfTest
PerfTest	../oatpp/test/oatpp/core/base/memory/PerfTest.hpp	/^class PerfTest : public UnitTest{$/;"	c	namespace:oatpp::test::memory
PerfTest_hpp	../oatpp/test/oatpp/core/base/memory/PerfTest.hpp	/^#define PerfTest_hpp$/;"	d
PerformanceChecker	../oatpp/src/oatpp-test/Checker.cpp	/^PerformanceChecker::PerformanceChecker(const char* tag)$/;"	f	class:oatpp::test::PerformanceChecker
PerformanceChecker	../oatpp/src/oatpp-test/Checker.hpp	/^class PerformanceChecker {$/;"	c	namespace:oatpp::test
Pipe	../oatpp/src/oatpp/network/virtual_/Pipe.cpp	/^Pipe::Pipe()$/;"	f	class:oatpp::network::virtual_::Pipe
Pipe	../oatpp/src/oatpp/network/virtual_/Pipe.hpp	/^class Pipe : public oatpp::base::Countable {$/;"	c	namespace:oatpp::network::virtual_
Pipe	../oatpp/test/oatpp/network/virtual_/PipeTest.cpp	/^  typedef oatpp::network::virtual_::Pipe Pipe;$/;"	t	namespace:oatpp::test::network::virtual_::__anon0e2557b20110	typeref:typename:oatpp::network::virtual_::Pipe	file:
PipeTest	../oatpp/test/oatpp/network/virtual_/PipeTest.hpp	/^  PipeTest():UnitTest("TEST[network::virtual_::PipeTest]"){}$/;"	f	class:oatpp::test::network::virtual_::PipeTest
PipeTest	../oatpp/test/oatpp/network/virtual_/PipeTest.hpp	/^class PipeTest : public UnitTest {$/;"	c	namespace:oatpp::test::network::virtual_
Playlist	src/hls/Playlist.hpp	/^  Playlist(const std::shared_ptr<RecordMarkerList>& records)$/;"	f	class:Playlist
Playlist	src/hls/Playlist.hpp	/^class Playlist {$/;"	c
Playlist_hpp	src/hls/Playlist.hpp	/^#define Playlist_hpp$/;"	d
PolymorphicWrapper	../oatpp/src/oatpp/core/data/mapping/type/Type.hpp	/^  PolymorphicWrapper()$/;"	f	class:oatpp::data::mapping::type::PolymorphicWrapper
PolymorphicWrapper	../oatpp/src/oatpp/core/data/mapping/type/Type.hpp	/^  PolymorphicWrapper(PolymorphicWrapper&& other)$/;"	f	class:oatpp::data::mapping::type::PolymorphicWrapper
PolymorphicWrapper	../oatpp/src/oatpp/core/data/mapping/type/Type.hpp	/^  PolymorphicWrapper(const PolymorphicWrapper& other)$/;"	f	class:oatpp::data::mapping::type::PolymorphicWrapper
PolymorphicWrapper	../oatpp/src/oatpp/core/data/mapping/type/Type.hpp	/^  PolymorphicWrapper(const Type* const type)$/;"	f	class:oatpp::data::mapping::type::PolymorphicWrapper
PolymorphicWrapper	../oatpp/src/oatpp/core/data/mapping/type/Type.hpp	/^  PolymorphicWrapper(const std::shared_ptr<T>& ptr)$/;"	f	class:oatpp::data::mapping::type::PolymorphicWrapper
PolymorphicWrapper	../oatpp/src/oatpp/core/data/mapping/type/Type.hpp	/^  PolymorphicWrapper(const std::shared_ptr<T>& ptr, const Type* const type)$/;"	f	class:oatpp::data::mapping::type::PolymorphicWrapper
PolymorphicWrapper	../oatpp/src/oatpp/core/data/mapping/type/Type.hpp	/^  PolymorphicWrapper(std::shared_ptr<T>&& ptr, const Type* const type)$/;"	f	class:oatpp::data::mapping::type::PolymorphicWrapper
PolymorphicWrapper	../oatpp/src/oatpp/core/data/mapping/type/Type.hpp	/^class PolymorphicWrapper {$/;"	c	namespace:oatpp::data::mapping::type
PolymorphicWrapper	../oatpp/src/oatpp/parser/json/mapping/Serializer.hpp	/^  using PolymorphicWrapper = data::mapping::type::PolymorphicWrapper<T>;$/;"	t	class:oatpp::parser::json::mapping::Serializer	typeref:typename:data::mapping::type::PolymorphicWrapper<T>
PolymorphicWrapper	../oatpp/test/oatpp/core/base/RegRuleTest.cpp	/^  using PolymorphicWrapper = oatpp::data::mapping::type::PolymorphicWrapper<T>;$/;"	t	namespace:oatpp::test::base::__anon40c2e60e0110	typeref:typename:oatpp::data::mapping::type::PolymorphicWrapper<T>	file:
PoolSharedObjectAllocator	../oatpp/src/oatpp/core/base/memory/Allocator.hpp	/^  PoolSharedObjectAllocator(const AllocatorPoolInfo& info)$/;"	f	class:oatpp::base::memory::PoolSharedObjectAllocator
PoolSharedObjectAllocator	../oatpp/src/oatpp/core/base/memory/Allocator.hpp	/^  PoolSharedObjectAllocator(const PoolSharedObjectAllocator<U>& other)$/;"	f	class:oatpp::base::memory::PoolSharedObjectAllocator
PoolSharedObjectAllocator	../oatpp/src/oatpp/core/base/memory/Allocator.hpp	/^class PoolSharedObjectAllocator {$/;"	c	namespace:oatpp::base::memory
Post JSON body	../oatpp/README.md	/^### Post JSON body$/;"	S
Post JSON body Async	../oatpp/README.md	/^### Post JSON body Async$/;"	S
Primitive	../oatpp/src/oatpp/core/data/mapping/type/Primitive.hpp	/^  Primitive(const ValueType& value)$/;"	f	class:oatpp::data::mapping::type::Primitive
Primitive	../oatpp/src/oatpp/core/data/mapping/type/Primitive.hpp	/^class Primitive : public oatpp::base::Countable {$/;"	c	namespace:oatpp::data::mapping::type
Processor	../oatpp/src/oatpp/core/async/Processor.hpp	/^  Processor()$/;"	f	class:oatpp::async::Processor
Processor	../oatpp/src/oatpp/core/async/Processor.hpp	/^class Processor {$/;"	c	namespace:oatpp::async
Project layout	README.md	/^### Project layout$/;"	S
Properties	../oatpp/src/oatpp/core/data/mapping/type/Type.hpp	/^  class Properties {$/;"	c	class:oatpp::data::mapping::type::Type
Properties	../oatpp/src/oatpp/parser/json/mapping/Deserializer.hpp	/^  typedef oatpp::data::mapping::type::Type::Properties Properties;$/;"	t	class:oatpp::parser::json::mapping::Deserializer	typeref:typename:oatpp::data::mapping::type::Type::Properties
Properties	../oatpp/src/oatpp/parser/json/mapping/Serializer.hpp	/^  typedef oatpp::data::mapping::type::Type::Properties Properties;$/;"	t	class:oatpp::parser::json::mapping::Serializer	typeref:typename:oatpp::data::mapping::type::Type::Properties
Property	../oatpp/src/oatpp/core/data/mapping/type/Type.cpp	/^Type::Property::Property(Properties* properties, v_int64 pOffset, const char* pName, Type* pType/;"	f	class:oatpp::data::mapping::type::Type::Property
Property	../oatpp/src/oatpp/core/data/mapping/type/Type.hpp	/^  class Property {$/;"	c	class:oatpp::data::mapping::type::Type
Property	../oatpp/src/oatpp/parser/json/mapping/Deserializer.hpp	/^  typedef oatpp::data::mapping::type::Type::Property Property;$/;"	t	class:oatpp::parser::json::mapping::Deserializer	typeref:typename:oatpp::data::mapping::type::Type::Property
Property	../oatpp/src/oatpp/parser/json/mapping/Serializer.hpp	/^  typedef oatpp::data::mapping::type::Type::Property Property;$/;"	t	class:oatpp::parser::json::mapping::Serializer	typeref:typename:oatpp::data::mapping::type::Type::Property
ProtocolError	../oatpp/src/oatpp/web/protocol/CommunicationError.hpp	/^  ProtocolError(const Info& info, const oatpp::String& message)$/;"	f	class:oatpp::web::protocol::ProtocolError
ProtocolError	../oatpp/src/oatpp/web/protocol/CommunicationError.hpp	/^class ProtocolError : public CommunicationError {$/;"	c	namespace:oatpp::web::protocol
ProtocolErrorInfo	../oatpp/src/oatpp/web/protocol/CommunicationError.hpp	/^  ProtocolErrorInfo()$/;"	f	struct:oatpp::web::protocol::ProtocolErrorInfo
ProtocolErrorInfo	../oatpp/src/oatpp/web/protocol/CommunicationError.hpp	/^  ProtocolErrorInfo(oatpp::data::v_io_size pIOStatus, const Status& pStatus)$/;"	f	struct:oatpp::web::protocol::ProtocolErrorInfo
ProtocolErrorInfo	../oatpp/src/oatpp/web/protocol/CommunicationError.hpp	/^struct ProtocolErrorInfo {$/;"	s	namespace:oatpp::web::protocol
QUERIES	../oatpp/src/oatpp/codegen/codegen_define_ApiController_.hpp	/^#define QUERIES(/;"	d
QUERY	../oatpp/src/oatpp/codegen/codegen_define_ApiClient_.hpp	/^#define QUERY(/;"	d
QUERY	../oatpp/src/oatpp/codegen/codegen_define_ApiController_.hpp	/^#define QUERY(/;"	d
QueryParams	../oatpp/src/oatpp/web/protocol/http/Http.hpp	/^typedef std::unordered_map<oatpp::data::share::StringKeyLabel, oatpp::data::share::StringKeyLabe/;"	t	namespace:oatpp::web::protocol::http	typeref:typename:std::unordered_map<oatpp::data::share::StringKeyLabel,oatpp::data::share::StringKeyLabel>
QueryParams	../oatpp/src/oatpp/web/server/HttpRequestHandler.hpp	/^  typedef oatpp::web::protocol::http::QueryParams QueryParams;$/;"	t	class:oatpp::web::server::HttpRequestHandler	typeref:typename:oatpp::web::protocol::http::QueryParams
QueryParams	../oatpp/src/oatpp/web/server/api/ApiController.hpp	/^  typedef oatpp::web::protocol::http::QueryParams QueryParams;$/;"	t	class:oatpp::web::server::api::ApiController	typeref:typename:oatpp::web::protocol::http::QueryParams
RANGE	../oatpp/src/oatpp/web/protocol/http/Http.cpp	/^const char* const Header::RANGE = "Range";$/;"	m	class:oatpp::web::protocol::http::Header	typeref:typename:const char * const
RANGE	../oatpp/src/oatpp/web/protocol/http/Http.hpp	/^  static const char* const RANGE;               \/\/ "Range"$/;"	m	class:oatpp::web::protocol::http::Header	typeref:typename:const char * const
REQUEST	../oatpp/src/oatpp/codegen/codegen_define_ApiController_.hpp	/^#define REQUEST(/;"	d
REQUESTED_VERSION_NO_TWEAK	../oatpp/build/src/oatppConfigVersion.cmake	/^  set(REQUESTED_VERSION_NO_TWEAK "${CMAKE_MATCH_1}")$/;"	v
REQUESTED_VERSION_NO_TWEAK	../oatpp/build/src/oatppConfigVersion.cmake	/^  set(REQUESTED_VERSION_NO_TWEAK "${PACKAGE_FIND_VERSION}")$/;"	v
RETRY	../oatpp/src/oatpp/core/data/IODefinitions.hpp	/^  RETRY = -1002,$/;"	e	enum:oatpp::data::IOError
RM	../oatpp/build/Makefile	/^RM = \/usr\/bin\/cmake -E remove -f$/;"	m
RM	../oatpp/build/src/Makefile	/^RM = \/usr\/bin\/cmake -E remove -f$/;"	m
RM	../oatpp/build/test/Makefile	/^RM = \/usr\/bin\/cmake -E remove -f$/;"	m
Range	../oatpp/src/oatpp/web/protocol/http/Http.hpp	/^  Range()$/;"	f	class:oatpp::web::protocol::http::Range
Range	../oatpp/src/oatpp/web/protocol/http/Http.hpp	/^  Range(const oatpp::String& pUnits,$/;"	f	class:oatpp::web::protocol::http::Range
Range	../oatpp/src/oatpp/web/protocol/http/Http.hpp	/^class Range {$/;"	c	namespace:oatpp::web::protocol::http
Reader	../oatpp/src/oatpp/network/virtual_/Pipe.hpp	/^    Reader(Pipe* pipe, oatpp::data::stream::IOMode ioMode = oatpp::data::stream::IOMode::BLOCKIN/;"	f	class:oatpp::network::virtual_::Pipe::Reader
Reader	../oatpp/src/oatpp/network/virtual_/Pipe.hpp	/^  class Reader : public oatpp::data::stream::InputStream {$/;"	c	class:oatpp::network::virtual_::Pipe
ReaderCoroutine	../oatpp/src/oatpp/web/protocol/http/incoming/RequestHeadersReader.cpp	/^    ReaderCoroutine(const std::shared_ptr<oatpp::data::stream::IOStream>& connection,$/;"	f	class:oatpp::web::protocol::http::incoming::RequestHeadersReader::readHeadersAsync::ReaderCoroutine	file:
ReaderCoroutine	../oatpp/src/oatpp/web/protocol/http/incoming/RequestHeadersReader.cpp	/^  class ReaderCoroutine : public oatpp::async::CoroutineWithResult<ReaderCoroutine, const Result/;"	c	function:oatpp::web::protocol::http::incoming::RequestHeadersReader::readHeadersAsync	file:
ReaderCoroutine	../oatpp/src/oatpp/web/protocol/http/incoming/ResponseHeadersReader.cpp	/^    ReaderCoroutine(const std::shared_ptr<oatpp::data::stream::IOStream>& connection,$/;"	f	class:oatpp::web::protocol::http::incoming::ResponseHeadersReader::readHeadersAsync::ReaderCoroutine	file:
ReaderCoroutine	../oatpp/src/oatpp/web/protocol/http/incoming/ResponseHeadersReader.cpp	/^  class ReaderCoroutine : public oatpp::async::CoroutineWithResult<ReaderCoroutine, const Result/;"	c	function:oatpp::web::protocol::http::incoming::ResponseHeadersReader::readHeadersAsync	file:
ReaderDelegate	../oatpp/src/oatpp/core/data/stream/Delegate.hpp	/^class ReaderDelegate {$/;"	c	namespace:oatpp::data::stream
ReaderTask	../oatpp/test/oatpp/network/virtual_/PipeTest.cpp	/^    ReaderTask(const std::shared_ptr<oatpp::data::stream::ChunkedBuffer> &buffer,$/;"	f	class:oatpp::test::network::virtual_::__anon0e2557b20110::ReaderTask	file:
ReaderTask	../oatpp/test/oatpp/network/virtual_/PipeTest.cpp	/^  class ReaderTask : public oatpp::base::Countable {$/;"	c	namespace:oatpp::test::network::virtual_::__anon0e2557b20110	file:
RecordMarker	src/hls/Playlist.hpp	/^  struct RecordMarker {$/;"	s	class:Playlist
RecordMarkerList	src/hls/Playlist.hpp	/^  typedef oatpp::collection::LinkedList<RecordMarker> RecordMarkerList;$/;"	t	class:Playlist	typeref:typename:oatpp::collection::LinkedList<RecordMarker>
RegRuleTest	../oatpp/test/oatpp/core/base/RegRuleTest.hpp	/^  RegRuleTest():UnitTest("TEST[base::RegRuleTest]"){}$/;"	f	class:oatpp::test::base::RegRuleTest
RegRuleTest	../oatpp/test/oatpp/core/base/RegRuleTest.hpp	/^class RegRuleTest : public UnitTest{$/;"	c	namespace:oatpp::test::base
Request	../oatpp/src/oatpp/web/protocol/http/incoming/Request.cpp	/^Request::Request(const http::RequestStartingLine& startingLine,$/;"	f	class:oatpp::web::protocol::http::incoming::Request
Request	../oatpp/src/oatpp/web/protocol/http/incoming/Request.hpp	/^class Request : public oatpp::base::Countable {$/;"	c	namespace:oatpp::web::protocol::http::incoming
Request	../oatpp/src/oatpp/web/protocol/http/outgoing/Request.cpp	/^Request::Request(const oatpp::data::share::StringKeyLabel& method,$/;"	f	class:oatpp::web::protocol::http::outgoing::Request
Request	../oatpp/src/oatpp/web/protocol/http/outgoing/Request.hpp	/^class Request : public oatpp::base::Countable, public std::enable_shared_from_this<Request> {$/;"	c	namespace:oatpp::web::protocol::http::outgoing
RequestExecutionError	../oatpp/src/oatpp/web/client/RequestExecutor.cpp	/^RequestExecutor::RequestExecutionError::RequestExecutionError(v_int32 errorCode, const char* mes/;"	f	class:oatpp::web::client::RequestExecutor::RequestExecutionError
RequestExecutionError	../oatpp/src/oatpp/web/client/RequestExecutor.hpp	/^  class RequestExecutionError : public std::runtime_error {$/;"	c	class:oatpp::web::client::RequestExecutor
RequestExecutor	../oatpp/src/oatpp/web/client/RequestExecutor.hpp	/^class RequestExecutor {$/;"	c	namespace:oatpp::web::client
RequestHandler	../oatpp/src/oatpp/web/server/api/Endpoint.hpp	/^  typedef oatpp::web::server::HttpRequestHandler RequestHandler;$/;"	t	class:oatpp::web::server::api::Endpoint	typeref:typename:oatpp::web::server::HttpRequestHandler
RequestHeadersReader	../oatpp/src/oatpp/web/protocol/http/incoming/RequestHeadersReader.hpp	/^  RequestHeadersReader(void* buffer, v_int32 bufferSize, v_int32 maxHeadersSize)$/;"	f	class:oatpp::web::protocol::http::incoming::RequestHeadersReader
RequestHeadersReader	../oatpp/src/oatpp/web/protocol/http/incoming/RequestHeadersReader.hpp	/^class RequestHeadersReader {$/;"	c	namespace:oatpp::web::protocol::http::incoming
RequestHeadersReader	../oatpp/src/oatpp/web/server/HttpProcessor.hpp	/^  typedef oatpp::web::protocol::http::incoming::RequestHeadersReader RequestHeadersReader;$/;"	t	class:oatpp::web::server::HttpProcessor	typeref:typename:oatpp::web::protocol::http::incoming::RequestHeadersReader
RequestInterceptor	../oatpp/src/oatpp/web/server/handler/Interceptor.hpp	/^class RequestInterceptor {$/;"	c	namespace:oatpp::web::server::handler
RequestInterceptors	../oatpp/src/oatpp/web/server/HttpProcessor.hpp	/^  typedef oatpp::collection::LinkedList<std::shared_ptr<oatpp::web::server::handler::RequestInte/;"	t	class:oatpp::web::server::HttpProcessor	typeref:typename:oatpp::collection::LinkedList<std::shared_ptr<oatpp::web::server::handler::RequestInterceptor>>
RequestStartingLine	../oatpp/src/oatpp/web/protocol/http/Http.hpp	/^struct RequestStartingLine {$/;"	s	namespace:oatpp::web::protocol::http
Response	../oatpp/src/oatpp/web/client/ApiClient.hpp	/^  typedef oatpp::web::protocol::http::incoming::Response Response;$/;"	t	class:oatpp::web::client::ApiClient	typeref:typename:oatpp::web::protocol::http::incoming::Response
Response	../oatpp/src/oatpp/web/client/RequestExecutor.hpp	/^  typedef oatpp::web::protocol::http::incoming::Response Response;$/;"	t	class:oatpp::web::client::RequestExecutor	typeref:typename:oatpp::web::protocol::http::incoming::Response
Response	../oatpp/src/oatpp/web/protocol/http/incoming/Response.cpp	/^Response::Response(v_int32 statusCode,$/;"	f	class:oatpp::web::protocol::http::incoming::Response
Response	../oatpp/src/oatpp/web/protocol/http/incoming/Response.hpp	/^class Response : public oatpp::base::Countable {$/;"	c	namespace:oatpp::web::protocol::http::incoming
Response	../oatpp/src/oatpp/web/protocol/http/outgoing/Response.cpp	/^Response::Response(const Status& status,$/;"	f	class:oatpp::web::protocol::http::outgoing::Response
Response	../oatpp/src/oatpp/web/protocol/http/outgoing/Response.hpp	/^class Response : public oatpp::base::Countable, public std::enable_shared_from_this<Response> {$/;"	c	namespace:oatpp::web::protocol::http::outgoing
ResponseFactory	../oatpp/src/oatpp/web/protocol/http/outgoing/ResponseFactory.hpp	/^class ResponseFactory {$/;"	c	namespace:oatpp::web::protocol::http::outgoing
ResponseFactory	../oatpp/src/oatpp/web/server/HttpRequestHandler.hpp	/^  typedef oatpp::web::protocol::http::outgoing::ResponseFactory ResponseFactory;$/;"	t	class:oatpp::web::server::HttpRequestHandler	typeref:typename:oatpp::web::protocol::http::outgoing::ResponseFactory
ResponseFactory	../oatpp/src/oatpp/web/server/api/ApiController.hpp	/^  typedef oatpp::web::protocol::http::outgoing::ResponseFactory ResponseFactory;$/;"	t	class:oatpp::web::server::api::ApiController	typeref:typename:oatpp::web::protocol::http::outgoing::ResponseFactory
ResponseHeadersReader	../oatpp/src/oatpp/web/client/HttpRequestExecutor.cpp	/^  typedef protocol::http::incoming::ResponseHeadersReader ResponseHeadersReader;$/;"	t	function:oatpp::web::client::HttpRequestExecutor::executeAsync	typeref:typename:protocol::http::incoming::ResponseHeadersReader	file:
ResponseHeadersReader	../oatpp/src/oatpp/web/protocol/http/incoming/ResponseHeadersReader.hpp	/^  ResponseHeadersReader(void* buffer, v_int32 bufferSize, v_int32 maxHeadersSize)$/;"	f	class:oatpp::web::protocol::http::incoming::ResponseHeadersReader
ResponseHeadersReader	../oatpp/src/oatpp/web/protocol/http/incoming/ResponseHeadersReader.hpp	/^class ResponseHeadersReader {$/;"	c	namespace:oatpp::web::protocol::http::incoming
ResponseStartingLine	../oatpp/src/oatpp/web/protocol/http/Http.hpp	/^struct ResponseStartingLine {$/;"	s	namespace:oatpp::web::protocol::http
Result	../oatpp/src/oatpp/web/protocol/http/incoming/RequestHeadersReader.hpp	/^  struct Result {$/;"	s	class:oatpp::web::protocol::http::incoming::RequestHeadersReader
Result	../oatpp/src/oatpp/web/protocol/http/incoming/ResponseHeadersReader.hpp	/^  struct Result {$/;"	s	class:oatpp::web::protocol::http::incoming::ResponseHeadersReader
Return JSON	../oatpp/README.md	/^### Return JSON$/;"	S
Return JSON Async	../oatpp/README.md	/^### Return JSON Async$/;"	S
Route	../oatpp/src/oatpp/web/url/mapping/Router.hpp	/^    Route()$/;"	f	class:oatpp::web::url::mapping::Router::Route
Route	../oatpp/src/oatpp/web/url/mapping/Router.hpp	/^    Route(Endpoint* endpoint, const Pattern::MatchMap& pMatchMap)$/;"	f	class:oatpp::web::url::mapping::Router::Route
Route	../oatpp/src/oatpp/web/url/mapping/Router.hpp	/^  class Route {$/;"	c	class:oatpp::web::url::mapping::Router
Router	../oatpp/src/oatpp/web/server/api/ApiController.hpp	/^  typedef oatpp::web::server::HttpRouter Router;$/;"	t	class:oatpp::web::server::api::ApiController	typeref:typename:oatpp::web::server::HttpRouter
Router	../oatpp/src/oatpp/web/url/mapping/Router.hpp	/^class Router : public base::Countable {$/;"	c	namespace:oatpp::web::url::mapping
SECTION_END	../oatpp/src/oatpp/web/protocol/http/incoming/RequestHeadersReader.hpp	/^  static constexpr v_int32 SECTION_END = ('\\r' << 24) | ('\\n' << 16) | ('\\r' << 8) | ('\\n');$/;"	m	class:oatpp::web::protocol::http::incoming::RequestHeadersReader	typeref:typename:v_int32
SECTION_END	../oatpp/src/oatpp/web/protocol/http/incoming/ResponseHeadersReader.hpp	/^  static constexpr v_int32 SECTION_END = ('\\r' << 24) | ('\\n' << 16) | ('\\r' << 8) | ('\\n');$/;"	m	class:oatpp::web::protocol::http::incoming::ResponseHeadersReader	typeref:typename:v_int32
SEG_PATH	../oatpp/src/oatpp/web/client/ApiClient.hpp	/^    constexpr static const v_int32 SEG_PATH = 0;$/;"	m	class:oatpp::web::client::ApiClient::PathSegment	typeref:typename:const v_int32
SEG_VAR	../oatpp/src/oatpp/web/client/ApiClient.hpp	/^    constexpr static const v_int32 SEG_VAR = 1;$/;"	m	class:oatpp::web::client::ApiClient::PathSegment	typeref:typename:const v_int32
SERVER	../oatpp/src/oatpp/web/protocol/http/Http.cpp	/^const char* const Header::SERVER = "Server";$/;"	m	class:oatpp::web::protocol::http::Header	typeref:typename:const char * const
SERVER	../oatpp/src/oatpp/web/protocol/http/Http.cpp	/^const char* const Header::Value::SERVER = "oatpp\/" OATPP_VERSION;$/;"	m	class:oatpp::web::protocol::http::Header::Value	typeref:typename:const char * const
SERVER	../oatpp/src/oatpp/web/protocol/http/Http.hpp	/^    static const char* const SERVER;$/;"	m	class:oatpp::web::protocol::http::Header::Value	typeref:typename:const char * const
SERVER	../oatpp/src/oatpp/web/protocol/http/Http.hpp	/^  static const char* const SERVER;              \/\/ "Server"$/;"	m	class:oatpp::web::protocol::http::Header	typeref:typename:const char * const
SHARDS_COUNT_DEFAULT	../oatpp/src/oatpp/core/base/memory/MemoryPool.cpp	/^const v_int32 ThreadDistributedMemoryPool::SHARDS_COUNT_DEFAULT = OATPP_THREAD_DISTRIBUTED_MEM_P/;"	m	class:oatpp::base::memory::ThreadDistributedMemoryPool	typeref:typename:const v_int32
SHARDS_COUNT_DEFAULT	../oatpp/src/oatpp/core/base/memory/MemoryPool.hpp	/^  static const v_int32 SHARDS_COUNT_DEFAULT;$/;"	m	class:oatpp::base::memory::ThreadDistributedMemoryPool	typeref:typename:const v_int32
SHARED_OBJECT_POOL	../oatpp/src/oatpp/core/base/memory/ObjectPool.hpp	/^#define SHARED_OBJECT_POOL(/;"	d
SHARED_OBJECT_POOL_THREAD_LOCAL	../oatpp/src/oatpp/core/base/memory/ObjectPool.hpp	/^#define SHARED_OBJECT_POOL_THREAD_LOCAL(/;"	d
SHELL	../oatpp/build/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	../oatpp/build/src/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	../oatpp/build/test/Makefile	/^SHELL = \/bin\/sh$/;"	m
SIMULATE_ID	../oatpp/build/CMakeFiles/3.14.5/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#  define SIMULATE_ID /;"	d	file:
SIMULATE_VERSION_MAJOR	../oatpp/build/CMakeFiles/3.14.5/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#  define SIMULATE_VERSION_MAJOR /;"	d	file:
SIMULATE_VERSION_MINOR	../oatpp/build/CMakeFiles/3.14.5/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#  define SIMULATE_VERSION_MINOR /;"	d	file:
SM_STRING_POOL_ENTRY_SIZE	../oatpp/src/oatpp/core/base/StrBuffer.hpp	/^  static constexpr v_int32 SM_STRING_POOL_ENTRY_SIZE = 256;$/;"	m	class:oatpp::base::StrBuffer	typeref:typename:v_int32
STATUS_CREATED	../oatpp/src/oatpp/network/server/Server.cpp	/^const v_int32 Server::STATUS_CREATED = 0;$/;"	m	class:oatpp::network::server::Server	typeref:typename:const v_int32
STATUS_CREATED	../oatpp/src/oatpp/network/server/Server.hpp	/^  static const v_int32 STATUS_CREATED;$/;"	m	class:oatpp::network::server::Server	typeref:typename:const v_int32
STATUS_DONE	../oatpp/src/oatpp/network/server/Server.cpp	/^const v_int32 Server::STATUS_DONE = 3;$/;"	m	class:oatpp::network::server::Server	typeref:typename:const v_int32
STATUS_DONE	../oatpp/src/oatpp/network/server/Server.hpp	/^  static const v_int32 STATUS_DONE;$/;"	m	class:oatpp::network::server::Server	typeref:typename:const v_int32
STATUS_RUNNING	../oatpp/src/oatpp/network/server/Server.cpp	/^const v_int32 Server::STATUS_RUNNING = 1;$/;"	m	class:oatpp::network::server::Server	typeref:typename:const v_int32
STATUS_RUNNING	../oatpp/src/oatpp/network/server/Server.hpp	/^  static const v_int32 STATUS_RUNNING;$/;"	m	class:oatpp::network::server::Server	typeref:typename:const v_int32
STATUS_STOPPING	../oatpp/src/oatpp/network/server/Server.cpp	/^const v_int32 Server::STATUS_STOPPING = 2;$/;"	m	class:oatpp::network::server::Server	typeref:typename:const v_int32
STATUS_STOPPING	../oatpp/src/oatpp/network/server/Server.hpp	/^  static const v_int32 STATUS_STOPPING;$/;"	m	class:oatpp::network::server::Server	typeref:typename:const v_int32
STRINGIFY	../oatpp/build/CMakeFiles/3.14.5/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#define STRINGIFY(/;"	d	file:
STRINGIFY_HELPER	../oatpp/build/CMakeFiles/3.14.5/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#define STRINGIFY_HELPER(/;"	d	file:
SUCCESS_COUNTER	../oatpp/test/oatpp/web/FullAsyncClientTest.cpp	/^  static std::atomic<v_int32> SUCCESS_COUNTER;$/;"	m	class:oatpp::test::web::__anonb368a9f30110::ClientCoroutine_echoBodyAsync	typeref:typename:std::atomic<v_int32>	file:
SUCCESS_COUNTER	../oatpp/test/oatpp/web/FullAsyncClientTest.cpp	/^  static std::atomic<v_int32> SUCCESS_COUNTER;$/;"	m	class:oatpp::test::web::__anonb368a9f30110::ClientCoroutine_getRootAsync	typeref:typename:std::atomic<v_int32>	file:
SUCCESS_COUNTER	../oatpp/test/oatpp/web/FullAsyncClientTest.cpp	/^std::atomic<v_int32> ClientCoroutine_echoBodyAsync::SUCCESS_COUNTER(0);$/;"	m	class:oatpp::test::web::__anonb368a9f30110::ClientCoroutine_echoBodyAsync	typeref:typename:std::atomic<v_int32>
SUCCESS_COUNTER	../oatpp/test/oatpp/web/FullAsyncClientTest.cpp	/^std::atomic<v_int32> ClientCoroutine_getRootAsync::SUCCESS_COUNTER(0);$/;"	m	class:oatpp::test::web::__anonb368a9f30110::ClientCoroutine_getRootAsync	typeref:typename:std::atomic<v_int32>
SUFFIXES	../oatpp/build/Makefile	/^SUFFIXES =$/;"	m
SUFFIXES	../oatpp/build/src/Makefile	/^SUFFIXES =$/;"	m
SUFFIXES	../oatpp/build/test/Makefile	/^SUFFIXES =$/;"	m
Scope	../oatpp/CODE_OF_CONDUCT.md	/^## Scope$/;"	s
Screenshots	README.md	/^### Screenshots$/;"	S
SendAsyncCoroutine	../oatpp/src/oatpp/web/protocol/http/outgoing/Request.cpp	/^    SendAsyncCoroutine(const std::shared_ptr<Request>& request,$/;"	f	class:oatpp::web::protocol::http::outgoing::Request::sendAsync::SendAsyncCoroutine	file:
SendAsyncCoroutine	../oatpp/src/oatpp/web/protocol/http/outgoing/Request.cpp	/^  class SendAsyncCoroutine : public oatpp::async::Coroutine<SendAsyncCoroutine> {$/;"	c	function:oatpp::web::protocol::http::outgoing::Request::sendAsync	file:
SendAsyncCoroutine	../oatpp/src/oatpp/web/protocol/http/outgoing/Response.cpp	/^    SendAsyncCoroutine(const std::shared_ptr<Response>& response,$/;"	f	class:oatpp::web::protocol::http::outgoing::Response::sendAsync::SendAsyncCoroutine	file:
SendAsyncCoroutine	../oatpp/src/oatpp/web/protocol/http/outgoing/Response.cpp	/^  class SendAsyncCoroutine : public oatpp::async::Coroutine<SendAsyncCoroutine> {$/;"	c	function:oatpp::web::protocol::http::outgoing::Response::sendAsync	file:
SequenceGenerator	../oatpp/src/oatpp/core/async/Processor.hpp	/^  struct SequenceGenerator<0, S...> {$/;"	s	class:oatpp::async::Processor
SequenceGenerator	../oatpp/src/oatpp/core/async/Processor.hpp	/^  template<int N, int ...S> struct SequenceGenerator : SequenceGenerator <N - 1, N - 1, S...> {}/;"	s	class:oatpp::async::Processor
Serializer	../oatpp/src/oatpp/parser/json/mapping/Serializer.hpp	/^class Serializer {$/;"	c	namespace:oatpp::parser::json::mapping
Serializer	../oatpp/test/oatpp/parser/json/mapping/DTOMapperPerfTest.cpp	/^typedef oatpp::parser::json::mapping::Serializer Serializer;$/;"	t	namespace:oatpp::test::parser::json::mapping::__anon21ca47af0110	typeref:typename:oatpp::parser::json::mapping::Serializer	file:
Serializer	../oatpp/test/oatpp/parser/json/mapping/DeserializerTest.cpp	/^typedef oatpp::parser::json::mapping::Serializer Serializer;$/;"	t	namespace:oatpp::test::parser::json::mapping::__anon769c5f590110	typeref:typename:oatpp::parser::json::mapping::Serializer	file:
Server	../oatpp/src/oatpp/network/server/Server.cpp	/^Server::Server(const std::shared_ptr<ServerConnectionProvider>& connectionProvider,$/;"	f	class:oatpp::network::server::Server
Server	../oatpp/src/oatpp/network/server/Server.hpp	/^class Server : public base::Countable {$/;"	c	namespace:oatpp::network::server
Server	../oatpp/test/oatpp/network/virtual_/InterfaceTest.cpp	/^    Server(const std::shared_ptr<Interface>& interface,$/;"	f	class:oatpp::test::network::virtual_::__anoncbc809950110::Server	file:
Server	../oatpp/test/oatpp/network/virtual_/InterfaceTest.cpp	/^  class Server : public oatpp::base::Countable {$/;"	c	namespace:oatpp::test::network::virtual_::__anoncbc809950110	file:
ServerConnectionProvider	../oatpp/src/oatpp/network/ConnectionProvider.hpp	/^class ServerConnectionProvider : public ConnectionProvider {$/;"	c	namespace:oatpp::network
ServerTask	../oatpp/test/oatpp/network/virtual_/InterfaceTest.cpp	/^    ServerTask(const std::shared_ptr<Socket>& socket,$/;"	f	class:oatpp::test::network::virtual_::__anoncbc809950110::ServerTask	file:
ServerTask	../oatpp/test/oatpp/network/virtual_/InterfaceTest.cpp	/^  class ServerTask : public oatpp::base::Countable {$/;"	c	namespace:oatpp::test::network::virtual_::__anoncbc809950110	file:
SharedObjectAllocator	../oatpp/src/oatpp/core/base/memory/Allocator.hpp	/^  SharedObjectAllocator(AllocationExtras& info)$/;"	f	class:oatpp::base::memory::SharedObjectAllocator
SharedObjectAllocator	../oatpp/src/oatpp/core/base/memory/Allocator.hpp	/^  SharedObjectAllocator(const SharedObjectAllocator<U>& other)$/;"	f	class:oatpp::base::memory::SharedObjectAllocator
SharedObjectAllocator	../oatpp/src/oatpp/core/base/memory/Allocator.hpp	/^class SharedObjectAllocator {$/;"	c	namespace:oatpp::base::memory
Simple API overview	../oatpp/README.md	/^## Simple API overview$/;"	s
SimpleBodyDecoder	../oatpp/src/oatpp/web/protocol/http/incoming/SimpleBodyDecoder.hpp	/^class SimpleBodyDecoder : public BodyDecoder {$/;"	c	namespace:oatpp::web::protocol::http::incoming
SimpleTCPConnectionProvider	../oatpp/src/oatpp/network/client/SimpleTCPConnectionProvider.cpp	/^SimpleTCPConnectionProvider::SimpleTCPConnectionProvider(const oatpp::String& host, v_word16 por/;"	f	class:oatpp::network::client::SimpleTCPConnectionProvider
SimpleTCPConnectionProvider	../oatpp/src/oatpp/network/client/SimpleTCPConnectionProvider.hpp	/^class SimpleTCPConnectionProvider : public base::Countable, public ClientConnectionProvider {$/;"	c	namespace:oatpp::network::client
SimpleTCPConnectionProvider	../oatpp/src/oatpp/network/server/SimpleTCPConnectionProvider.cpp	/^SimpleTCPConnectionProvider::SimpleTCPConnectionProvider(v_word16 port)$/;"	f	class:oatpp::network::server::SimpleTCPConnectionProvider
SimpleTCPConnectionProvider	../oatpp/src/oatpp/network/server/SimpleTCPConnectionProvider.hpp	/^class SimpleTCPConnectionProvider : public base::Countable, public ServerConnectionProvider {$/;"	c	namespace:oatpp::network::server
Socket	../oatpp/src/oatpp/network/virtual_/Socket.cpp	/^Socket::Socket(const std::shared_ptr<Pipe>& pipeIn, const std::shared_ptr<Pipe>& pipeOut)$/;"	f	class:oatpp::network::virtual_::Socket
Socket	../oatpp/src/oatpp/network/virtual_/Socket.hpp	/^class Socket : public oatpp::data::stream::IOStream, public oatpp::base::Countable {$/;"	c	namespace:oatpp::network::virtual_
Socket	../oatpp/test/oatpp/network/virtual_/InterfaceTest.cpp	/^  typedef oatpp::network::virtual_::Socket Socket;$/;"	t	namespace:oatpp::test::network::virtual_::__anoncbc809950110	typeref:typename:oatpp::network::virtual_::Socket	file:
SpinLock	../oatpp/src/oatpp/core/concurrency/SpinLock.cpp	/^SpinLock::SpinLock()$/;"	f	class:oatpp::concurrency::SpinLock
SpinLock	../oatpp/src/oatpp/core/concurrency/SpinLock.hpp	/^class SpinLock {$/;"	c	namespace:oatpp::concurrency
StarterForResult	../oatpp/src/oatpp/core/async/Coroutine.hpp	/^    StarterForResult(AbstractCoroutineWithResult* coroutine)$/;"	f	class:oatpp::async::AbstractCoroutineWithResult::StarterForResult
StarterForResult	../oatpp/src/oatpp/core/async/Coroutine.hpp	/^    StarterForResult(StarterForResult&& other)$/;"	f	class:oatpp::async::AbstractCoroutineWithResult::StarterForResult
StarterForResult	../oatpp/src/oatpp/core/async/Coroutine.hpp	/^  class StarterForResult {$/;"	c	class:oatpp::async::AbstractCoroutineWithResult
StateSaveGuard	../oatpp/src/oatpp/core/parser/Caret.cpp	/^Caret::StateSaveGuard::StateSaveGuard(Caret& caret)$/;"	f	class:oatpp::parser::Caret::StateSaveGuard
StateSaveGuard	../oatpp/src/oatpp/core/parser/Caret.hpp	/^  class StateSaveGuard {$/;"	c	class:oatpp::parser::Caret
StaticFilesManager	src/Utils.hpp	/^  StaticFilesManager(const oatpp::String& basePath)$/;"	f	class:StaticFilesManager
StaticFilesManager	src/Utils.hpp	/^class StaticFilesManager {$/;"	c
Status	../oatpp/src/oatpp/web/client/ApiClient.hpp	/^  typedef oatpp::web::protocol::http::Status Status;$/;"	t	class:oatpp::web::client::ApiClient	typeref:typename:oatpp::web::protocol::http::Status
Status	../oatpp/src/oatpp/web/protocol/http/Http.hpp	/^  Status()$/;"	f	class:oatpp::web::protocol::http::Status
Status	../oatpp/src/oatpp/web/protocol/http/Http.hpp	/^  Status(v_int32 pCode, const char* pDesc)$/;"	f	class:oatpp::web::protocol::http::Status
Status	../oatpp/src/oatpp/web/protocol/http/Http.hpp	/^class Status{$/;"	c	namespace:oatpp::web::protocol::http
Status	../oatpp/src/oatpp/web/server/HttpRequestHandler.hpp	/^  typedef oatpp::web::protocol::http::Status Status;$/;"	t	class:oatpp::web::server::HttpRequestHandler	typeref:typename:oatpp::web::protocol::http::Status
Status	../oatpp/src/oatpp/web/server/api/ApiController.hpp	/^  typedef oatpp::web::protocol::http::Status Status;$/;"	t	class:oatpp::web::server::api::ApiController	typeref:typename:oatpp::web::protocol::http::Status
Status	../oatpp/test/oatpp/web/server/api/ApiControllerTest.cpp	/^  typedef oatpp::web::protocol::http::Status Status;$/;"	t	function:oatpp::test::web::server::api::ApiControllerTest::onRun	typeref:typename:oatpp::web::protocol::http::Status	file:
StrBuffer	../oatpp/src/oatpp/core/base/StrBuffer.cpp	/^StrBuffer::StrBuffer()$/;"	f	class:oatpp::base::StrBuffer
StrBuffer	../oatpp/src/oatpp/core/base/StrBuffer.cpp	/^StrBuffer::StrBuffer(const void* data, v_int32 size, bool copyAsOwnData)$/;"	f	class:oatpp::base::StrBuffer
StrBuffer	../oatpp/src/oatpp/core/base/StrBuffer.hpp	/^class StrBuffer : public oatpp::base::Countable {  $/;"	c	namespace:oatpp::base
String	../oatpp/src/oatpp/core/Types.hpp	/^  typedef oatpp::data::mapping::type::String String;$/;"	t	namespace:oatpp	typeref:typename:oatpp::data::mapping::type::String
String	../oatpp/src/oatpp/core/data/mapping/type/Object.hpp	/^  typedef oatpp::data::mapping::type::String String;$/;"	t	class:oatpp::data::mapping::type::Object	typeref:typename:oatpp::data::mapping::type::String
String	../oatpp/src/oatpp/core/data/mapping/type/Primitive.cpp	/^String::String(const std::shared_ptr<oatpp::base::StrBuffer>& ptr, const type::Type* const value/;"	f	class:oatpp::data::mapping::type::String
String	../oatpp/src/oatpp/core/data/mapping/type/Primitive.hpp	/^  String() {}$/;"	f	class:oatpp::data::mapping::type::String
String	../oatpp/src/oatpp/core/data/mapping/type/Primitive.hpp	/^  String(String&& other)$/;"	f	class:oatpp::data::mapping::type::String
String	../oatpp/src/oatpp/core/data/mapping/type/Primitive.hpp	/^  String(const String& other)$/;"	f	class:oatpp::data::mapping::type::String
String	../oatpp/src/oatpp/core/data/mapping/type/Primitive.hpp	/^  String(const char* data, bool copyAsOwnData = true)$/;"	f	class:oatpp::data::mapping::type::String
String	../oatpp/src/oatpp/core/data/mapping/type/Primitive.hpp	/^  String(const char* data, v_int32 size, bool copyAsOwnData = true)$/;"	f	class:oatpp::data::mapping::type::String
String	../oatpp/src/oatpp/core/data/mapping/type/Primitive.hpp	/^  String(const char* data1, v_int32 size1, const char* data2, v_int32 size2)$/;"	f	class:oatpp::data::mapping::type::String
String	../oatpp/src/oatpp/core/data/mapping/type/Primitive.hpp	/^  String(const std::shared_ptr<oatpp::base::StrBuffer>& ptr)$/;"	f	class:oatpp::data::mapping::type::String
String	../oatpp/src/oatpp/core/data/mapping/type/Primitive.hpp	/^  String(std::shared_ptr<oatpp::base::StrBuffer>&& ptr)$/;"	f	class:oatpp::data::mapping::type::String
String	../oatpp/src/oatpp/core/data/mapping/type/Primitive.hpp	/^  String(v_int32 size)$/;"	f	class:oatpp::data::mapping::type::String
String	../oatpp/src/oatpp/core/data/mapping/type/Primitive.hpp	/^  class String {$/;"	c	namespace:oatpp::data::mapping::type::__class
String	../oatpp/src/oatpp/core/data/mapping/type/Primitive.hpp	/^class String : public oatpp::data::mapping::type::ObjectWrapper<oatpp::base::StrBuffer, __class:/;"	c	namespace:oatpp::data::mapping::type
String	../oatpp/src/oatpp/parser/json/Utils.hpp	/^  typedef oatpp::String String;$/;"	t	class:oatpp::parser::json::Utils	typeref:typename:oatpp::String
String	../oatpp/src/oatpp/parser/json/mapping/Deserializer.hpp	/^  typedef oatpp::data::mapping::type::String String;$/;"	t	class:oatpp::parser::json::mapping::Deserializer	typeref:typename:oatpp::data::mapping::type::String
String	../oatpp/src/oatpp/parser/json/mapping/Serializer.hpp	/^  typedef oatpp::String String;$/;"	t	class:oatpp::parser::json::mapping::Serializer	typeref:typename:oatpp::String
String	../oatpp/src/oatpp/web/client/ApiClient.hpp	/^  typedef oatpp::data::mapping::type::String String;$/;"	t	class:oatpp::web::client::ApiClient	typeref:typename:oatpp::data::mapping::type::String
String	../oatpp/src/oatpp/web/client/RequestExecutor.hpp	/^  typedef oatpp::String String;$/;"	t	class:oatpp::web::client::RequestExecutor	typeref:typename:oatpp::String
String	../oatpp/src/oatpp/web/server/api/ApiController.hpp	/^  typedef oatpp::data::mapping::type::String String;$/;"	t	class:oatpp::web::server::api::ApiController	typeref:typename:oatpp::data::mapping::type::String
String	../oatpp/test/oatpp/core/base/RegRuleTest.cpp	/^  typedef oatpp::String String;$/;"	t	namespace:oatpp::test::base::__anon40c2e60e0110	typeref:typename:oatpp::String	file:
StringKeyLabel	../oatpp/src/oatpp/core/data/share/MemoryLabel.cpp	/^StringKeyLabel::StringKeyLabel(const char* constText)$/;"	f	class:oatpp::data::share::StringKeyLabel
StringKeyLabel	../oatpp/src/oatpp/core/data/share/MemoryLabel.cpp	/^StringKeyLabel::StringKeyLabel(const oatpp::String& str)$/;"	f	class:oatpp::data::share::StringKeyLabel
StringKeyLabel	../oatpp/src/oatpp/core/data/share/MemoryLabel.cpp	/^StringKeyLabel::StringKeyLabel(const std::shared_ptr<base::StrBuffer>& memHandle, p_char8 data, /;"	f	class:oatpp::data::share::StringKeyLabel
StringKeyLabel	../oatpp/src/oatpp/core/data/share/MemoryLabel.hpp	/^  StringKeyLabel() : MemoryLabel() {};$/;"	f	class:oatpp::data::share::StringKeyLabel
StringKeyLabel	../oatpp/src/oatpp/core/data/share/MemoryLabel.hpp	/^class StringKeyLabel : public MemoryLabel {$/;"	c	namespace:oatpp::data::share
StringKeyLabel	../oatpp/src/oatpp/network/Url.hpp	/^  typedef oatpp::data::share::StringKeyLabel StringKeyLabel;$/;"	t	class:oatpp::network::Url	typeref:typename:oatpp::data::share::StringKeyLabel
StringKeyLabel	../oatpp/src/oatpp/web/server/HttpRouter.hpp	/^  typedef oatpp::data::share::StringKeyLabel StringKeyLabel;$/;"	t	class:oatpp::web::server::HttpRouter	typeref:typename:oatpp::data::share::StringKeyLabel
StringKeyLabel	../oatpp/src/oatpp/web/url/mapping/Pattern.hpp	/^  typedef oatpp::data::share::StringKeyLabel StringKeyLabel;$/;"	t	class:oatpp::web::url::mapping::Pattern	typeref:typename:oatpp::data::share::StringKeyLabel
StringKeyLabel	../oatpp/src/oatpp/web/url/mapping/Router.hpp	/^  typedef oatpp::data::share::StringKeyLabel StringKeyLabel;$/;"	t	class:oatpp::web::url::mapping::Router	typeref:typename:oatpp::data::share::StringKeyLabel
StringKeyLabelCI	../oatpp/src/oatpp/core/data/share/MemoryLabel.cpp	/^StringKeyLabelCI::StringKeyLabelCI(const char* constText)$/;"	f	class:oatpp::data::share::StringKeyLabelCI
StringKeyLabelCI	../oatpp/src/oatpp/core/data/share/MemoryLabel.cpp	/^StringKeyLabelCI::StringKeyLabelCI(const oatpp::String& str)$/;"	f	class:oatpp::data::share::StringKeyLabelCI
StringKeyLabelCI	../oatpp/src/oatpp/core/data/share/MemoryLabel.cpp	/^StringKeyLabelCI::StringKeyLabelCI(const std::shared_ptr<base::StrBuffer>& memHandle, p_char8 da/;"	f	class:oatpp::data::share::StringKeyLabelCI
StringKeyLabelCI	../oatpp/src/oatpp/core/data/share/MemoryLabel.hpp	/^  StringKeyLabelCI() : MemoryLabel() {};$/;"	f	class:oatpp::data::share::StringKeyLabelCI
StringKeyLabelCI	../oatpp/src/oatpp/core/data/share/MemoryLabel.hpp	/^class StringKeyLabelCI : public MemoryLabel {$/;"	c	namespace:oatpp::data::share
StringKeyLabelCI_FAST	../oatpp/src/oatpp/core/data/share/MemoryLabel.cpp	/^StringKeyLabelCI_FAST::StringKeyLabelCI_FAST(const char* constText)$/;"	f	class:oatpp::data::share::StringKeyLabelCI_FAST
StringKeyLabelCI_FAST	../oatpp/src/oatpp/core/data/share/MemoryLabel.cpp	/^StringKeyLabelCI_FAST::StringKeyLabelCI_FAST(const oatpp::String& str)$/;"	f	class:oatpp::data::share::StringKeyLabelCI_FAST
StringKeyLabelCI_FAST	../oatpp/src/oatpp/core/data/share/MemoryLabel.cpp	/^StringKeyLabelCI_FAST::StringKeyLabelCI_FAST(const std::shared_ptr<base::StrBuffer>& memHandle, /;"	f	class:oatpp::data::share::StringKeyLabelCI_FAST
StringKeyLabelCI_FAST	../oatpp/src/oatpp/core/data/share/MemoryLabel.hpp	/^class StringKeyLabelCI_FAST : public MemoryLabel {$/;"	c	namespace:oatpp::data::share
StringToParamMap	../oatpp/src/oatpp/web/client/ApiClient.hpp	/^  > StringToParamMap;$/;"	t	class:oatpp::web::client::ApiClient	typeref:typename:oatpp::collection::ListMap<oatpp::String,oatpp::data::mapping::type::AbstractObjectWrapper>
StringToStringMap	../oatpp/src/oatpp/web/client/ApiClient.hpp	/^  > StringToStringMap;$/;"	t	class:oatpp::web::client::ApiClient	typeref:typename:oatpp::collection::ListMap<oatpp::String,oatpp::String>
SubmissionProcessor	../oatpp/src/oatpp/core/async/Executor.cpp	/^Executor::SubmissionProcessor::SubmissionProcessor()$/;"	f	class:oatpp::async::Executor::SubmissionProcessor
SubmissionProcessor	../oatpp/src/oatpp/core/async/Executor.hpp	/^  class SubmissionProcessor : public worker::Worker {$/;"	c	class:oatpp::async::Executor
SubmissionTemplate	../oatpp/src/oatpp/core/async/Processor.hpp	/^    SubmissionTemplate(Args... params)$/;"	f	class:oatpp::async::Processor::SubmissionTemplate
SubmissionTemplate	../oatpp/src/oatpp/core/async/Processor.hpp	/^  class SubmissionTemplate : public TaskSubmission {$/;"	c	class:oatpp::async::Processor
Swagger documentation	../oatpp/README.md	/^### Swagger documentation$/;"	S
Synchronized	../oatpp/src/oatpp/core/async/Lock.cpp	/^    Synchronized(oatpp::async::Lock *lock, CoroutineStarter&& starter)$/;"	f	class:oatpp::async::synchronize::Synchronized	file:
Synchronized	../oatpp/src/oatpp/core/async/Lock.cpp	/^  class Synchronized : public oatpp::async::Coroutine<Synchronized> {$/;"	c	function:oatpp::async::synchronize	file:
SynchronizedFIFOBuffer	../oatpp/src/oatpp/core/data/buffer/FIFOBuffer.cpp	/^SynchronizedFIFOBuffer::SynchronizedFIFOBuffer(void* buffer, v_io_size bufferSize,$/;"	f	class:oatpp::data::buffer::SynchronizedFIFOBuffer
SynchronizedFIFOBuffer	../oatpp/src/oatpp/core/data/buffer/FIFOBuffer.hpp	/^class SynchronizedFIFOBuffer {$/;"	c	namespace:oatpp::data::buffer
TABLE_04C11DB7	../oatpp/src/oatpp/algorithm/CRC.cpp	/^const p_word32 CRC32::TABLE_04C11DB7 = generateTable(0x04C11DB7);$/;"	m	class:oatpp::algorithm::CRC32	typeref:typename:const p_word32
TABLE_04C11DB7	../oatpp/src/oatpp/algorithm/CRC.hpp	/^  static const p_word32 TABLE_04C11DB7;$/;"	m	class:oatpp::algorithm::CRC32	typeref:typename:const p_word32
TAG	../oatpp/src/oatpp-test/UnitTest.hpp	/^  const char* const TAG;$/;"	m	class:oatpp::test::UnitTest	typeref:typename:const char * const
TAG	../oatpp/src/oatpp/web/client/ApiClient.hpp	/^  static constexpr const char* const TAG = "Client";$/;"	m	class:oatpp::web::client::ApiClient	typeref:typename:const char * const
TAG	../oatpp/test/oatpp/web/app/Controller.hpp	/^  static constexpr const char* TAG = "test::web::app::Controller";$/;"	m	class:oatpp::test::web::app::Controller	typeref:typename:const char *
TAG	../oatpp/test/oatpp/web/app/ControllerAsync.hpp	/^  static constexpr const char* TAG = "test::web::app::ControllerAsync";$/;"	m	class:oatpp::test::web::app::ControllerAsync	typeref:typename:const char *
THREAD_NUM_DEFAULT	../oatpp/src/oatpp/core/async/Executor.cpp	/^const v_int32 Executor::THREAD_NUM_DEFAULT = OATPP_ASYNC_EXECUTOR_THREAD_NUM_DEFAULT;$/;"	m	class:oatpp::async::Executor	typeref:typename:const v_int32
THREAD_NUM_DEFAULT	../oatpp/src/oatpp/core/async/Executor.hpp	/^  static const v_int32 THREAD_NUM_DEFAULT;$/;"	m	class:oatpp::async::Executor	typeref:typename:const v_int32
THREAD_NUM_DEFAULT	../oatpp/src/oatpp/web/server/AsyncHttpConnectionHandler.cpp	/^const v_int32 AsyncHttpConnectionHandler::THREAD_NUM_DEFAULT = OATPP_ASYNC_EXECUTOR_THREAD_NUM_D/;"	m	class:oatpp::web::server::AsyncHttpConnectionHandler	typeref:typename:const v_int32
THREAD_NUM_DEFAULT	../oatpp/src/oatpp/web/server/AsyncHttpConnectionHandler.hpp	/^  static const v_int32 THREAD_NUM_DEFAULT;$/;"	m	class:oatpp::web::server::AsyncHttpConnectionHandler	typeref:typename:const v_int32
TIMER	../oatpp/src/oatpp/core/async/worker/Worker.hpp	/^    TIMER = 1,$/;"	e	enum:oatpp::async::worker::Worker::Type
TRANSFER_ENCODING	../oatpp/src/oatpp/web/protocol/http/Http.cpp	/^const char* const Header::TRANSFER_ENCODING = "Transfer-Encoding";$/;"	m	class:oatpp::web::protocol::http::Header	typeref:typename:const char * const
TRANSFER_ENCODING	../oatpp/src/oatpp/web/protocol/http/Http.hpp	/^  static const char* const TRANSFER_ENCODING;   \/\/ "Transfer-Encoding"$/;"	m	class:oatpp::web::protocol::http::Header	typeref:typename:const char * const
TRANSFER_ENCODING_CHUNKED	../oatpp/src/oatpp/web/protocol/http/Http.cpp	/^const char* const Header::Value::TRANSFER_ENCODING_CHUNKED = "chunked";$/;"	m	class:oatpp::web::protocol::http::Header::Value	typeref:typename:const char * const
TRANSFER_ENCODING_CHUNKED	../oatpp/src/oatpp/web/protocol/http/Http.hpp	/^    static const char* const TRANSFER_ENCODING_CHUNKED;$/;"	m	class:oatpp::web::protocol::http::Header::Value	typeref:typename:const char * const
TYPES_COUNT	../oatpp/src/oatpp/core/async/worker/Worker.hpp	/^    TYPES_COUNT = 3$/;"	e	enum:oatpp::async::worker::Worker::Type
TYPE_COROUTINE	../oatpp/src/oatpp/core/async/Coroutine.hpp	/^  static constexpr const v_int32 TYPE_COROUTINE = 1;$/;"	m	class:oatpp::async::Action	typeref:typename:const v_int32
TYPE_ERROR	../oatpp/src/oatpp/core/async/Coroutine.hpp	/^  static constexpr const v_int32 TYPE_ERROR = 8;$/;"	m	class:oatpp::async::Action	typeref:typename:const v_int32
TYPE_FINISH	../oatpp/src/oatpp/core/async/Coroutine.hpp	/^  static constexpr const v_int32 TYPE_FINISH = 7;$/;"	m	class:oatpp::async::Action	typeref:typename:const v_int32
TYPE_IO_REPEAT	../oatpp/src/oatpp/core/async/Coroutine.hpp	/^  static constexpr const v_int32 TYPE_IO_REPEAT = 6;$/;"	m	class:oatpp::async::Action	typeref:typename:const v_int32
TYPE_IO_WAIT	../oatpp/src/oatpp/core/async/Coroutine.hpp	/^  static constexpr const v_int32 TYPE_IO_WAIT = 5;$/;"	m	class:oatpp::async::Action	typeref:typename:const v_int32
TYPE_NONE	../oatpp/src/oatpp/core/async/Coroutine.hpp	/^  static constexpr const v_int32 TYPE_NONE = 0;$/;"	m	class:oatpp::async::Action	typeref:typename:const v_int32
TYPE_REPEAT	../oatpp/src/oatpp/core/async/Coroutine.hpp	/^  static constexpr const v_int32 TYPE_REPEAT = 3;$/;"	m	class:oatpp::async::Action	typeref:typename:const v_int32
TYPE_WAIT_LIST	../oatpp/src/oatpp/core/async/Coroutine.hpp	/^  static constexpr const v_int32 TYPE_WAIT_LIST = 9;$/;"	m	class:oatpp::async::Action	typeref:typename:const v_int32
TYPE_WAIT_REPEAT	../oatpp/src/oatpp/core/async/Coroutine.hpp	/^  static constexpr const v_int32 TYPE_WAIT_REPEAT = 4;$/;"	m	class:oatpp::async::Action	typeref:typename:const v_int32
TYPE_YIELD_TO	../oatpp/src/oatpp/core/async/Coroutine.hpp	/^  static constexpr const v_int32 TYPE_YIELD_TO = 2;$/;"	m	class:oatpp::async::Action	typeref:typename:const v_int32
Task	../oatpp/src/oatpp/web/server/HttpConnectionHandler.cpp	/^HttpConnectionHandler::Task::Task(HttpRouter* router,$/;"	f	class:oatpp::web::server::HttpConnectionHandler::Task
Task	../oatpp/src/oatpp/web/server/HttpConnectionHandler.hpp	/^  class Task : public base::Countable {$/;"	c	class:oatpp::web::server::HttpConnectionHandler
Task	../oatpp/test/oatpp/core/base/memory/PerfTest.cpp	/^    Task(const std::shared_ptr<TestBase>& shared)$/;"	f	class:oatpp::test::memory::__anon75c3e6ad0110::Task	file:
Task	../oatpp/test/oatpp/core/base/memory/PerfTest.cpp	/^  class Task : public oatpp::base::Countable {$/;"	c	namespace:oatpp::test::memory::__anon75c3e6ad0110	file:
TaskSubmission	../oatpp/src/oatpp/core/async/Processor.hpp	/^  class TaskSubmission {$/;"	c	class:oatpp::async::Processor
Test	../oatpp/test/oatpp/parser/json/mapping/DTOMapperTest.cpp	/^class Test : public DTO {$/;"	c	namespace:oatpp::test::parser::json::mapping::__anon2594df220110	file:
Test	test/tests.cpp	/^  Test() : oatpp::test::UnitTest("[MyTest]")$/;"	f	class:__anon08dc63f80110::Test	file:
Test	test/tests.cpp	/^class Test : public oatpp::test::UnitTest {$/;"	c	namespace:__anon08dc63f80110	file:
Test1	../oatpp/test/oatpp/parser/json/mapping/DTOMapperPerfTest.cpp	/^  class Test1 : public oatpp::data::mapping::type::Object {$/;"	c	namespace:oatpp::test::parser::json::mapping::__anon21ca47af0110	file:
Test1	../oatpp/test/oatpp/parser/json/mapping/DeserializerTest.cpp	/^class Test1 : public DTO {$/;"	c	namespace:oatpp::test::parser::json::mapping::__anon769c5f590110	file:
Test2	../oatpp/test/oatpp/parser/json/mapping/DeserializerTest.cpp	/^class Test2 : public DTO {$/;"	c	namespace:oatpp::test::parser::json::mapping::__anon769c5f590110	file:
Test3	../oatpp/test/oatpp/parser/json/mapping/DeserializerTest.cpp	/^class Test3 : public DTO {$/;"	c	namespace:oatpp::test::parser::json::mapping::__anon769c5f590110	file:
Test4	../oatpp/test/oatpp/parser/json/mapping/DeserializerTest.cpp	/^class Test4 : public DTO {$/;"	c	namespace:oatpp::test::parser::json::mapping::__anon769c5f590110	file:
TestBase	../oatpp/test/oatpp/core/base/memory/PerfTest.cpp	/^  class TestBase {$/;"	c	namespace:oatpp::test::memory::__anon75c3e6ad0110	file:
TestChild	../oatpp/test/oatpp/core/base/memory/PerfTest.cpp	/^  class TestChild : public oatpp::base::Countable, public TestBase {$/;"	c	namespace:oatpp::test::memory::__anon75c3e6ad0110	file:
TestChild	../oatpp/test/oatpp/parser/json/mapping/DTOMapperTest.cpp	/^class TestChild : public DTO {$/;"	c	namespace:oatpp::test::parser::json::mapping::__anon2594df220110	file:
TestClass	../oatpp/test/oatpp/core/base/memory/MemoryPoolTest.cpp	/^  TestClass(v_int32 p)$/;"	f	class:oatpp::test::memory::__anonf07292930110::TestClass	file:
TestClass	../oatpp/test/oatpp/core/base/memory/MemoryPoolTest.cpp	/^class TestClass{$/;"	c	namespace:oatpp::test::memory::__anonf07292930110	file:
TestComponent	../oatpp/test/oatpp/web/FullAsyncClientTest.cpp	/^  TestComponent(v_int32 port)$/;"	f	class:oatpp::test::web::__anonb368a9f30110::TestComponent	file:
TestComponent	../oatpp/test/oatpp/web/FullAsyncClientTest.cpp	/^class TestComponent {$/;"	c	namespace:oatpp::test::web::__anonb368a9f30110	file:
TestComponent	../oatpp/test/oatpp/web/FullAsyncTest.cpp	/^  TestComponent(v_int32 port)$/;"	f	class:oatpp::test::web::__anonc5d494140110::TestComponent	file:
TestComponent	../oatpp/test/oatpp/web/FullAsyncTest.cpp	/^class TestComponent {$/;"	c	namespace:oatpp::test::web::__anonc5d494140110	file:
TestComponent	../oatpp/test/oatpp/web/FullTest.cpp	/^  TestComponent(v_int32 port)$/;"	f	class:oatpp::test::web::__anon0c37bd560110::TestComponent	file:
TestComponent	../oatpp/test/oatpp/web/FullTest.cpp	/^class TestComponent {$/;"	c	namespace:oatpp::test::web::__anon0c37bd560110	file:
TestCoroutine	../oatpp/test/oatpp/core/async/LockTest.cpp	/^  TestCoroutine(char symbol, Buff *buff, oatpp::async::Lock *lock)$/;"	f	class:oatpp::test::async::__anonf33831840110::TestCoroutine	file:
TestCoroutine	../oatpp/test/oatpp/core/async/LockTest.cpp	/^class TestCoroutine : public oatpp::async::Coroutine<TestCoroutine> {$/;"	c	namespace:oatpp::test::async::__anonf33831840110	file:
TestCoroutine2	../oatpp/test/oatpp/core/async/LockTest.cpp	/^  TestCoroutine2(char symbol, Buff *buff, oatpp::async::Lock *lock)$/;"	f	class:oatpp::test::async::__anonf33831840110::TestCoroutine2	file:
TestCoroutine2	../oatpp/test/oatpp/core/async/LockTest.cpp	/^class TestCoroutine2 : public oatpp::async::Coroutine<TestCoroutine2> {$/;"	c	namespace:oatpp::test::async::__anonf33831840110	file:
TestDto	../oatpp/test/oatpp/core/data/mapping/type/TypeTest.cpp	/^  class TestDto : public DTO {$/;"	c	namespace:oatpp::test::core::data::mapping::type::__anonbcec93450110	file:
TestDto	../oatpp/test/oatpp/web/app/DTOs.hpp	/^class TestDto : public oatpp::data::mapping::type::Object {$/;"	c	namespace:oatpp::test::web::app
TestObject	../oatpp/test/oatpp/core/base/collection/LinkedListTest.cpp	/^  TestObject()$/;"	f	class:oatpp::test::collection::__anondfade8e60110::TestObject	file:
TestObject	../oatpp/test/oatpp/core/base/collection/LinkedListTest.cpp	/^class TestObject : public oatpp::base::Countable {$/;"	c	namespace:oatpp::test::collection::__anondfade8e60110	file:
ThreadDistributedMemoryPool	../oatpp/src/oatpp/core/base/memory/MemoryPool.cpp	/^ThreadDistributedMemoryPool::ThreadDistributedMemoryPool(const std::string& name, v_int32 entryS/;"	f	class:oatpp::base::memory::ThreadDistributedMemoryPool
ThreadDistributedMemoryPool	../oatpp/src/oatpp/core/base/memory/MemoryPool.hpp	/^class ThreadDistributedMemoryPool {$/;"	c	namespace:oatpp::base::memory
ThreadList	../oatpp/test/oatpp/network/virtual_/InterfaceTest.cpp	/^  typedef std::list<std::thread> ThreadList;$/;"	t	namespace:oatpp::test::network::virtual_::__anoncbc809950110	typeref:typename:std::list<std::thread>	file:
ThreadLocalObjectsChecker	../oatpp/src/oatpp-test/Checker.cpp	/^ThreadLocalObjectsChecker::ThreadLocalObjectsChecker(const char* tag)$/;"	f	class:oatpp::test::ThreadLocalObjectsChecker
ThreadLocalObjectsChecker	../oatpp/src/oatpp-test/Checker.hpp	/^class ThreadLocalObjectsChecker {$/;"	c	namespace:oatpp::test
ThreadLocalPoolSharedObjectAllocator	../oatpp/src/oatpp/core/base/memory/Allocator.hpp	/^  ThreadLocalPoolSharedObjectAllocator(const AllocatorPoolInfo& info)$/;"	f	class:oatpp::base::memory::ThreadLocalPoolSharedObjectAllocator
ThreadLocalPoolSharedObjectAllocator	../oatpp/src/oatpp/core/base/memory/Allocator.hpp	/^  ThreadLocalPoolSharedObjectAllocator(const ThreadLocalPoolSharedObjectAllocator<U>& other)$/;"	f	class:oatpp::base::memory::ThreadLocalPoolSharedObjectAllocator
ThreadLocalPoolSharedObjectAllocator	../oatpp/src/oatpp/core/base/memory/Allocator.hpp	/^class ThreadLocalPoolSharedObjectAllocator {$/;"	c	namespace:oatpp::base::memory
TimerWorker	../oatpp/src/oatpp/core/async/worker/TimerWorker.cpp	/^TimerWorker::TimerWorker(const std::chrono::duration<v_int64, std::micro>& granularity)$/;"	f	class:oatpp::async::worker::TimerWorker
TimerWorker	../oatpp/src/oatpp/core/async/worker/TimerWorker.hpp	/^class TimerWorker : public Worker {$/;"	c	namespace:oatpp::async::worker
ToDtoDecoder	../oatpp/src/oatpp/web/protocol/http/incoming/BodyDecoder.hpp	/^    ToDtoDecoder(const BodyDecoder* decoder,$/;"	f	class:oatpp::web::protocol::http::incoming::BodyDecoder::ToDtoDecoder
ToDtoDecoder	../oatpp/src/oatpp/web/protocol/http/incoming/BodyDecoder.hpp	/^  class ToDtoDecoder : public oatpp::async::CoroutineWithResult<ToDtoDecoder<Type>, const typena/;"	c	class:oatpp::web::protocol::http::incoming::BodyDecoder
ToStringDecoder	../oatpp/src/oatpp/web/protocol/http/incoming/BodyDecoder.cpp	/^BodyDecoder::ToStringDecoder::ToStringDecoder(const BodyDecoder* decoder,$/;"	f	class:oatpp::web::protocol::http::incoming::BodyDecoder::ToStringDecoder
ToStringDecoder	../oatpp/src/oatpp/web/protocol/http/incoming/BodyDecoder.hpp	/^  class ToStringDecoder : public oatpp::async::CoroutineWithResult<ToStringDecoder, const oatpp:/;"	c	class:oatpp::web::protocol::http::incoming::BodyDecoder
TransferCoroutine	../oatpp/src/oatpp/core/data/stream/Stream.cpp	/^    TransferCoroutine(const std::shared_ptr<InputStream>& fromStream,$/;"	f	class:oatpp::data::stream::transferAsync::TransferCoroutine	file:
TransferCoroutine	../oatpp/src/oatpp/core/data/stream/Stream.cpp	/^  class TransferCoroutine : public oatpp::async::Coroutine<TransferCoroutine> {$/;"	c	function:oatpp::data::stream::transferAsync	file:
Try to use Oat++	../oatpp/CONTRIBUTING.md	/^### Try to use Oat++$/;"	S
Type	../oatpp/src/oatpp/core/async/worker/Worker.hpp	/^  enum Type : v_int32 {$/;"	g	class:oatpp::async::worker::Worker	typeref:typename:v_int32
Type	../oatpp/src/oatpp/core/data/mapping/type/Type.cpp	/^Type::Type(const char* pName, const char* pNameQualifier)$/;"	f	class:oatpp::data::mapping::type::Type
Type	../oatpp/src/oatpp/core/data/mapping/type/Type.cpp	/^Type::Type(const char* pName, const char* pNameQualifier, Creator pCreator)$/;"	f	class:oatpp::data::mapping::type::Type
Type	../oatpp/src/oatpp/core/data/mapping/type/Type.cpp	/^Type::Type(const char* pName, const char* pNameQualifier, Creator pCreator, Properties* pPropert/;"	f	class:oatpp::data::mapping::type::Type
Type	../oatpp/src/oatpp/core/data/mapping/type/Type.hpp	/^class Type {$/;"	c	namespace:oatpp::data::mapping::type
Type	../oatpp/src/oatpp/parser/json/mapping/Deserializer.hpp	/^  typedef oatpp::data::mapping::type::Type Type;$/;"	t	class:oatpp::parser::json::mapping::Deserializer	typeref:typename:oatpp::data::mapping::type::Type
Type	../oatpp/src/oatpp/parser/json/mapping/Serializer.hpp	/^  typedef oatpp::data::mapping::type::Type Type;$/;"	t	class:oatpp::parser::json::mapping::Serializer	typeref:typename:oatpp::data::mapping::type::Type
TypeObjectWrapper	../oatpp/test/oatpp/core/base/RegRuleTest.cpp	/^  using TypeObjectWrapper = oatpp::data::mapping::type::ObjectWrapper<T, oatpp::data::mapping::t/;"	t	namespace:oatpp::test::base::__anon40c2e60e0110	typeref:typename:oatpp::data::mapping::type::ObjectWrapper<T,oatpp::data::mapping::type::__class::Void>	file:
TypeTest	../oatpp/test/oatpp/core/data/mapping/type/TypeTest.hpp	/^  TypeTest():UnitTest("TEST[core::data::mapping::type::TypeTest]"){}$/;"	f	class:oatpp::test::core::data::mapping::type::TypeTest
TypeTest	../oatpp/test/oatpp/core/data/mapping/type/TypeTest.hpp	/^class TypeTest : public UnitTest{$/;"	c	namespace:oatpp::test::core::data::mapping::type
UNIT_BYTES	../oatpp/src/oatpp/web/protocol/http/Http.cpp	/^const char* const ContentRange::UNIT_BYTES = "bytes";$/;"	m	class:oatpp::web::protocol::http::ContentRange	typeref:typename:const char * const
UNIT_BYTES	../oatpp/src/oatpp/web/protocol/http/Http.cpp	/^const char* const Range::UNIT_BYTES = "bytes";$/;"	m	class:oatpp::web::protocol::http::Range	typeref:typename:const char * const
UNIT_BYTES	../oatpp/src/oatpp/web/protocol/http/Http.hpp	/^  static const char* const UNIT_BYTES;$/;"	m	class:oatpp::web::protocol::http::ContentRange	typeref:typename:const char * const
UNIT_BYTES	../oatpp/src/oatpp/web/protocol/http/Http.hpp	/^  static const char* const UNIT_BYTES;$/;"	m	class:oatpp::web::protocol::http::Range	typeref:typename:const char * const
UNIX	../oatpp/build/CMakeFiles/3.14.5/CMakeCXXCompiler.cmake	/^  set(UNIX 1)$/;"	v
UPGRADE	../oatpp/src/oatpp/web/protocol/http/Http.cpp	/^const char* const Header::UPGRADE = "Upgrade";$/;"	m	class:oatpp::web::protocol::http::Header	typeref:typename:const char * const
UPGRADE	../oatpp/src/oatpp/web/protocol/http/Http.hpp	/^  static const char* const UPGRADE;             \/\/ "Upgrade"$/;"	m	class:oatpp::web::protocol::http::Header	typeref:typename:const char * const
USER_AGENT	../oatpp/src/oatpp/web/protocol/http/Http.cpp	/^const char* const Header::USER_AGENT = "User-Agent";$/;"	m	class:oatpp::web::protocol::http::Header	typeref:typename:const char * const
USER_AGENT	../oatpp/src/oatpp/web/protocol/http/Http.cpp	/^const char* const Header::Value::USER_AGENT = "oatpp\/" OATPP_VERSION;$/;"	m	class:oatpp::web::protocol::http::Header::Value	typeref:typename:const char * const
USER_AGENT	../oatpp/src/oatpp/web/protocol/http/Http.hpp	/^    static const char* const USER_AGENT;$/;"	m	class:oatpp::web::protocol::http::Header::Value	typeref:typename:const char * const
USER_AGENT	../oatpp/src/oatpp/web/protocol/http/Http.hpp	/^  static const char* const USER_AGENT;          \/\/ "User-Agent"$/;"	m	class:oatpp::web::protocol::http::Header	typeref:typename:const char * const
Unicode	../oatpp/src/oatpp/encoding/Unicode.hpp	/^class Unicode {$/;"	c	namespace:oatpp::encoding
UnicodeTest	../oatpp/test/oatpp/encoding/UnicodeTest.hpp	/^  UnicodeTest():UnitTest("TEST[encoding::UnicodeTest]"){}$/;"	f	class:oatpp::test::encoding::UnicodeTest
UnicodeTest	../oatpp/test/oatpp/encoding/UnicodeTest.hpp	/^class UnicodeTest : public UnitTest{$/;"	c	namespace:oatpp::test::encoding
UnitTest	../oatpp/src/oatpp-test/UnitTest.hpp	/^  UnitTest(const char* testTAG)$/;"	f	class:oatpp::test::UnitTest
UnitTest	../oatpp/src/oatpp-test/UnitTest.hpp	/^class UnitTest{$/;"	c	namespace:oatpp::test
Url	../oatpp/src/oatpp/network/Url.hpp	/^class Url {$/;"	c	namespace:oatpp::network
Url	../oatpp/test/oatpp/network/UrlTest.cpp	/^  typedef oatpp::network::Url Url;$/;"	t	function:oatpp::test::network::UrlTest::onRun	typeref:typename:oatpp::network::Url	file:
UrlTest	../oatpp/test/oatpp/network/UrlTest.hpp	/^  UrlTest():UnitTest("TEST[network::UrlTest]"){}$/;"	f	class:oatpp::test::network::UrlTest
UrlTest	../oatpp/test/oatpp/network/UrlTest.hpp	/^class UrlTest : public UnitTest {$/;"	c	namespace:oatpp::test::network
Urls	README.md	/^### Urls$/;"	S
Using CMake	README.md	/^#### Using CMake$/;"	t
Utils	../oatpp/src/oatpp/parser/json/Utils.hpp	/^class Utils {$/;"	c	namespace:oatpp::parser::json
Utils_hpp	src/Utils.hpp	/^#define Utils_hpp$/;"	d
Value	../oatpp/src/oatpp/web/protocol/http/Http.hpp	/^  class Value {$/;"	c	class:oatpp::web::protocol::http::Header
Variables	../oatpp/src/oatpp/web/url/mapping/Pattern.hpp	/^    typedef std::unordered_map<StringKeyLabel, StringKeyLabel> Variables;$/;"	t	class:oatpp::web::url::mapping::Pattern::MatchMap	typeref:typename:std::unordered_map<StringKeyLabel,StringKeyLabel>
Void	../oatpp/src/oatpp/core/data/mapping/type/Type.hpp	/^  class Void {$/;"	c	namespace:oatpp::data::mapping::type::__class
WAIT_RETRY	../oatpp/src/oatpp/core/data/IODefinitions.hpp	/^  WAIT_RETRY = -1003$/;"	e	enum:oatpp::data::IOError
WaitListListener	../oatpp/src/oatpp/network/virtual_/Pipe.hpp	/^      WaitListListener(Pipe* pipe)$/;"	f	class:oatpp::network::virtual_::Pipe::Reader::WaitListListener
WaitListListener	../oatpp/src/oatpp/network/virtual_/Pipe.hpp	/^      WaitListListener(Pipe* pipe)$/;"	f	class:oatpp::network::virtual_::Pipe::Writer::WaitListListener
WaitListListener	../oatpp/src/oatpp/network/virtual_/Pipe.hpp	/^    class WaitListListener : public oatpp::async::CoroutineWaitList::Listener {$/;"	c	class:oatpp::network::virtual_::Pipe::Reader
WaitListListener	../oatpp/src/oatpp/network/virtual_/Pipe.hpp	/^    class WaitListListener : public oatpp::async::CoroutineWaitList::Listener {$/;"	c	class:oatpp::network::virtual_::Pipe::Writer
Worker	../oatpp/src/oatpp/core/async/worker/Worker.cpp	/^Worker::Worker(Type type)$/;"	f	class:oatpp::async::worker::Worker
Worker	../oatpp/src/oatpp/core/async/worker/Worker.hpp	/^class Worker {$/;"	c	namespace:oatpp::async::worker
WriteToStreamCoroutine	../oatpp/src/oatpp/web/protocol/http/outgoing/BufferBody.cpp	/^BufferBody::WriteToStreamCoroutine::WriteToStreamCoroutine(const std::shared_ptr<BufferBody>& bo/;"	f	class:oatpp::web::protocol::http::outgoing::BufferBody::WriteToStreamCoroutine
WriteToStreamCoroutine	../oatpp/src/oatpp/web/protocol/http/outgoing/BufferBody.hpp	/^  class WriteToStreamCoroutine : public oatpp::async::Coroutine<WriteToStreamCoroutine> {$/;"	c	class:oatpp::web::protocol::http::outgoing::BufferBody
WriteToStreamCoroutine	../oatpp/src/oatpp/web/protocol/http/outgoing/ChunkedBufferBody.cpp	/^ChunkedBufferBody::WriteToStreamCoroutine::WriteToStreamCoroutine(const std::shared_ptr<ChunkedB/;"	f	class:oatpp::web::protocol::http::outgoing::ChunkedBufferBody::WriteToStreamCoroutine
WriteToStreamCoroutine	../oatpp/src/oatpp/web/protocol/http/outgoing/ChunkedBufferBody.hpp	/^  class WriteToStreamCoroutine : public oatpp::async::Coroutine<WriteToStreamCoroutine> {$/;"	c	class:oatpp::web::protocol::http::outgoing::ChunkedBufferBody
Writer	../oatpp/src/oatpp/network/virtual_/Pipe.hpp	/^    Writer(Pipe* pipe, oatpp::data::stream::IOMode ioMode = oatpp::data::stream::IOMode::BLOCKIN/;"	f	class:oatpp::network::virtual_::Pipe::Writer
Writer	../oatpp/src/oatpp/network/virtual_/Pipe.hpp	/^  class Writer : public oatpp::data::stream::OutputStream {$/;"	c	class:oatpp::network::virtual_::Pipe
WriterDelegate	../oatpp/src/oatpp/core/data/stream/Delegate.hpp	/^class WriterDelegate {$/;"	c	namespace:oatpp::data::stream
WriterTask	../oatpp/test/oatpp/network/virtual_/PipeTest.cpp	/^    WriterTask(const std::shared_ptr<Pipe>& pipe, v_int32 chunksToTransfer)$/;"	f	class:oatpp::test::network::virtual_::__anon0e2557b20110::WriterTask	file:
WriterTask	../oatpp/test/oatpp/network/virtual_/PipeTest.cpp	/^  class WriterTask : public oatpp::base::Countable {$/;"	c	namespace:oatpp::test::network::virtual_::__anon0e2557b20110	file:
ZERO_VALUE	../oatpp/src/oatpp/core/data/IODefinitions.hpp	/^  ZERO_VALUE = 0,$/;"	e	enum:oatpp::data::IOError
Z__CLASS_EXTEND	../oatpp/src/oatpp/core/data/mapping/type/Object.hpp	/^  static Type::Properties* Z__CLASS_EXTEND(Type::Properties* properties, Type::Properties* exten/;"	f	class:oatpp::data::mapping::type::Object	typeref:typename:Type::Properties *
Z__CLASS_GET_FIELDS_MAP	../oatpp/src/oatpp/core/data/mapping/type/Object.hpp	/^  static oatpp::data::mapping::type::Type::Properties* Z__CLASS_GET_FIELDS_MAP(){$/;"	f	class:oatpp::data::mapping::type::Object	typeref:typename:oatpp::data::mapping::type::Type::Properties *
Z__CLASS_GET_TYPE	../oatpp/src/oatpp/core/data/mapping/type/List.hpp	/^  static Type* Z__CLASS_GET_TYPE(){$/;"	f	class:oatpp::data::mapping::type::ListTypeTemplate	typeref:typename:Type *
Z__CLASS_GET_TYPE	../oatpp/src/oatpp/core/data/mapping/type/ListMap.hpp	/^  static Type* Z__CLASS_GET_TYPE(){$/;"	f	class:oatpp::data::mapping::type::ListMap	typeref:typename:Type *
Z__CLASS_OBJECT_CREATOR	../oatpp/src/oatpp/core/data/mapping/type/List.hpp	/^  static AbstractObjectWrapper Z__CLASS_OBJECT_CREATOR(){$/;"	f	class:oatpp::data::mapping::type::ListTypeTemplate	typeref:typename:AbstractObjectWrapper
Z__CLASS_OBJECT_CREATOR	../oatpp/src/oatpp/core/data/mapping/type/ListMap.hpp	/^  static AbstractObjectWrapper Z__CLASS_OBJECT_CREATOR(){$/;"	f	class:oatpp::data::mapping::type::ListMap	typeref:typename:AbstractObjectWrapper
_Allocator	../oatpp/src/oatpp/core/base/memory/Allocator.hpp	/^  typedef CustomPoolSharedObjectAllocator<T, P> _Allocator;$/;"	t	function:oatpp::base::memory::customPoolAllocateSharedWithExtras	typeref:typename:CustomPoolSharedObjectAllocator<T,P>
_Allocator	../oatpp/src/oatpp/core/base/memory/Allocator.hpp	/^  typedef SharedObjectAllocator<T> _Allocator;$/;"	t	function:oatpp::base::memory::allocateSharedWithExtras	typeref:typename:SharedObjectAllocator<T>
_CP	../oatpp/src/oatpp/core/async/Coroutine.hpp	/^  AbstractCoroutine* _CP;$/;"	m	class:oatpp::async::AbstractCoroutine	typeref:typename:AbstractCoroutine *
_ERR	../oatpp/src/oatpp/core/async/Coroutine.hpp	/^  std::shared_ptr<const Error> _ERR;$/;"	m	class:oatpp::async::AbstractCoroutine	typeref:typename:std::shared_ptr<const Error>
_FP	../oatpp/src/oatpp/core/async/Coroutine.hpp	/^  FunctionPtr _FP;$/;"	m	class:oatpp::async::AbstractCoroutine	typeref:typename:FunctionPtr
_IMPORT_PREFIX	../oatpp/build/src/CMakeFiles/Export/lib64/cmake/oatpp-0.19.6/oatppTargets.cmake	/^  set(_IMPORT_PREFIX "")$/;"	v
_IMPORT_PREFIX	../oatpp/build/src/CMakeFiles/Export/lib64/cmake/oatpp-0.19.6/oatppTargets.cmake	/^set(_IMPORT_PREFIX)$/;"	v
_PP	../oatpp/src/oatpp/core/async/Coroutine.hpp	/^  Processor* _PP;$/;"	m	class:oatpp::async::AbstractCoroutine	typeref:typename:Processor *
_SCH_A	../oatpp/src/oatpp/core/async/Coroutine.hpp	/^  oatpp::async::Action _SCH_A;$/;"	m	class:oatpp::async::AbstractCoroutine	typeref:typename:oatpp::async::Action
__ControllerType	../oatpp/src/oatpp/web/server/api/ApiController.hpp	/^  typedef ApiController __ControllerType;$/;"	t	class:oatpp::web::server::api::ApiController	typeref:typename:ApiController
__ControllerType	src/controller/MediaController.hpp	/^  typedef MediaController __ControllerType;$/;"	t	class:MediaController	typeref:typename:MediaController
__anon08dc63f80110	test/tests.cpp	/^namespace {$/;"	n	file:
__anon0c37bd560110	../oatpp/test/oatpp/web/FullTest.cpp	/^namespace {$/;"	n	namespace:oatpp::test::web	file:
__anon0c37bd560202	../oatpp/test/oatpp/web/FullTest.cpp	/^  OATPP_CREATE_COMPONENT(std::shared_ptr<oatpp::network::virtual_::Interface>, virtualInterface)/;"	f	class:oatpp::test::web::__anon0c37bd560110::TestComponent	file:
__anon0c37bd560302	../oatpp/test/oatpp/web/FullTest.cpp	/^  OATPP_CREATE_COMPONENT(std::shared_ptr<oatpp::network::ServerConnectionProvider>, serverConnec/;"	f	class:oatpp::test::web::__anon0c37bd560110::TestComponent	file:
__anon0c37bd560402	../oatpp/test/oatpp/web/FullTest.cpp	/^  OATPP_CREATE_COMPONENT(std::shared_ptr<oatpp::web::server::HttpRouter>, httpRouter)([] {$/;"	f	class:oatpp::test::web::__anon0c37bd560110::TestComponent	file:
__anon0c37bd560502	../oatpp/test/oatpp/web/FullTest.cpp	/^  OATPP_CREATE_COMPONENT(std::shared_ptr<oatpp::network::server::ConnectionHandler>, serverConne/;"	f	class:oatpp::test::web::__anon0c37bd560110::TestComponent	file:
__anon0c37bd560602	../oatpp/test/oatpp/web/FullTest.cpp	/^  OATPP_CREATE_COMPONENT(std::shared_ptr<oatpp::data::mapping::ObjectMapper>, objectMapper)([] {$/;"	f	class:oatpp::test::web::__anon0c37bd560110::TestComponent	file:
__anon0c37bd560702	../oatpp/test/oatpp/web/FullTest.cpp	/^  OATPP_CREATE_COMPONENT(std::shared_ptr<oatpp::network::ClientConnectionProvider>, clientConnec/;"	f	class:oatpp::test::web::__anon0c37bd560110::TestComponent	file:
__anon0c37bd560802	../oatpp/test/oatpp/web/FullTest.cpp	/^  runner.run([this, &runner] {$/;"	f	function:oatpp::test::web::FullTest::onRun	file:
__anon0e2557b20110	../oatpp/test/oatpp/network/virtual_/PipeTest.cpp	/^namespace {$/;"	n	namespace:oatpp::test::network::virtual_	file:
__anon21ca47af0110	../oatpp/test/oatpp/parser/json/mapping/DTOMapperPerfTest.cpp	/^namespace {$/;"	n	namespace:oatpp::test::parser::json::mapping	file:
__anon2594df220110	../oatpp/test/oatpp/parser/json/mapping/DTOMapperTest.cpp	/^namespace {$/;"	n	namespace:oatpp::test::parser::json::mapping	file:
__anon2a38f5e70110	../oatpp/test/oatpp/AllTestsMain.cpp	/^namespace {$/;"	n	file:
__anon2d7857ed0102	../oatpp/src/oatpp-test/web/ClientServerTestRunner.hpp	/^    std::thread serverThread([this]{$/;"	f	function:oatpp::test::web::ClientServerTestRunner::run	file:
__anon2d7857ed0202	../oatpp/src/oatpp-test/web/ClientServerTestRunner.hpp	/^    std::thread clientThread([this, &lambda]{$/;"	f	function:oatpp::test::web::ClientServerTestRunner::run	file:
__anon2d7857ed0302	../oatpp/src/oatpp-test/web/ClientServerTestRunner.hpp	/^    std::thread timerThread([&timeout, &startTime, &running, &timeoutMutex, &timeoutCondition]{$/;"	f	function:oatpp::test::web::ClientServerTestRunner::run	file:
__anon40c2e60e0110	../oatpp/test/oatpp/core/base/RegRuleTest.cpp	/^namespace {$/;"	n	namespace:oatpp::test::base	file:
__anon4b1d35700110	../oatpp/test/oatpp/web/server/api/ApiControllerTest.cpp	/^namespace {$/;"	n	namespace:oatpp::test::web::server::api	file:
__anon5dcc96c60110	../oatpp/src/oatpp/core/data/stream/Stream.cpp	/^namespace {$/;"	n	namespace:oatpp::data::stream	file:
__anon75c3e6ad0110	../oatpp/test/oatpp/core/base/memory/PerfTest.cpp	/^namespace {$/;"	n	namespace:oatpp::test::memory	file:
__anon769c5f590110	../oatpp/test/oatpp/parser/json/mapping/DeserializerTest.cpp	/^namespace {$/;"	n	namespace:oatpp::test::parser::json::mapping	file:
__anon946c09860102	src/AppComponent.hpp	/^  OATPP_CREATE_COMPONENT(std::shared_ptr<oatpp::async::Executor>, executor)([] {$/;"	f	class:AppComponent	file:
__anon946c09860202	src/AppComponent.hpp	/^  OATPP_CREATE_COMPONENT(std::shared_ptr<oatpp::network::ServerConnectionProvider>, serverConnec/;"	f	class:AppComponent	file:
__anon946c09860302	src/AppComponent.hpp	/^  OATPP_CREATE_COMPONENT(std::shared_ptr<oatpp::web::server::HttpRouter>, httpRouter)([] {$/;"	f	class:AppComponent	file:
__anon946c09860402	src/AppComponent.hpp	/^  OATPP_CREATE_COMPONENT(std::shared_ptr<oatpp::network::server::ConnectionHandler>, serverConne/;"	f	class:AppComponent	file:
__anon946c09860502	src/AppComponent.hpp	/^  OATPP_CREATE_COMPONENT(std::shared_ptr<oatpp::data::mapping::ObjectMapper>, apiObjectMapper)([/;"	f	class:AppComponent	file:
__anon946c09860602	src/AppComponent.hpp	/^  OATPP_CREATE_COMPONENT(std::shared_ptr<StaticFilesManager>, staticFilesManager)([] {$/;"	f	class:AppComponent	file:
__anon946c09860702	src/AppComponent.hpp	/^  OATPP_CREATE_COMPONENT(std::shared_ptr<Playlist>, livePlayList)([] {$/;"	f	class:AppComponent	file:
__anona632ead50102	src/hls/Playlist.cpp	/^  list.forEach([stream](const RecordMarker& marker){$/;"	f	function:Playlist::generateForTime	file:
__anona633001a0102	src/hls/Playlist.hpp	/^    m_records->forEach([this](const RecordMarker& marker){$/;"	f	function:Playlist::Playlist	file:
__anonb368a9f30110	../oatpp/test/oatpp/web/FullAsyncClientTest.cpp	/^namespace {$/;"	n	namespace:oatpp::test::web	file:
__anonb368a9f30202	../oatpp/test/oatpp/web/FullAsyncClientTest.cpp	/^  OATPP_CREATE_COMPONENT(std::shared_ptr<oatpp::async::Executor>, executor)([] {$/;"	f	class:oatpp::test::web::__anonb368a9f30110::TestComponent	file:
__anonb368a9f30302	../oatpp/test/oatpp/web/FullAsyncClientTest.cpp	/^  OATPP_CREATE_COMPONENT(std::shared_ptr<oatpp::network::virtual_::Interface>, virtualInterface)/;"	f	class:oatpp::test::web::__anonb368a9f30110::TestComponent	file:
__anonb368a9f30402	../oatpp/test/oatpp/web/FullAsyncClientTest.cpp	/^  OATPP_CREATE_COMPONENT(std::shared_ptr<oatpp::network::ServerConnectionProvider>, serverConnec/;"	f	class:oatpp::test::web::__anonb368a9f30110::TestComponent	file:
__anonb368a9f30502	../oatpp/test/oatpp/web/FullAsyncClientTest.cpp	/^  OATPP_CREATE_COMPONENT(std::shared_ptr<oatpp::web::server::HttpRouter>, httpRouter)([] {$/;"	f	class:oatpp::test::web::__anonb368a9f30110::TestComponent	file:
__anonb368a9f30602	../oatpp/test/oatpp/web/FullAsyncClientTest.cpp	/^  OATPP_CREATE_COMPONENT(std::shared_ptr<oatpp::network::server::ConnectionHandler>, serverConne/;"	f	class:oatpp::test::web::__anonb368a9f30110::TestComponent	file:
__anonb368a9f30702	../oatpp/test/oatpp/web/FullAsyncClientTest.cpp	/^  OATPP_CREATE_COMPONENT(std::shared_ptr<oatpp::data::mapping::ObjectMapper>, objectMapper)([] {$/;"	f	class:oatpp::test::web::__anonb368a9f30110::TestComponent	file:
__anonb368a9f30802	../oatpp/test/oatpp/web/FullAsyncClientTest.cpp	/^  OATPP_CREATE_COMPONENT(std::shared_ptr<oatpp::network::ClientConnectionProvider>, clientConnec/;"	f	class:oatpp::test::web::__anonb368a9f30110::TestComponent	file:
__anonb368a9f30902	../oatpp/test/oatpp/web/FullAsyncClientTest.cpp	/^  OATPP_CREATE_COMPONENT(std::shared_ptr<app::Client>, appClient)([] {$/;"	f	class:oatpp::test::web::__anonb368a9f30110::TestComponent	file:
__anonb368a9f30a02	../oatpp/test/oatpp/web/FullAsyncClientTest.cpp	/^  runner.run([this, &runner] {$/;"	f	function:oatpp::test::web::FullAsyncClientTest::onRun	file:
__anonbcec93450110	../oatpp/test/oatpp/core/data/mapping/type/TypeTest.cpp	/^namespace {$/;"	n	namespace:oatpp::test::core::data::mapping::type	file:
__anonc5d494140110	../oatpp/test/oatpp/web/FullAsyncTest.cpp	/^namespace {$/;"	n	namespace:oatpp::test::web	file:
__anonc5d494140202	../oatpp/test/oatpp/web/FullAsyncTest.cpp	/^  OATPP_CREATE_COMPONENT(std::shared_ptr<oatpp::async::Executor>, executor)([] {$/;"	f	class:oatpp::test::web::__anonc5d494140110::TestComponent	file:
__anonc5d494140302	../oatpp/test/oatpp/web/FullAsyncTest.cpp	/^  OATPP_CREATE_COMPONENT(std::shared_ptr<oatpp::network::virtual_::Interface>, virtualInterface)/;"	f	class:oatpp::test::web::__anonc5d494140110::TestComponent	file:
__anonc5d494140402	../oatpp/test/oatpp/web/FullAsyncTest.cpp	/^  OATPP_CREATE_COMPONENT(std::shared_ptr<oatpp::network::ServerConnectionProvider>, serverConnec/;"	f	class:oatpp::test::web::__anonc5d494140110::TestComponent	file:
__anonc5d494140502	../oatpp/test/oatpp/web/FullAsyncTest.cpp	/^  OATPP_CREATE_COMPONENT(std::shared_ptr<oatpp::web::server::HttpRouter>, httpRouter)([] {$/;"	f	class:oatpp::test::web::__anonc5d494140110::TestComponent	file:
__anonc5d494140602	../oatpp/test/oatpp/web/FullAsyncTest.cpp	/^  OATPP_CREATE_COMPONENT(std::shared_ptr<oatpp::network::server::ConnectionHandler>, serverConne/;"	f	class:oatpp::test::web::__anonc5d494140110::TestComponent	file:
__anonc5d494140702	../oatpp/test/oatpp/web/FullAsyncTest.cpp	/^  OATPP_CREATE_COMPONENT(std::shared_ptr<oatpp::data::mapping::ObjectMapper>, objectMapper)([] {$/;"	f	class:oatpp::test::web::__anonc5d494140110::TestComponent	file:
__anonc5d494140802	../oatpp/test/oatpp/web/FullAsyncTest.cpp	/^  OATPP_CREATE_COMPONENT(std::shared_ptr<oatpp::network::ClientConnectionProvider>, clientConnec/;"	f	class:oatpp::test::web::__anonc5d494140110::TestComponent	file:
__anonc5d494140902	../oatpp/test/oatpp/web/FullAsyncTest.cpp	/^  runner.run([this, &runner] {$/;"	f	function:oatpp::test::web::FullAsyncTest::onRun	file:
__anonc865bd330110	../oatpp/test/oatpp/encoding/UnicodeTest.cpp	/^namespace {$/;"	n	namespace:oatpp::test::encoding	file:
__anoncbc809950110	../oatpp/test/oatpp/network/virtual_/InterfaceTest.cpp	/^namespace {$/;"	n	namespace:oatpp::test::network::virtual_	file:
__anondd22e0d90110	../oatpp/test/oatpp/core/parser/CaretTest.cpp	/^  namespace {$/;"	n	namespace:oatpp::test::parser	file:
__anondfade8e60110	../oatpp/test/oatpp/core/base/collection/LinkedListTest.cpp	/^namespace {$/;"	n	namespace:oatpp::test::collection	file:
__anonf07292930110	../oatpp/test/oatpp/core/base/memory/MemoryPoolTest.cpp	/^namespace {$/;"	n	namespace:oatpp::test::memory	file:
__anonf33831840110	../oatpp/test/oatpp/core/async/LockTest.cpp	/^namespace {$/;"	n	namespace:oatpp::test::async	file:
__class	../oatpp/src/oatpp/core/data/mapping/type/List.cpp	/^namespace __class {$/;"	n	namespace:oatpp::data::mapping::type	file:
__class	../oatpp/src/oatpp/core/data/mapping/type/List.hpp	/^namespace __class {$/;"	n	namespace:oatpp::data::mapping::type
__class	../oatpp/src/oatpp/core/data/mapping/type/ListMap.cpp	/^namespace __class {$/;"	n	namespace:oatpp::data::mapping::type	file:
__class	../oatpp/src/oatpp/core/data/mapping/type/ListMap.hpp	/^namespace __class {$/;"	n	namespace:oatpp::data::mapping::type
__class	../oatpp/src/oatpp/core/data/mapping/type/Object.cpp	/^namespace __class {$/;"	n	namespace:oatpp::data::mapping::type	file:
__class	../oatpp/src/oatpp/core/data/mapping/type/Object.hpp	/^namespace __class {$/;"	n	namespace:oatpp::data::mapping::type
__class	../oatpp/src/oatpp/core/data/mapping/type/Primitive.cpp	/^namespace __class {$/;"	n	namespace:oatpp::data::mapping::type	file:
__class	../oatpp/src/oatpp/core/data/mapping/type/Primitive.hpp	/^namespace __class {$/;"	n	namespace:oatpp::data::mapping::type
__class	../oatpp/src/oatpp/core/data/mapping/type/Type.cpp	/^namespace __class {$/;"	n	namespace:oatpp::data::mapping::type	file:
__class	../oatpp/src/oatpp/core/data/mapping/type/Type.hpp	/^namespace __class {$/;"	n	namespace:oatpp::data::mapping::type
_expectedTargets	../oatpp/build/src/CMakeFiles/Export/lib64/cmake/oatpp-0.19.6/oatppTargets.cmake	/^set(_expectedTargets)$/;"	v
_ref	../oatpp/src/oatpp/core/async/Coroutine.hpp	/^  AbstractCoroutine* _ref;$/;"	m	class:oatpp::async::AbstractCoroutine	typeref:typename:AbstractCoroutine *
_return	../oatpp/src/oatpp/core/async/Coroutine.hpp	/^  Action _return(Args... args) {$/;"	f	class:oatpp::async::CoroutineWithResult	typeref:typename:Action
_targetsDefined	../oatpp/build/src/CMakeFiles/Export/lib64/cmake/oatpp-0.19.6/oatppTargets.cmake	/^set(_targetsDefined)$/;"	v
_targetsNotDefined	../oatpp/build/src/CMakeFiles/Export/lib64/cmake/oatpp-0.19.6/oatppTargets.cmake	/^set(_targetsNotDefined)$/;"	v
a	../oatpp/test/oatpp/core/base/memory/MemoryPoolTest.cpp	/^  const v_int32 a;$/;"	m	class:oatpp::test::memory::__anonf07292930110::TestClass	typeref:typename:const v_int32	file:
accept	../oatpp/src/oatpp/network/virtual_/Interface.cpp	/^std::shared_ptr<Socket> Interface::accept(const bool& waitingHandle) {$/;"	f	class:oatpp::network::virtual_::Interface	typeref:typename:std::shared_ptr<Socket>
acceptNonBlocking	../oatpp/src/oatpp/network/virtual_/Interface.cpp	/^std::shared_ptr<Socket> Interface::acceptNonBlocking() {$/;"	f	class:oatpp::network::virtual_::Interface	typeref:typename:std::shared_ptr<Socket>
acceptSubmission	../oatpp/src/oatpp/network/virtual_/Interface.cpp	/^std::shared_ptr<Socket> Interface::acceptSubmission(const std::shared_ptr<ConnectionSubmission>&/;"	f	class:oatpp::network::virtual_::Interface	typeref:typename:std::shared_ptr<Socket>
act	../oatpp/src/oatpp/core/async/Lock.cpp	/^    Action act() override {$/;"	f	class:oatpp::async::LockGuard::lockAsync::LockCoroutine	typeref:typename:Action	file:
act	../oatpp/src/oatpp/core/async/Lock.cpp	/^    Action act() override {$/;"	f	class:oatpp::async::synchronize::Synchronized	typeref:typename:Action	file:
act	../oatpp/src/oatpp/core/data/buffer/FIFOBuffer.cpp	/^    Action act() override {$/;"	f	class:oatpp::data::buffer::FIFOBuffer::flushToStreamAsync::FlushCoroutine	typeref:typename:Action	file:
act	../oatpp/src/oatpp/core/data/stream/ChunkedBuffer.cpp	/^    Action act() override {$/;"	f	class:oatpp::data::stream::ChunkedBuffer::flushToStreamAsync::FlushCoroutine	typeref:typename:Action	file:
act	../oatpp/src/oatpp/core/data/stream/Stream.cpp	/^    Action act() override {$/;"	f	class:oatpp::data::stream::transferAsync::TransferCoroutine	typeref:typename:Action	file:
act	../oatpp/src/oatpp/network/client/SimpleTCPConnectionProvider.cpp	/^    Action act() override {$/;"	f	class:oatpp::network::client::SimpleTCPConnectionProvider::getConnectionAsync::ConnectCoroutine	typeref:typename:Action	file:
act	../oatpp/src/oatpp/network/virtual_/client/ConnectionProvider.cpp	/^    Action act() override {$/;"	f	class:oatpp::network::virtual_::client::ConnectionProvider::getConnectionAsync::ConnectCoroutine	typeref:typename:Action	file:
act	../oatpp/src/oatpp/web/client/HttpRequestExecutor.cpp	/^    Action act() override {$/;"	f	class:oatpp::web::client::HttpRequestExecutor::executeAsync::ExecutorCoroutine	typeref:typename:Action	file:
act	../oatpp/src/oatpp/web/client/HttpRequestExecutor.cpp	/^    Action act() override {$/;"	f	class:oatpp::web::client::HttpRequestExecutor::getConnectionAsync::GetConnectionCoroutine	typeref:typename:Action	file:
act	../oatpp/src/oatpp/web/protocol/http/incoming/BodyDecoder.cpp	/^async::Action BodyDecoder::ToStringDecoder::act() {$/;"	f	class:oatpp::web::protocol::http::incoming::BodyDecoder::ToStringDecoder	typeref:typename:async::Action
act	../oatpp/src/oatpp/web/protocol/http/incoming/BodyDecoder.hpp	/^    oatpp::async::Action act() override {$/;"	f	class:oatpp::web::protocol::http::incoming::BodyDecoder::ToDtoDecoder	typeref:typename:oatpp::async::Action
act	../oatpp/src/oatpp/web/protocol/http/incoming/RequestHeadersReader.cpp	/^    Action act() override {$/;"	f	class:oatpp::web::protocol::http::incoming::RequestHeadersReader::readHeadersAsync::ReaderCoroutine	typeref:typename:Action	file:
act	../oatpp/src/oatpp/web/protocol/http/incoming/ResponseHeadersReader.cpp	/^    Action act() override {$/;"	f	class:oatpp::web::protocol::http::incoming::ResponseHeadersReader::readHeadersAsync::ReaderCoroutine	typeref:typename:Action	file:
act	../oatpp/src/oatpp/web/protocol/http/incoming/SimpleBodyDecoder.cpp	/^    Action act() override {$/;"	f	class:oatpp::web::protocol::http::incoming::SimpleBodyDecoder::doChunkedDecodingAsync::ChunkedDecoder	typeref:typename:Action	file:
act	../oatpp/src/oatpp/web/protocol/http/outgoing/BufferBody.cpp	/^async::Action BufferBody::WriteToStreamCoroutine::act() {$/;"	f	class:oatpp::web::protocol::http::outgoing::BufferBody::WriteToStreamCoroutine	typeref:typename:async::Action
act	../oatpp/src/oatpp/web/protocol/http/outgoing/ChunkedBufferBody.cpp	/^async::Action ChunkedBufferBody::WriteToStreamCoroutine::act() {$/;"	f	class:oatpp::web::protocol::http::outgoing::ChunkedBufferBody::WriteToStreamCoroutine	typeref:typename:async::Action
act	../oatpp/src/oatpp/web/protocol/http/outgoing/Request.cpp	/^    Action act() {$/;"	f	class:oatpp::web::protocol::http::outgoing::Request::sendAsync::SendAsyncCoroutine	typeref:typename:Action	file:
act	../oatpp/src/oatpp/web/protocol/http/outgoing/Response.cpp	/^    Action act() override {$/;"	f	class:oatpp::web::protocol::http::outgoing::Response::sendAsync::SendAsyncCoroutine	typeref:typename:Action	file:
act	../oatpp/src/oatpp/web/server/HttpProcessor.cpp	/^HttpProcessor::Coroutine::Action HttpProcessor::Coroutine::act() {$/;"	f	class:oatpp::web::server::HttpProcessor::Coroutine	typeref:typename:HttpProcessor::Coroutine::Action
act	../oatpp/test/oatpp/core/async/LockTest.cpp	/^  Action act() override {$/;"	f	class:oatpp::test::async::__anonf33831840110::NotSynchronizedCoroutine	typeref:typename:Action	file:
act	../oatpp/test/oatpp/core/async/LockTest.cpp	/^  Action act() override {$/;"	f	class:oatpp::test::async::__anonf33831840110::TestCoroutine	typeref:typename:Action	file:
act	../oatpp/test/oatpp/core/async/LockTest.cpp	/^  Action act() override {$/;"	f	class:oatpp::test::async::__anonf33831840110::TestCoroutine2	typeref:typename:Action	file:
act	../oatpp/test/oatpp/web/FullAsyncClientTest.cpp	/^  Action act() override {$/;"	f	class:oatpp::test::web::__anonb368a9f30110::ClientCoroutine_echoBodyAsync	typeref:typename:Action	file:
act	../oatpp/test/oatpp/web/FullAsyncClientTest.cpp	/^  Action act() override {$/;"	f	class:oatpp::test::web::__anonb368a9f30110::ClientCoroutine_getRootAsync	typeref:typename:Action	file:
act	src/controller/MediaController.hpp	/^    Action act() override {$/;"	f	class:MediaController	typeref:typename:Action
add	../oatpp/src/oatpp/web/server/api/Endpoint.cpp	/^Endpoint::Info::Param& Endpoint::Info::Params::add(const oatpp::String& name, oatpp::data::mappi/;"	f	class:oatpp::web::server::api::Endpoint::Info::Params	typeref:typename:Endpoint::Info::Param &
add	../oatpp/src/oatpp/web/server/api/Endpoint.hpp	/^      Param& add(const oatpp::String& name) {$/;"	f	class:oatpp::web::server::api::Endpoint::Info::Params	typeref:typename:Param &
addConsumes	../oatpp/src/oatpp/web/server/api/Endpoint.hpp	/^    void addConsumes(const oatpp::String& contentType) {$/;"	f	class:oatpp::web::server::api::Endpoint::Info	typeref:typename:void
addController	../oatpp/src/oatpp-test/web/ClientServerTestRunner.hpp	/^  void addController(const std::shared_ptr<ApiController>& controller) {$/;"	f	class:oatpp::test::web::ClientServerTestRunner	typeref:typename:void
addCoroutine	../oatpp/src/oatpp/core/async/Processor.cpp	/^void Processor::addCoroutine(AbstractCoroutine* coroutine) {$/;"	f	class:oatpp::async::Processor	typeref:typename:void
addEndpointsToRouter	../oatpp/src/oatpp/web/server/api/ApiController.cpp	/^void ApiController::addEndpointsToRouter(const std::shared_ptr<Router>& router){$/;"	f	class:oatpp::web::server::api::ApiController	typeref:typename:void
addOneEntry	../oatpp/src/oatpp/core/collection/ListMap.hpp	/^  void addOneEntry(Entry* entry){$/;"	f	class:oatpp::collection::ListMap	typeref:typename:void
addPathQueryParams	../oatpp/src/oatpp/web/client/ApiClient.cpp	/^void ApiClient::addPathQueryParams(oatpp::data::stream::OutputStream* stream,$/;"	f	class:oatpp::web::client::ApiClient	typeref:typename:void
addPolymorphicItem	../oatpp/src/oatpp/core/data/mapping/type/List.hpp	/^  virtual void addPolymorphicItem(const AbstractObjectWrapper& item){$/;"	f	class:oatpp::data::mapping::type::ListTypeTemplate	typeref:typename:void
addRequestInterceptor	../oatpp/src/oatpp/web/server/AsyncHttpConnectionHandler.cpp	/^void AsyncHttpConnectionHandler::addRequestInterceptor(const std::shared_ptr<handler::RequestInt/;"	f	class:oatpp::web::server::AsyncHttpConnectionHandler	typeref:typename:void
addRequestInterceptor	../oatpp/src/oatpp/web/server/HttpConnectionHandler.cpp	/^void HttpConnectionHandler::addRequestInterceptor(const std::shared_ptr<handler::RequestIntercep/;"	f	class:oatpp::web::server::HttpConnectionHandler	typeref:typename:void
addResponse	../oatpp/src/oatpp/web/server/api/Endpoint.hpp	/^    void addResponse(const oatpp::web::protocol::http::Status& status, const oatpp::String& cont/;"	f	class:oatpp::web::server::api::Endpoint::Info	typeref:typename:void
addWorker	../oatpp/src/oatpp/core/async/Processor.cpp	/^void Processor::addWorker(const std::shared_ptr<worker::Worker>& worker) {$/;"	f	class:oatpp::async::Processor	typeref:typename:void
algorithm	../oatpp/src/oatpp/algorithm/CRC.cpp	/^namespace oatpp { namespace algorithm {$/;"	n	namespace:oatpp	file:
algorithm	../oatpp/src/oatpp/algorithm/CRC.hpp	/^namespace oatpp { namespace algorithm {$/;"	n	namespace:oatpp
all	../oatpp/build/Makefile	/^all: cmake_check_build_system$/;"	t
all	../oatpp/build/src/Makefile	/^all: cmake_check_build_system$/;"	t
all	../oatpp/build/test/Makefile	/^all: cmake_check_build_system$/;"	t
allocChunk	../oatpp/src/oatpp/core/base/memory/MemoryPool.cpp	/^void MemoryPool::allocChunk() {$/;"	f	class:oatpp::base::memory::MemoryPool	typeref:typename:void
allocShared	../oatpp/src/oatpp/core/base/StrBuffer.cpp	/^std::shared_ptr<StrBuffer> StrBuffer::allocShared(const void* data, v_int32 size, bool copyAsOwn/;"	f	class:oatpp::base::StrBuffer	typeref:typename:std::shared_ptr<StrBuffer>
allocStrBuffer	../oatpp/src/oatpp/core/base/StrBuffer.cpp	/^p_char8 StrBuffer::allocStrBuffer(const void* originData, v_int32 size, bool copyAsOwnData) {$/;"	f	class:oatpp::base::StrBuffer	typeref:typename:p_char8
allocate	../oatpp/src/oatpp/core/base/memory/Allocator.hpp	/^  T* allocate(std::size_t n) {$/;"	f	class:oatpp::base::memory::CustomPoolSharedObjectAllocator	typeref:typename:T *
allocate	../oatpp/src/oatpp/core/base/memory/Allocator.hpp	/^  T* allocate(std::size_t n) {$/;"	f	class:oatpp::base::memory::PoolSharedObjectAllocator	typeref:typename:T *
allocate	../oatpp/src/oatpp/core/base/memory/Allocator.hpp	/^  T* allocate(std::size_t n) {$/;"	f	class:oatpp::base::memory::SharedObjectAllocator	typeref:typename:T *
allocate	../oatpp/src/oatpp/core/base/memory/Allocator.hpp	/^  T* allocate(std::size_t n) {$/;"	f	class:oatpp::base::memory::ThreadLocalPoolSharedObjectAllocator	typeref:typename:T *
allocateSharedWithExtras	../oatpp/src/oatpp/core/base/memory/Allocator.hpp	/^static std::shared_ptr<T> allocateSharedWithExtras(AllocationExtras& extras, Args... args){$/;"	f	namespace:oatpp::base::memory	typeref:typename:std::shared_ptr<T>
allowEmptyValue	../oatpp/src/oatpp/web/server/api/Endpoint.hpp	/^      oatpp::Boolean allowEmptyValue;$/;"	m	struct:oatpp::web::server::api::Endpoint::Info::Param	typeref:typename:oatpp::Boolean
allowUnknownFields	../oatpp/src/oatpp/parser/json/mapping/Deserializer.hpp	/^    bool allowUnknownFields = true;$/;"	m	class:oatpp::parser::json::mapping::Deserializer::Config	typeref:typename:bool
api	../oatpp/src/oatpp/web/server/api/ApiController.cpp	/^namespace oatpp { namespace web { namespace server { namespace api {$/;"	n	namespace:oatpp::web::server	file:
api	../oatpp/src/oatpp/web/server/api/ApiController.hpp	/^namespace oatpp { namespace web { namespace server { namespace api {$/;"	n	namespace:oatpp::web::server
api	../oatpp/src/oatpp/web/server/api/Endpoint.cpp	/^namespace oatpp { namespace web { namespace server { namespace api {$/;"	n	namespace:oatpp::web::server	file:
api	../oatpp/src/oatpp/web/server/api/Endpoint.hpp	/^namespace oatpp { namespace web { namespace server { namespace api {$/;"	n	namespace:oatpp::web::server
api	../oatpp/test/oatpp/web/server/api/ApiControllerTest.cpp	/^namespace oatpp { namespace test { namespace web { namespace server { namespace api {$/;"	n	namespace:oatpp::test::web::server	file:
api	../oatpp/test/oatpp/web/server/api/ApiControllerTest.hpp	/^namespace oatpp { namespace test { namespace web { namespace server { namespace api {$/;"	n	namespace:oatpp::test::web::server
app	../oatpp/test/oatpp/web/app/Client.hpp	/^namespace oatpp { namespace test { namespace web { namespace app {$/;"	n	namespace:oatpp::test::web
app	../oatpp/test/oatpp/web/app/Controller.hpp	/^namespace oatpp { namespace test { namespace web { namespace app {$/;"	n	namespace:oatpp::test::web
app	../oatpp/test/oatpp/web/app/ControllerAsync.hpp	/^namespace oatpp { namespace test { namespace web { namespace app {$/;"	n	namespace:oatpp::test::web
app	../oatpp/test/oatpp/web/app/DTOs.hpp	/^namespace oatpp { namespace test { namespace web { namespace app {$/;"	n	namespace:oatpp::test::web
argument_type	../oatpp/src/oatpp/core/data/mapping/type/Primitive.hpp	/^    typedef oatpp::data::mapping::type::String argument_type;$/;"	t	struct:std::hash	typeref:typename:oatpp::data::mapping::type::String
argument_type	../oatpp/src/oatpp/core/data/share/MemoryLabel.hpp	/^    typedef oatpp::data::share::StringKeyLabel argument_type;$/;"	t	struct:std::hash	typeref:typename:oatpp::data::share::StringKeyLabel
argument_type	../oatpp/src/oatpp/core/data/share/MemoryLabel.hpp	/^    typedef oatpp::data::share::StringKeyLabelCI argument_type;$/;"	t	struct:std::hash	typeref:typename:oatpp::data::share::StringKeyLabelCI
argument_type	../oatpp/src/oatpp/core/data/share/MemoryLabel.hpp	/^    typedef oatpp::data::share::StringKeyLabelCI_FAST argument_type;$/;"	t	struct:std::hash	typeref:typename:oatpp::data::share::StringKeyLabelCI_FAST
argument_type	../oatpp/src/oatpp/web/protocol/http/Http.hpp	/^    typedef oatpp::web::protocol::http::Status argument_type;$/;"	t	struct:std::hash	typeref:typename:oatpp::web::protocol::http::Status
async	../oatpp/src/oatpp/core/async/Coroutine.cpp	/^namespace oatpp { namespace async {$/;"	n	namespace:oatpp	file:
async	../oatpp/src/oatpp/core/async/Coroutine.hpp	/^namespace oatpp { namespace async {$/;"	n	namespace:oatpp
async	../oatpp/src/oatpp/core/async/CoroutineWaitList.cpp	/^namespace oatpp { namespace async {$/;"	n	namespace:oatpp	file:
async	../oatpp/src/oatpp/core/async/CoroutineWaitList.hpp	/^namespace oatpp { namespace async {$/;"	n	namespace:oatpp
async	../oatpp/src/oatpp/core/async/Error.cpp	/^namespace oatpp { namespace async {$/;"	n	namespace:oatpp	file:
async	../oatpp/src/oatpp/core/async/Error.hpp	/^namespace oatpp { namespace async {$/;"	n	namespace:oatpp
async	../oatpp/src/oatpp/core/async/Executor.cpp	/^namespace oatpp { namespace async {$/;"	n	namespace:oatpp	file:
async	../oatpp/src/oatpp/core/async/Executor.hpp	/^namespace oatpp { namespace async {$/;"	n	namespace:oatpp
async	../oatpp/src/oatpp/core/async/Lock.cpp	/^namespace oatpp { namespace async {$/;"	n	namespace:oatpp	file:
async	../oatpp/src/oatpp/core/async/Lock.hpp	/^namespace oatpp { namespace async {$/;"	n	namespace:oatpp
async	../oatpp/src/oatpp/core/async/Processor.cpp	/^namespace oatpp { namespace async {$/;"	n	namespace:oatpp	file:
async	../oatpp/src/oatpp/core/async/Processor.hpp	/^namespace oatpp { namespace async {$/;"	n	namespace:oatpp
async	../oatpp/src/oatpp/core/async/worker/IOEventWorker.hpp	/^namespace oatpp { namespace async { namespace worker {$/;"	n	namespace:oatpp
async	../oatpp/src/oatpp/core/async/worker/IOEventWorker_common.cpp	/^namespace oatpp { namespace async { namespace worker {$/;"	n	namespace:oatpp	file:
async	../oatpp/src/oatpp/core/async/worker/IOEventWorker_epoll.cpp	/^namespace oatpp { namespace async { namespace worker {$/;"	n	namespace:oatpp	file:
async	../oatpp/src/oatpp/core/async/worker/IOEventWorker_kqueue.cpp	/^namespace oatpp { namespace async { namespace worker {$/;"	n	namespace:oatpp	file:
async	../oatpp/src/oatpp/core/async/worker/IOWorker.cpp	/^namespace oatpp { namespace async { namespace worker {$/;"	n	namespace:oatpp	file:
async	../oatpp/src/oatpp/core/async/worker/IOWorker.hpp	/^namespace oatpp { namespace async { namespace worker {$/;"	n	namespace:oatpp
async	../oatpp/src/oatpp/core/async/worker/TimerWorker.cpp	/^namespace oatpp { namespace async { namespace worker {$/;"	n	namespace:oatpp	file:
async	../oatpp/src/oatpp/core/async/worker/TimerWorker.hpp	/^namespace oatpp { namespace async { namespace worker {$/;"	n	namespace:oatpp
async	../oatpp/src/oatpp/core/async/worker/Worker.cpp	/^namespace oatpp { namespace async { namespace worker {$/;"	n	namespace:oatpp	file:
async	../oatpp/src/oatpp/core/async/worker/Worker.hpp	/^namespace oatpp { namespace async { namespace worker {$/;"	n	namespace:oatpp
async	../oatpp/test/oatpp/core/async/LockTest.cpp	/^namespace oatpp { namespace test { namespace async {$/;"	n	namespace:oatpp::test	file:
async	../oatpp/test/oatpp/core/async/LockTest.hpp	/^namespace oatpp { namespace test { namespace async {$/;"	n	namespace:oatpp::test
asyncInputStreamActionOnIOError	../oatpp/src/oatpp/core/data/stream/Stream.cpp	/^  oatpp::async::Action asyncInputStreamActionOnIOError(oatpp::async::AbstractCoroutine* coroutin/;"	f	namespace:oatpp::data::stream::__anon5dcc96c60110	typeref:typename:oatpp::async::Action
asyncOutputStreamActionOnIOError	../oatpp/src/oatpp/core/data/stream/Stream.cpp	/^  oatpp::async::Action asyncOutputStreamActionOnIOError(oatpp::async::AbstractCoroutine* corouti/;"	f	namespace:oatpp::data::stream::__anon5dcc96c60110	typeref:typename:oatpp::async::Action
authority	../oatpp/src/oatpp/network/Url.hpp	/^  Authority authority;$/;"	m	class:oatpp::network::Url	typeref:typename:Authority
availableToRead	../oatpp/src/oatpp/core/data/buffer/FIFOBuffer.cpp	/^data::v_io_size FIFOBuffer::availableToRead() const {$/;"	f	class:oatpp::data::buffer::FIFOBuffer	typeref:typename:data::v_io_size
availableToRead	../oatpp/src/oatpp/core/data/buffer/FIFOBuffer.cpp	/^data::v_io_size SynchronizedFIFOBuffer::availableToRead() {$/;"	f	class:oatpp::data::buffer::SynchronizedFIFOBuffer	typeref:typename:data::v_io_size
availableToWrite	../oatpp/src/oatpp/core/data/buffer/FIFOBuffer.cpp	/^data::v_io_size FIFOBuffer::availableToWrite() const {$/;"	f	class:oatpp::data::buffer::FIFOBuffer	typeref:typename:data::v_io_size
availableToWrite	../oatpp/src/oatpp/core/data/buffer/FIFOBuffer.cpp	/^data::v_io_size SynchronizedFIFOBuffer::availableToWrite() {$/;"	f	class:oatpp::data::buffer::SynchronizedFIFOBuffer	typeref:typename:data::v_io_size
base	../oatpp/src/oatpp/core/base/CommandLineArguments.cpp	/^namespace oatpp { namespace base {$/;"	n	namespace:oatpp	file:
base	../oatpp/src/oatpp/core/base/CommandLineArguments.hpp	/^namespace oatpp { namespace base {$/;"	n	namespace:oatpp
base	../oatpp/src/oatpp/core/base/Countable.cpp	/^namespace oatpp { namespace base{$/;"	n	namespace:oatpp	file:
base	../oatpp/src/oatpp/core/base/Countable.hpp	/^namespace oatpp { namespace base{$/;"	n	namespace:oatpp
base	../oatpp/src/oatpp/core/base/Environment.cpp	/^namespace oatpp { namespace base {$/;"	n	namespace:oatpp	file:
base	../oatpp/src/oatpp/core/base/Environment.hpp	/^namespace oatpp { namespace base{$/;"	n	namespace:oatpp
base	../oatpp/src/oatpp/core/base/StrBuffer.cpp	/^namespace oatpp { namespace base {$/;"	n	namespace:oatpp	file:
base	../oatpp/src/oatpp/core/base/StrBuffer.hpp	/^namespace oatpp { namespace base {$/;"	n	namespace:oatpp
base	../oatpp/src/oatpp/core/base/memory/Allocator.cpp	/^namespace oatpp { namespace base { namespace memory {$/;"	n	namespace:oatpp	file:
base	../oatpp/src/oatpp/core/base/memory/Allocator.hpp	/^namespace oatpp { namespace base { namespace memory {$/;"	n	namespace:oatpp
base	../oatpp/src/oatpp/core/base/memory/MemoryPool.cpp	/^namespace oatpp { namespace base { namespace  memory {$/;"	n	namespace:oatpp	file:
base	../oatpp/src/oatpp/core/base/memory/MemoryPool.hpp	/^namespace oatpp { namespace base { namespace  memory {$/;"	n	namespace:oatpp
base	../oatpp/src/oatpp/core/base/memory/ObjectPool.hpp	/^namespace oatpp { namespace base { namespace memory {$/;"	n	namespace:oatpp
base	../oatpp/test/oatpp/core/base/CommandLineArgumentsTest.cpp	/^namespace oatpp { namespace test { namespace base {$/;"	n	namespace:oatpp::test	file:
base	../oatpp/test/oatpp/core/base/CommandLineArgumentsTest.hpp	/^namespace oatpp { namespace test { namespace base {$/;"	n	namespace:oatpp::test
base	../oatpp/test/oatpp/core/base/RegRuleTest.cpp	/^namespace oatpp { namespace test { namespace base {$/;"	n	namespace:oatpp::test	file:
base	../oatpp/test/oatpp/core/base/RegRuleTest.hpp	/^namespace oatpp { namespace test { namespace base {$/;"	n	namespace:oatpp::test
baseSize	../oatpp/src/oatpp/core/base/memory/Allocator.hpp	/^  v_int32 baseSize;$/;"	m	class:oatpp::base::memory::AllocationExtras	typeref:typename:v_int32
beforeFinish	../oatpp/src/oatpp/core/data/buffer/FIFOBuffer.cpp	/^    Action beforeFinish() {$/;"	f	class:oatpp::data::buffer::FIFOBuffer::flushToStreamAsync::FlushCoroutine	typeref:typename:Action	file:
bitReverse	../oatpp/src/oatpp/algorithm/CRC.cpp	/^v_word32 CRC32::bitReverse(v_word32 poly) {$/;"	f	class:oatpp::algorithm::CRC32	typeref:typename:v_word32
body	../oatpp/src/oatpp/web/server/api/Endpoint.hpp	/^    Param body;$/;"	m	class:oatpp::web::server::api::Endpoint::Info	typeref:typename:Param
bodyContentType	../oatpp/src/oatpp/web/server/api/Endpoint.hpp	/^    oatpp::String bodyContentType;$/;"	m	class:oatpp::web::server::api::Endpoint::Info	typeref:typename:oatpp::String
boolToStr	../oatpp/src/oatpp/core/utils/ConversionUtils.cpp	/^  oatpp::String boolToStr(bool value) {$/;"	f	namespace:oatpp::utils::conversion	typeref:typename:oatpp::String
buffer	../oatpp/src/oatpp/core/data/buffer/FIFOBuffer.cpp	/^namespace oatpp { namespace data{ namespace buffer {$/;"	n	namespace:oatpp::data	file:
buffer	../oatpp/src/oatpp/core/data/buffer/FIFOBuffer.hpp	/^namespace oatpp { namespace data { namespace buffer {$/;"	n	namespace:oatpp::data
buffer	../oatpp/src/oatpp/core/data/buffer/IOBuffer.cpp	/^namespace oatpp { namespace data{ namespace buffer {$/;"	n	namespace:oatpp::data	file:
buffer	../oatpp/src/oatpp/core/data/buffer/IOBuffer.hpp	/^namespace oatpp { namespace data{ namespace buffer {$/;"	n	namespace:oatpp::data
bufferPosEnd	../oatpp/src/oatpp/web/protocol/http/incoming/RequestHeadersReader.hpp	/^    v_int32 bufferPosEnd;$/;"	m	struct:oatpp::web::protocol::http::incoming::RequestHeadersReader::Result	typeref:typename:v_int32
bufferPosEnd	../oatpp/src/oatpp/web/protocol/http/incoming/ResponseHeadersReader.hpp	/^    v_int32 bufferPosEnd;$/;"	m	struct:oatpp::web::protocol::http::incoming::ResponseHeadersReader::Result	typeref:typename:v_int32
bufferPosStart	../oatpp/src/oatpp/web/protocol/http/incoming/RequestHeadersReader.hpp	/^    v_int32 bufferPosStart;$/;"	m	struct:oatpp::web::protocol::http::incoming::RequestHeadersReader::Result	typeref:typename:v_int32
bufferPosStart	../oatpp/src/oatpp/web/protocol/http/incoming/ResponseHeadersReader.hpp	/^    v_int32 bufferPosStart;$/;"	m	struct:oatpp::web::protocol::http::incoming::ResponseHeadersReader::Result	typeref:typename:v_int32
c_str	../oatpp/src/oatpp/core/base/StrBuffer.cpp	/^const char* StrBuffer::c_str() const {$/;"	f	class:oatpp::base::StrBuffer	typeref:typename:const char *
calc	../oatpp/src/oatpp/algorithm/CRC.cpp	/^v_word32 CRC32::calc(const void *buffer, v_int32 size, v_word32 crc, v_word32 initValue, v_word3/;"	f	class:oatpp::algorithm::CRC32	typeref:typename:v_word32
calcDecodedStringSize	../oatpp/src/oatpp/encoding/Base64.cpp	/^v_int32 Base64::calcDecodedStringSize(const char* data, v_int32 size, v_int32& base64StrLength, /;"	f	class:oatpp::encoding::Base64	typeref:typename:v_int32
calcEncodedStringSize	../oatpp/src/oatpp/encoding/Base64.cpp	/^v_int32 Base64::calcEncodedStringSize(v_int32 size) {$/;"	f	class:oatpp::encoding::Base64	typeref:typename:v_int32
calcEscapedStringSize	../oatpp/src/oatpp/parser/json/Utils.cpp	/^v_int32 Utils::calcEscapedStringSize(p_char8 data, v_int32 size, v_int32& safeSize) {$/;"	f	class:oatpp::parser::json::Utils	typeref:typename:v_int32
calcHardwareConcurrency	../oatpp/src/oatpp/core/concurrency/Thread.cpp	/^v_int32 calcHardwareConcurrency() {$/;"	f	namespace:oatpp::concurrency	typeref:typename:v_int32
calcUnescapedStringSize	../oatpp/src/oatpp/parser/json/Utils.cpp	/^v_int32 Utils::calcUnescapedStringSize(p_char8 data, v_int32 size, v_int32& errorCode, v_int32& /;"	f	class:oatpp::parser::json::Utils	typeref:typename:v_int32
call	../oatpp/src/oatpp/core/async/Coroutine.hpp	/^    ReturnType call(ReturnType (T::*f)(), Args... args){$/;"	f	class:oatpp::async::AbstractCoroutine::MemberCaller	typeref:typename:ReturnType
call	../oatpp/src/oatpp/core/async/Coroutine.hpp	/^  Action call(FunctionPtr ptr) override {$/;"	f	class:oatpp::async::Coroutine	typeref:typename:Action
call	../oatpp/src/oatpp/core/async/Coroutine.hpp	/^  virtual Action call(FunctionPtr ptr) override {$/;"	f	class:oatpp::async::CoroutineWithResult	typeref:typename:Action
callWithParams	../oatpp/src/oatpp/core/async/Coroutine.hpp	/^  Action callWithParams(FunctionPtr ptr, Args... args) {$/;"	f	class:oatpp::async::AbstractCoroutine	typeref:typename:Action
callbackTo	../oatpp/src/oatpp/core/async/Coroutine.hpp	/^    Action callbackTo(Callback<C> callback) {$/;"	f	class:oatpp::async::AbstractCoroutineWithResult::StarterForResult	typeref:typename:Action
canContinue	../oatpp/src/oatpp/core/parser/Caret.cpp	/^  bool Caret::canContinue() const{$/;"	f	class:oatpp::parser::Caret	typeref:typename:bool
canContinueAtChar	../oatpp/src/oatpp/core/parser/Caret.cpp	/^  bool Caret::canContinueAtChar(v_char8 c) const{$/;"	f	class:oatpp::parser::Caret	typeref:typename:bool
canContinueAtChar	../oatpp/src/oatpp/core/parser/Caret.cpp	/^  bool Caret::canContinueAtChar(v_char8 c, v_int32 skipChars){$/;"	f	class:oatpp::parser::Caret	typeref:typename:bool
checkSymbol	../oatpp/test/oatpp/core/async/LockTest.cpp	/^bool checkSymbol(char symbol, const char* data, v_int32 size) {$/;"	f	namespace:oatpp::test::async::__anonf33831840110	typeref:typename:bool
checkSymbol	../oatpp/test/oatpp/core/async/LockTest.cpp	/^bool checkSymbol(char symbol, const oatpp::String& str) {$/;"	f	namespace:oatpp::test::async::__anonf33831840110	typeref:typename:bool
checkTypes	../oatpp/src/oatpp/core/base/Environment.cpp	/^void Environment::checkTypes(){$/;"	f	class:oatpp::base::Environment	typeref:typename:void
chunk	../oatpp/src/oatpp/core/data/stream/ChunkedBuffer.hpp	/^    void* chunk;$/;"	m	class:oatpp::data::stream::ChunkedBuffer::ChunkEntry	typeref:typename:void *
clean	../oatpp/build/Makefile	/^clean:$/;"	t
clean	../oatpp/build/src/Makefile	/^clean:$/;"	t
clean	../oatpp/build/test/Makefile	/^clean:$/;"	t
clean/fast	../oatpp/build/Makefile	/^clean\/fast: clean$/;"	t
clean/fast	../oatpp/build/src/Makefile	/^clean\/fast: clean$/;"	t
clean/fast	../oatpp/build/test/Makefile	/^clean\/fast: clean$/;"	t
clear	../oatpp/src/oatpp/core/collection/FastQueue.hpp	/^  void clear() {$/;"	f	class:oatpp::collection::FastQueue	typeref:typename:void
clear	../oatpp/src/oatpp/core/collection/LinkedList.hpp	/^  void clear(){$/;"	f	class:oatpp::collection::LinkedList	typeref:typename:void
clear	../oatpp/src/oatpp/core/collection/ListMap.hpp	/^  void clear(){$/;"	f	class:oatpp::collection::ListMap	typeref:typename:void
clear	../oatpp/src/oatpp/core/data/stream/ChunkedBuffer.cpp	/^void ChunkedBuffer::clear(){$/;"	f	class:oatpp::data::stream::ChunkedBuffer	typeref:typename:void
clearError	../oatpp/src/oatpp/core/parser/Caret.cpp	/^  void Caret::clearError() {$/;"	f	class:oatpp::parser::Caret	typeref:typename:void
client	../oatpp/src/oatpp/network/client/SimpleTCPConnectionProvider.cpp	/^namespace oatpp { namespace network { namespace client {$/;"	n	namespace:oatpp::network	file:
client	../oatpp/src/oatpp/network/client/SimpleTCPConnectionProvider.hpp	/^namespace oatpp { namespace network { namespace client {$/;"	n	namespace:oatpp::network
client	../oatpp/src/oatpp/network/virtual_/client/ConnectionProvider.cpp	/^namespace oatpp { namespace network { namespace virtual_ { namespace client {$/;"	n	namespace:oatpp::network::virtual_	file:
client	../oatpp/src/oatpp/network/virtual_/client/ConnectionProvider.hpp	/^namespace oatpp { namespace network { namespace virtual_ { namespace client {$/;"	n	namespace:oatpp::network::virtual_
client	../oatpp/src/oatpp/web/client/ApiClient.cpp	/^namespace oatpp { namespace web { namespace client {$/;"	n	namespace:oatpp::web	file:
client	../oatpp/src/oatpp/web/client/ApiClient.hpp	/^namespace oatpp { namespace web { namespace client {$/;"	n	namespace:oatpp::web
client	../oatpp/src/oatpp/web/client/HttpRequestExecutor.cpp	/^namespace oatpp { namespace web { namespace client {$/;"	n	namespace:oatpp::web	file:
client	../oatpp/src/oatpp/web/client/HttpRequestExecutor.hpp	/^namespace oatpp { namespace web { namespace client {$/;"	n	namespace:oatpp::web
client	../oatpp/src/oatpp/web/client/RequestExecutor.cpp	/^namespace oatpp { namespace web { namespace client {$/;"	n	namespace:oatpp::web	file:
client	../oatpp/src/oatpp/web/client/RequestExecutor.hpp	/^namespace oatpp { namespace web { namespace client {$/;"	n	namespace:oatpp::web
clone	../oatpp/src/oatpp/core/async/Coroutine.cpp	/^Action Action::clone(const Action& action) {$/;"	f	class:oatpp::async::Action	typeref:typename:Action
close	../oatpp/src/oatpp/network/Connection.cpp	/^void Connection::close(){$/;"	f	class:oatpp::network::Connection	typeref:typename:void
close	../oatpp/src/oatpp/network/client/SimpleTCPConnectionProvider.hpp	/^  void close() override {$/;"	f	class:oatpp::network::client::SimpleTCPConnectionProvider	typeref:typename:void
close	../oatpp/src/oatpp/network/server/SimpleTCPConnectionProvider.cpp	/^void SimpleTCPConnectionProvider::close() {$/;"	f	class:oatpp::network::server::SimpleTCPConnectionProvider	typeref:typename:void
close	../oatpp/src/oatpp/network/virtual_/Pipe.cpp	/^void Pipe::close() {$/;"	f	class:oatpp::network::virtual_::Pipe	typeref:typename:void
close	../oatpp/src/oatpp/network/virtual_/Socket.cpp	/^void Socket::close() {$/;"	f	class:oatpp::network::virtual_::Socket	typeref:typename:void
close	../oatpp/src/oatpp/network/virtual_/client/ConnectionProvider.cpp	/^void ConnectionProvider::close() {$/;"	f	class:oatpp::network::virtual_::client::ConnectionProvider	typeref:typename:void
close	../oatpp/src/oatpp/network/virtual_/server/ConnectionProvider.cpp	/^void ConnectionProvider::close() {$/;"	f	class:oatpp::network::virtual_::server::ConnectionProvider	typeref:typename:void
cmake_check_build_system	../oatpp/build/Makefile	/^cmake_check_build_system:$/;"	t
cmake_check_build_system	../oatpp/build/src/Makefile	/^cmake_check_build_system:$/;"	t
cmake_check_build_system	../oatpp/build/test/Makefile	/^cmake_check_build_system:$/;"	t
cmake_force	../oatpp/build/Makefile	/^cmake_force:$/;"	t
cmake_force	../oatpp/build/src/Makefile	/^cmake_force:$/;"	t
cmake_force	../oatpp/build/test/Makefile	/^cmake_force:$/;"	t
code	../oatpp/src/oatpp/web/protocol/http/Http.hpp	/^  v_int32 code;$/;"	m	class:oatpp::web::protocol::http::Status	typeref:typename:v_int32
codeToUtf16SurrogatePair	../oatpp/src/oatpp/encoding/Unicode.cpp	/^void Unicode::codeToUtf16SurrogatePair(v_int32 code, v_int16& high, v_int16& low){$/;"	f	class:oatpp::encoding::Unicode	typeref:typename:void
codegen_hpp	../oatpp/src/oatpp/core/macro/codegen.hpp	/^#define codegen_hpp$/;"	d
collection	../oatpp/src/oatpp/core/collection/FastQueue.hpp	/^namespace oatpp { namespace collection {$/;"	n	namespace:oatpp
collection	../oatpp/src/oatpp/core/collection/LinkedList.hpp	/^namespace oatpp { namespace collection {$/;"	n	namespace:oatpp
collection	../oatpp/src/oatpp/core/collection/ListMap.hpp	/^namespace oatpp { namespace collection {$/;"	n	namespace:oatpp
collection	../oatpp/test/oatpp/core/base/collection/LinkedListTest.cpp	/^namespace oatpp { namespace test { namespace collection {$/;"	n	namespace:oatpp::test	file:
collection	../oatpp/test/oatpp/core/base/collection/LinkedListTest.hpp	/^namespace oatpp { namespace test { namespace collection {$/;"	n	namespace:oatpp::test
compare	../oatpp/src/oatpp/core/base/StrBuffer.cpp	/^v_int32 StrBuffer::compare(StrBuffer* str1, StrBuffer* str2) {$/;"	f	class:oatpp::base::StrBuffer	typeref:typename:v_int32
compare	../oatpp/src/oatpp/core/base/StrBuffer.cpp	/^v_int32 StrBuffer::compare(const void* data1, const void* data2, v_int32 size) {$/;"	f	class:oatpp::base::StrBuffer	typeref:typename:v_int32
concurrency	../oatpp/src/oatpp/core/concurrency/SpinLock.cpp	/^namespace oatpp { namespace concurrency {$/;"	n	namespace:oatpp	file:
concurrency	../oatpp/src/oatpp/core/concurrency/SpinLock.hpp	/^namespace oatpp { namespace concurrency {$/;"	n	namespace:oatpp
concurrency	../oatpp/src/oatpp/core/concurrency/Thread.cpp	/^namespace oatpp { namespace concurrency {$/;"	n	namespace:oatpp	file:
concurrency	../oatpp/src/oatpp/core/concurrency/Thread.hpp	/^namespace oatpp { namespace concurrency {$/;"	n	namespace:oatpp
connect	../oatpp/src/oatpp/network/virtual_/Interface.cpp	/^std::shared_ptr<Interface::ConnectionSubmission> Interface::connect() {$/;"	f	class:oatpp::network::virtual_::Interface	typeref:typename:std::shared_ptr<Interface::ConnectionSubmission>
connectNonBlocking	../oatpp/src/oatpp/network/virtual_/Interface.cpp	/^std::shared_ptr<Interface::ConnectionSubmission> Interface::connectNonBlocking() {$/;"	f	class:oatpp::network::virtual_::Interface	typeref:typename:std::shared_ptr<Interface::ConnectionSubmission>
connection	../oatpp/src/oatpp/web/client/HttpRequestExecutor.hpp	/^    std::shared_ptr<oatpp::network::ConnectionProvider::IOStream> connection;$/;"	m	class:oatpp::web::client::HttpRequestExecutor::HttpConnectionHandle	typeref:typename:std::shared_ptr<oatpp::network::ConnectionProvider::IOStream>
connection	../oatpp/src/oatpp/web/server/HttpProcessor.hpp	/^    std::shared_ptr<oatpp::data::stream::IOStream> connection;$/;"	m	class:oatpp::web::server::HttpProcessor::ConnectionState	typeref:typename:std::shared_ptr<oatpp::data::stream::IOStream>
considerConnectionState	../oatpp/src/oatpp/web/protocol/http/outgoing/CommunicationUtils.cpp	/^v_int32 CommunicationUtils::considerConnectionState(const std::shared_ptr<protocol::http::incomi/;"	f	class:oatpp::web::protocol::http::outgoing::CommunicationUtils	typeref:typename:v_int32
consumeAllTasks	../oatpp/src/oatpp/core/async/Processor.cpp	/^void Processor::consumeAllTasks() {$/;"	f	class:oatpp::async::Processor	typeref:typename:void
consumeBacklog	../oatpp/src/oatpp/core/async/worker/IOEventWorker_epoll.cpp	/^void IOEventWorker::consumeBacklog() {$/;"	f	class:oatpp::async::worker::IOEventWorker	typeref:typename:void
consumeBacklog	../oatpp/src/oatpp/core/async/worker/IOEventWorker_kqueue.cpp	/^void IOEventWorker::consumeBacklog() {$/;"	f	class:oatpp::async::worker::IOEventWorker	typeref:typename:void
consumeBacklog	../oatpp/src/oatpp/core/async/worker/IOWorker.cpp	/^void IOWorker::consumeBacklog(bool blockToConsume) {$/;"	f	class:oatpp::async::worker::IOWorker	typeref:typename:void
consumeBacklog	../oatpp/src/oatpp/core/async/worker/TimerWorker.cpp	/^void TimerWorker::consumeBacklog() {$/;"	f	class:oatpp::async::worker::TimerWorker	typeref:typename:void
consumes	../oatpp/src/oatpp/web/server/api/Endpoint.hpp	/^    std::list<ContentTypeAndSchema> consumes;$/;"	m	class:oatpp::web::server::api::Endpoint::Info	typeref:typename:std::list<ContentTypeAndSchema>
contentType	../oatpp/src/oatpp/web/server/api/Endpoint.hpp	/^      oatpp::String contentType;$/;"	m	struct:oatpp::web::server::api::Endpoint::Info::ContentTypeAndSchema	typeref:typename:oatpp::String
controller	../oatpp/src/oatpp/web/server/api/ApiController.hpp	/^    const ControllerT* controller;$/;"	m	class:oatpp::web::server::api::ApiController::HandlerCoroutine	typeref:typename:const ControllerT *
conversion	../oatpp/src/oatpp/core/utils/ConversionUtils.cpp	/^namespace oatpp { namespace utils { namespace conversion {$/;"	n	namespace:oatpp::utils	file:
conversion	../oatpp/src/oatpp/core/utils/ConversionUtils.hpp	/^namespace oatpp { namespace utils { namespace conversion {$/;"	n	namespace:oatpp::utils
convertParamsMap	../oatpp/src/oatpp/web/client/ApiClient.cpp	/^oatpp::web::protocol::http::Headers ApiClient::convertParamsMap(const std::shared_ptr<StringToPa/;"	f	class:oatpp::web::client::ApiClient	typeref:typename:oatpp::web::protocol::http::Headers
copy	../oatpp/src/oatpp/core/collection/LinkedList.hpp	/^  static std::shared_ptr<LinkedList> copy(LinkedList<T>* other){$/;"	f	class:oatpp::collection::LinkedList	typeref:typename:std::shared_ptr<LinkedList>
core	../oatpp/test/oatpp/core/data/mapping/type/TypeTest.cpp	/^namespace oatpp { namespace test { namespace core { namespace data { namespace mapping { namespa/;"	n	namespace:oatpp::test	file:
core	../oatpp/test/oatpp/core/data/mapping/type/TypeTest.hpp	/^namespace oatpp { namespace test { namespace core { namespace data { namespace mapping { namespa/;"	n	namespace:oatpp::test
core	../oatpp/test/oatpp/core/data/share/MemoryLabelTest.cpp	/^namespace oatpp { namespace test { namespace core { namespace data { namespace share {$/;"	n	namespace:oatpp::test	file:
core	../oatpp/test/oatpp/core/data/share/MemoryLabelTest.hpp	/^namespace oatpp { namespace test { namespace core { namespace data { namespace share {$/;"	n	namespace:oatpp::test
core	../oatpp/test/oatpp/core/data/stream/ChunkedBufferTest.cpp	/^namespace oatpp { namespace test { namespace core { namespace data { namespace stream {$/;"	n	namespace:oatpp::test	file:
core	../oatpp/test/oatpp/core/data/stream/ChunkedBufferTest.hpp	/^namespace oatpp { namespace test { namespace core { namespace data { namespace stream {$/;"	n	namespace:oatpp::test
coroutine	../oatpp/src/oatpp/core/async/Coroutine.hpp	/^    AbstractCoroutine* coroutine;$/;"	m	union:oatpp::async::Action::Data	typeref:typename:AbstractCoroutine *
count	../oatpp/src/oatpp/core/collection/FastQueue.hpp	/^  v_int32 count;$/;"	m	class:oatpp::collection::FastQueue	typeref:typename:v_int32
count	../oatpp/src/oatpp/core/collection/LinkedList.hpp	/^  v_int32 count() const{$/;"	f	class:oatpp::collection::LinkedList	typeref:typename:v_int32
count	../oatpp/src/oatpp/core/collection/ListMap.hpp	/^  v_int32 count() const{$/;"	f	class:oatpp::collection::ListMap	typeref:typename:v_int32
create1	../oatpp/test/oatpp/core/base/RegRuleTest.cpp	/^    static T create1() {$/;"	f	class:oatpp::test::base::__anon40c2e60e0110::BaseClass	typeref:typename:T	file:
create1	../oatpp/test/oatpp/core/base/RegRuleTest.cpp	/^    static T create1() {$/;"	f	class:oatpp::test::base::__anon40c2e60e0110::ChildClass	typeref:typename:T	file:
create2	../oatpp/test/oatpp/core/base/RegRuleTest.cpp	/^    static T create2() {$/;"	f	class:oatpp::test::base::__anon40c2e60e0110::BaseClass	typeref:typename:T	file:
create2	../oatpp/test/oatpp/core/base/RegRuleTest.cpp	/^    static T create2() {$/;"	f	class:oatpp::test::base::__anon40c2e60e0110::ChildClass	typeref:typename:T	file:
createAbstract	../oatpp/src/oatpp/core/data/mapping/type/Primitive.hpp	/^  static std::shared_ptr<Countable> createAbstract(const ValueType& value){$/;"	f	class:oatpp::data::mapping::type::Primitive	typeref:typename:std::shared_ptr<Countable>
createActionByType	../oatpp/src/oatpp/core/async/Coroutine.cpp	/^Action Action::createActionByType(v_int32 type) {$/;"	f	class:oatpp::async::Action	typeref:typename:Action
createCoroutine	../oatpp/src/oatpp/core/async/Processor.hpp	/^    virtual AbstractCoroutine* createCoroutine() {$/;"	f	class:oatpp::async::Processor::SubmissionTemplate	typeref:typename:AbstractCoroutine *
createDtoResponse	../oatpp/src/oatpp/web/server/api/ApiController.cpp	/^std::shared_ptr<ApiController::OutgoingResponse> ApiController::createDtoResponse(const Status& /;"	f	class:oatpp::web::server::api::ApiController	typeref:typename:std::shared_ptr<ApiController::OutgoingResponse>
createEndpoint	../oatpp/src/oatpp/web/server/api/ApiController.hpp	/^  static std::shared_ptr<Endpoint> createEndpoint(const std::shared_ptr<Endpoints>& endpoints,$/;"	f	class:oatpp::web::server::api::ApiController	typeref:typename:std::shared_ptr<Endpoint>
createEntry	../oatpp/src/oatpp/core/collection/ListMap.hpp	/^  Entry* createEntry(const K& pKey, const V& pValue, Entry* pNext){$/;"	f	class:oatpp::collection::ListMap	typeref:typename:Entry *
createFromCString	../oatpp/src/oatpp/core/base/StrBuffer.hpp	/^  static std::shared_ptr<StrBuffer> createFromCString(const char* data, bool copyAsOwnData = tru/;"	f	class:oatpp::base::StrBuffer	typeref:typename:std::shared_ptr<StrBuffer>
createIORepeatAction	../oatpp/src/oatpp/core/async/Coroutine.cpp	/^Action Action::createIORepeatAction(data::v_io_handle ioHandle, Action::IOEventType ioEventType)/;"	f	class:oatpp::async::Action	typeref:typename:Action
createIOWaitAction	../oatpp/src/oatpp/core/async/Coroutine.cpp	/^Action Action::createIOWaitAction(data::v_io_handle ioHandle, Action::IOEventType ioEventType) {$/;"	f	class:oatpp::async::Action	typeref:typename:Action
createNode	../oatpp/src/oatpp/core/collection/LinkedList.hpp	/^  LinkedListNode* createNode(const T& data, LinkedListNode* next){$/;"	f	class:oatpp::collection::LinkedList	typeref:typename:LinkedListNode *
createResponse	../oatpp/src/oatpp/web/protocol/http/outgoing/ResponseFactory.cpp	/^ResponseFactory::createResponse(const Status& status, const oatpp::String& text) {$/;"	f	class:oatpp::web::protocol::http::outgoing::ResponseFactory	typeref:typename:std::shared_ptr<Response>
createResponse	../oatpp/src/oatpp/web/protocol/http/outgoing/ResponseFactory.cpp	/^ResponseFactory::createResponse(const Status& status, const std::shared_ptr<oatpp::data::stream:/;"	f	class:oatpp::web::protocol::http::outgoing::ResponseFactory	typeref:typename:std::shared_ptr<Response>
createResponse	../oatpp/src/oatpp/web/protocol/http/outgoing/ResponseFactory.cpp	/^ResponseFactory::createResponse(const Status& status,$/;"	f	class:oatpp::web::protocol::http::outgoing::ResponseFactory	typeref:typename:std::shared_ptr<Response>
createResponse	../oatpp/src/oatpp/web/server/api/ApiController.cpp	/^std::shared_ptr<ApiController::OutgoingResponse> ApiController::createResponse(const Status& sta/;"	f	class:oatpp::web::server::api::ApiController	typeref:typename:std::shared_ptr<ApiController::OutgoingResponse>
createShared	../oatpp/src/oatpp/core/base/StrBuffer.cpp	/^std::shared_ptr<StrBuffer> StrBuffer::createShared(StrBuffer* other, bool copyAsOwnData) {$/;"	f	class:oatpp::base::StrBuffer	typeref:typename:std::shared_ptr<StrBuffer>
createShared	../oatpp/src/oatpp/core/base/StrBuffer.cpp	/^std::shared_ptr<StrBuffer> StrBuffer::createShared(const char* data, bool copyAsOwnData) {$/;"	f	class:oatpp::base::StrBuffer	typeref:typename:std::shared_ptr<StrBuffer>
createShared	../oatpp/src/oatpp/core/base/StrBuffer.cpp	/^std::shared_ptr<StrBuffer> StrBuffer::createShared(const void* data, v_int32 size, bool copyAsOw/;"	f	class:oatpp::base::StrBuffer	typeref:typename:std::shared_ptr<StrBuffer>
createShared	../oatpp/src/oatpp/core/base/StrBuffer.cpp	/^std::shared_ptr<StrBuffer> StrBuffer::createShared(v_int32 size) {$/;"	f	class:oatpp::base::StrBuffer	typeref:typename:std::shared_ptr<StrBuffer>
createShared	../oatpp/src/oatpp/core/collection/LinkedList.hpp	/^  static std::shared_ptr<LinkedList> createShared(){$/;"	f	class:oatpp::collection::LinkedList	typeref:typename:std::shared_ptr<LinkedList>
createShared	../oatpp/src/oatpp/core/collection/ListMap.hpp	/^  static std::shared_ptr<ListMap> createShared(){$/;"	f	class:oatpp::collection::ListMap	typeref:typename:std::shared_ptr<ListMap>
createShared	../oatpp/src/oatpp/core/data/buffer/IOBuffer.cpp	/^std::shared_ptr<IOBuffer> IOBuffer::createShared(){$/;"	f	class:oatpp::data::buffer::IOBuffer	typeref:typename:std::shared_ptr<IOBuffer>
createShared	../oatpp/src/oatpp/core/data/mapping/type/List.hpp	/^  static ObjectWrapper createShared(){$/;"	f	class:oatpp::data::mapping::type::ListTypeTemplate	typeref:typename:ObjectWrapper
createShared	../oatpp/src/oatpp/core/data/mapping/type/ListMap.hpp	/^  static ObjectWrapper createShared(){$/;"	f	class:oatpp::data::mapping::type::ListMap	typeref:typename:ObjectWrapper
createShared	../oatpp/src/oatpp/core/data/mapping/type/Primitive.hpp	/^  static std::shared_ptr<Primitive> createShared(const ValueType& value){$/;"	f	class:oatpp::data::mapping::type::Primitive	typeref:typename:std::shared_ptr<Primitive>
createShared	../oatpp/src/oatpp/core/data/stream/ChunkedBuffer.hpp	/^    static std::shared_ptr<Chunk> createShared(void* data, data::v_io_size size){$/;"	f	class:oatpp::data::stream::ChunkedBuffer::Chunk	typeref:typename:std::shared_ptr<Chunk>
createShared	../oatpp/src/oatpp/core/data/stream/ChunkedBuffer.hpp	/^  static std::shared_ptr<ChunkedBuffer> createShared(){$/;"	f	class:oatpp::data::stream::ChunkedBuffer	typeref:typename:std::shared_ptr<ChunkedBuffer>
createShared	../oatpp/src/oatpp/core/data/stream/Stream.hpp	/^  static std::shared_ptr<CompoundIOStream> createShared(const std::shared_ptr<OutputStream>& out/;"	f	class:oatpp::data::stream::CompoundIOStream	typeref:typename:std::shared_ptr<CompoundIOStream>
createShared	../oatpp/src/oatpp/core/data/stream/StreamBufferedProxy.hpp	/^  static std::shared_ptr<InputStreamBufferedProxy> createShared(const std::shared_ptr<InputStrea/;"	f	class:oatpp::data::stream::InputStreamBufferedProxy	typeref:typename:std::shared_ptr<InputStreamBufferedProxy>
createShared	../oatpp/src/oatpp/core/data/stream/StreamBufferedProxy.hpp	/^  static std::shared_ptr<OutputStreamBufferedProxy> createShared(const std::shared_ptr<OutputStr/;"	f	class:oatpp::data::stream::OutputStreamBufferedProxy	typeref:typename:std::shared_ptr<OutputStreamBufferedProxy>
createShared	../oatpp/src/oatpp/core/parser/Caret.cpp	/^  std::shared_ptr<Caret> Caret::createShared(const char* text){$/;"	f	class:oatpp::parser::Caret	typeref:typename:std::shared_ptr<Caret>
createShared	../oatpp/src/oatpp/core/parser/Caret.cpp	/^  std::shared_ptr<Caret> Caret::createShared(const oatpp::String& str){$/;"	f	class:oatpp::parser::Caret	typeref:typename:std::shared_ptr<Caret>
createShared	../oatpp/src/oatpp/core/parser/Caret.cpp	/^  std::shared_ptr<Caret> Caret::createShared(p_char8 parseData, v_int32 dataSize){$/;"	f	class:oatpp::parser::Caret	typeref:typename:std::shared_ptr<Caret>
createShared	../oatpp/src/oatpp/network/Connection.hpp	/^  static std::shared_ptr<Connection> createShared(data::v_io_handle handle){$/;"	f	class:oatpp::network::Connection	typeref:typename:std::shared_ptr<Connection>
createShared	../oatpp/src/oatpp/network/client/SimpleTCPConnectionProvider.hpp	/^  static std::shared_ptr<SimpleTCPConnectionProvider> createShared(const oatpp::String& host, v_/;"	f	class:oatpp::network::client::SimpleTCPConnectionProvider	typeref:typename:std::shared_ptr<SimpleTCPConnectionProvider>
createShared	../oatpp/src/oatpp/network/server/Server.hpp	/^  static std::shared_ptr<Server> createShared(const std::shared_ptr<ServerConnectionProvider>& c/;"	f	class:oatpp::network::server::Server	typeref:typename:std::shared_ptr<Server>
createShared	../oatpp/src/oatpp/network/server/SimpleTCPConnectionProvider.hpp	/^  static std::shared_ptr<SimpleTCPConnectionProvider> createShared(v_word16 port){$/;"	f	class:oatpp::network::server::SimpleTCPConnectionProvider	typeref:typename:std::shared_ptr<SimpleTCPConnectionProvider>
createShared	../oatpp/src/oatpp/network/virtual_/Interface.hpp	/^  static std::shared_ptr<Interface> createShared(const oatpp::String& name) {$/;"	f	class:oatpp::network::virtual_::Interface	typeref:typename:std::shared_ptr<Interface>
createShared	../oatpp/src/oatpp/network/virtual_/Pipe.cpp	/^std::shared_ptr<Pipe> Pipe::createShared(){$/;"	f	class:oatpp::network::virtual_::Pipe	typeref:typename:std::shared_ptr<Pipe>
createShared	../oatpp/src/oatpp/network/virtual_/Socket.cpp	/^std::shared_ptr<Socket> Socket::createShared(const std::shared_ptr<Pipe>& pipeIn, const std::sha/;"	f	class:oatpp::network::virtual_::Socket	typeref:typename:std::shared_ptr<Socket>
createShared	../oatpp/src/oatpp/network/virtual_/client/ConnectionProvider.cpp	/^std::shared_ptr<ConnectionProvider> ConnectionProvider::createShared(const std::shared_ptr<virtu/;"	f	class:oatpp::network::virtual_::client::ConnectionProvider	typeref:typename:std::shared_ptr<ConnectionProvider>
createShared	../oatpp/src/oatpp/network/virtual_/server/ConnectionProvider.cpp	/^std::shared_ptr<ConnectionProvider> ConnectionProvider::createShared(const std::shared_ptr<virtu/;"	f	class:oatpp::network::virtual_::server::ConnectionProvider	typeref:typename:std::shared_ptr<ConnectionProvider>
createShared	../oatpp/src/oatpp/parser/json/mapping/Deserializer.hpp	/^    static std::shared_ptr<Config> createShared(){$/;"	f	class:oatpp::parser::json::mapping::Deserializer::Config	typeref:typename:std::shared_ptr<Config>
createShared	../oatpp/src/oatpp/parser/json/mapping/ObjectMapper.cpp	/^std::shared_ptr<ObjectMapper> ObjectMapper::createShared(const std::shared_ptr<Serializer::Confi/;"	f	class:oatpp::parser::json::mapping::ObjectMapper	typeref:typename:std::shared_ptr<ObjectMapper>
createShared	../oatpp/src/oatpp/parser/json/mapping/Serializer.hpp	/^    static std::shared_ptr<Config> createShared(){$/;"	f	class:oatpp::parser::json::mapping::Serializer::Config	typeref:typename:std::shared_ptr<Config>
createShared	../oatpp/src/oatpp/web/client/ApiClient.hpp	/^  static std::shared_ptr<ApiClient> createShared(const std::shared_ptr<RequestExecutor>& request/;"	f	class:oatpp::web::client::ApiClient	typeref:typename:std::shared_ptr<ApiClient>
createShared	../oatpp/src/oatpp/web/client/HttpRequestExecutor.cpp	/^HttpRequestExecutor::createShared(const std::shared_ptr<oatpp::network::ClientConnectionProvider/;"	f	class:oatpp::web::client::HttpRequestExecutor	typeref:typename:std::shared_ptr<HttpRequestExecutor>
createShared	../oatpp/src/oatpp/web/protocol/http/incoming/Request.cpp	/^std::shared_ptr<Request> Request::createShared(const http::RequestStartingLine& startingLine,$/;"	f	class:oatpp::web::protocol::http::incoming::Request	typeref:typename:std::shared_ptr<Request>
createShared	../oatpp/src/oatpp/web/protocol/http/incoming/Response.cpp	/^std::shared_ptr<Response> Response::createShared(v_int32 statusCode,$/;"	f	class:oatpp::web::protocol::http::incoming::Response	typeref:typename:std::shared_ptr<Response>
createShared	../oatpp/src/oatpp/web/protocol/http/outgoing/BufferBody.cpp	/^std::shared_ptr<BufferBody> BufferBody::createShared(const oatpp::String& buffer) {$/;"	f	class:oatpp::web::protocol::http::outgoing::BufferBody	typeref:typename:std::shared_ptr<BufferBody>
createShared	../oatpp/src/oatpp/web/protocol/http/outgoing/ChunkedBufferBody.cpp	/^std::shared_ptr<ChunkedBufferBody> ChunkedBufferBody::createShared(const std::shared_ptr<oatpp::/;"	f	class:oatpp::web::protocol::http::outgoing::ChunkedBufferBody	typeref:typename:std::shared_ptr<ChunkedBufferBody>
createShared	../oatpp/src/oatpp/web/protocol/http/outgoing/DtoBody.cpp	/^std::shared_ptr<DtoBody> DtoBody::createShared(const oatpp::data::mapping::type::AbstractObjectW/;"	f	class:oatpp::web::protocol::http::outgoing::DtoBody	typeref:typename:std::shared_ptr<DtoBody>
createShared	../oatpp/src/oatpp/web/protocol/http/outgoing/Request.cpp	/^std::shared_ptr<Request> Request::createShared(const oatpp::data::share::StringKeyLabel& method,$/;"	f	class:oatpp::web::protocol::http::outgoing::Request	typeref:typename:std::shared_ptr<Request>
createShared	../oatpp/src/oatpp/web/protocol/http/outgoing/Response.cpp	/^std::shared_ptr<Response> Response::createShared(const Status& status,$/;"	f	class:oatpp::web::protocol::http::outgoing::Response	typeref:typename:std::shared_ptr<Response>
createShared	../oatpp/src/oatpp/web/server/AsyncHttpConnectionHandler.cpp	/^std::shared_ptr<AsyncHttpConnectionHandler> AsyncHttpConnectionHandler::createShared(const std::/;"	f	class:oatpp::web::server::AsyncHttpConnectionHandler	typeref:typename:std::shared_ptr<AsyncHttpConnectionHandler>
createShared	../oatpp/src/oatpp/web/server/HttpConnectionHandler.cpp	/^HttpConnectionHandler::Task::createShared(HttpRouter* router,$/;"	f	class:oatpp::web::server::HttpConnectionHandler::Task	typeref:typename:std::shared_ptr<HttpConnectionHandler::Task>
createShared	../oatpp/src/oatpp/web/server/HttpConnectionHandler.cpp	/^std::shared_ptr<HttpConnectionHandler> HttpConnectionHandler::createShared(const std::shared_ptr/;"	f	class:oatpp::web::server::HttpConnectionHandler	typeref:typename:std::shared_ptr<HttpConnectionHandler>
createShared	../oatpp/src/oatpp/web/server/HttpProcessor.hpp	/^    static std::shared_ptr<ConnectionState> createShared(){$/;"	f	class:oatpp::web::server::HttpProcessor::ConnectionState	typeref:typename:std::shared_ptr<ConnectionState>
createShared	../oatpp/src/oatpp/web/server/HttpRouter.cpp	/^std::shared_ptr<HttpRouter> HttpRouter::createShared() {$/;"	f	class:oatpp::web::server::HttpRouter	typeref:typename:std::shared_ptr<HttpRouter>
createShared	../oatpp/src/oatpp/web/server/api/ApiController.hpp	/^    static std::shared_ptr<Handler> createShared(T* controller, Method method, MethodAsync metho/;"	f	class:oatpp::web::server::api::ApiController::Handler	typeref:typename:std::shared_ptr<Handler>
createShared	../oatpp/src/oatpp/web/server/api/Endpoint.cpp	/^std::shared_ptr<Endpoint::Info> Endpoint::Info::createShared(){$/;"	f	class:oatpp::web::server::api::Endpoint::Info	typeref:typename:std::shared_ptr<Endpoint::Info>
createShared	../oatpp/src/oatpp/web/server/api/Endpoint.cpp	/^std::shared_ptr<Endpoint> Endpoint::createShared(const std::shared_ptr<RequestHandler>& handler,$/;"	f	class:oatpp::web::server::api::Endpoint	typeref:typename:std::shared_ptr<Endpoint>
createShared	../oatpp/src/oatpp/web/server/handler/ErrorHandler.hpp	/^  static std::shared_ptr<DefaultErrorHandler> createShared() {$/;"	f	class:oatpp::web::server::handler::DefaultErrorHandler	typeref:typename:std::shared_ptr<DefaultErrorHandler>
createShared	../oatpp/src/oatpp/web/url/mapping/Pattern.hpp	/^    static std::shared_ptr<Part> createShared(const char* function, const oatpp::String& text){$/;"	f	class:oatpp::web::url::mapping::Pattern::Part	typeref:typename:std::shared_ptr<Part>
createShared	../oatpp/src/oatpp/web/url/mapping/Pattern.hpp	/^  static std::shared_ptr<Pattern> createShared(){$/;"	f	class:oatpp::web::url::mapping::Pattern	typeref:typename:std::shared_ptr<Pattern>
createShared	../oatpp/src/oatpp/web/url/mapping/Router.hpp	/^  static std::shared_ptr<Router> createShared(){$/;"	f	class:oatpp::web::url::mapping::Router	typeref:typename:std::shared_ptr<Router>
createShared	../oatpp/test/oatpp/core/base/collection/LinkedListTest.cpp	/^  static std::shared_ptr<TestObject> createShared(){$/;"	f	class:oatpp::test::collection::__anondfade8e60110::TestObject	typeref:typename:std::shared_ptr<TestObject>	file:
createShared	../oatpp/test/oatpp/web/app/Controller.hpp	/^  static std::shared_ptr<Controller> createShared(const std::shared_ptr<ObjectMapper>& objectMap/;"	f	class:oatpp::test::web::app::Controller	typeref:typename:std::shared_ptr<Controller>
createShared	../oatpp/test/oatpp/web/app/ControllerAsync.hpp	/^  static std::shared_ptr<ControllerAsync> createShared(const std::shared_ptr<ObjectMapper>& obje/;"	f	class:oatpp::test::web::app::ControllerAsync	typeref:typename:std::shared_ptr<ControllerAsync>
createShared	../oatpp/test/oatpp/web/server/api/ApiControllerTest.cpp	/^  static std::shared_ptr<Controller> createShared(const std::shared_ptr<ObjectMapper>& objectMap/;"	f	class:oatpp::test::web::server::api::__anon4b1d35700110::Controller	typeref:typename:std::shared_ptr<Controller>	file:
createShared	src/controller/MediaController.hpp	/^  static std::shared_ptr<MediaController> createShared(OATPP_COMPONENT(std::shared_ptr<ObjectMap/;"	f	class:MediaController	typeref:typename:std::shared_ptr<MediaController>
createShared2	../oatpp/test/oatpp/core/base/collection/LinkedListTest.cpp	/^  static std::shared_ptr<TestObject> createShared2(){$/;"	f	class:oatpp::test::collection::__anondfade8e60110::TestObject	typeref:typename:std::shared_ptr<TestObject>	file:
createSharedConcatenated	../oatpp/src/oatpp/core/base/StrBuffer.cpp	/^std::shared_ptr<StrBuffer> StrBuffer::createSharedConcatenated(const void* data1, v_int32 size1,/;"	f	class:oatpp::base::StrBuffer	typeref:typename:std::shared_ptr<StrBuffer>
createTestInstance	../oatpp/test/oatpp/parser/json/mapping/DTOMapperPerfTest.cpp	/^    static ObjectWrapper createTestInstance(){$/;"	f	class:oatpp::test::parser::json::mapping::__anon21ca47af0110::Test1	typeref:typename:ObjectWrapper	file:
createWaitListAction	../oatpp/src/oatpp/core/async/Coroutine.cpp	/^Action Action::createWaitListAction(CoroutineWaitList* waitList) {$/;"	f	class:oatpp::async::Action	typeref:typename:Action
createWaitRepeatAction	../oatpp/src/oatpp/core/async/Coroutine.cpp	/^Action Action::createWaitRepeatAction(v_int64 timePointMicroseconds) {$/;"	f	class:oatpp::async::Action	typeref:typename:Action
creator	../oatpp/src/oatpp/core/async/Processor.hpp	/^    AbstractCoroutine* creator(IndexSequence<S...>) {$/;"	f	class:oatpp::async::Processor::SubmissionTemplate	typeref:typename:AbstractCoroutine *
creator	../oatpp/src/oatpp/core/data/mapping/type/Type.hpp	/^  const Creator creator;$/;"	m	class:oatpp::data::mapping::type::Type	typeref:typename:const Creator
customPoolAllocateSharedWithExtras	../oatpp/src/oatpp/core/base/memory/Allocator.hpp	/^static std::shared_ptr<T> customPoolAllocateSharedWithExtras(AllocationExtras& extras, P& pool, /;"	f	namespace:oatpp::base::memory	typeref:typename:std::shared_ptr<T>
cutEntry	../oatpp/src/oatpp/core/collection/FastQueue.hpp	/^  void cutEntry(T* entry, T* prevEntry){$/;"	f	class:oatpp::collection::FastQueue	typeref:typename:void
data	../oatpp/src/oatpp/core/collection/LinkedList.hpp	/^    T                 data;$/;"	m	class:oatpp::collection::LinkedList::LinkedListNode	typeref:typename:T
data	../oatpp/src/oatpp/core/data/IODefinitions.cpp	/^namespace oatpp { namespace data {$/;"	n	namespace:oatpp	file:
data	../oatpp/src/oatpp/core/data/IODefinitions.hpp	/^namespace oatpp { namespace data {$/;"	n	namespace:oatpp
data	../oatpp/src/oatpp/core/data/buffer/FIFOBuffer.cpp	/^namespace oatpp { namespace data{ namespace buffer {$/;"	n	namespace:oatpp	file:
data	../oatpp/src/oatpp/core/data/buffer/FIFOBuffer.hpp	/^namespace oatpp { namespace data { namespace buffer {$/;"	n	namespace:oatpp
data	../oatpp/src/oatpp/core/data/buffer/IOBuffer.cpp	/^namespace oatpp { namespace data{ namespace buffer {$/;"	n	namespace:oatpp	file:
data	../oatpp/src/oatpp/core/data/buffer/IOBuffer.hpp	/^namespace oatpp { namespace data{ namespace buffer {$/;"	n	namespace:oatpp
data	../oatpp/src/oatpp/core/data/mapping/ObjectMapper.cpp	/^namespace oatpp { namespace data { namespace mapping {$/;"	n	namespace:oatpp	file:
data	../oatpp/src/oatpp/core/data/mapping/ObjectMapper.hpp	/^namespace oatpp { namespace data { namespace mapping {$/;"	n	namespace:oatpp
data	../oatpp/src/oatpp/core/data/mapping/type/List.cpp	/^namespace oatpp { namespace data { namespace mapping { namespace type {$/;"	n	namespace:oatpp	file:
data	../oatpp/src/oatpp/core/data/mapping/type/List.hpp	/^namespace oatpp { namespace data { namespace mapping { namespace type {$/;"	n	namespace:oatpp
data	../oatpp/src/oatpp/core/data/mapping/type/ListMap.cpp	/^namespace oatpp { namespace data { namespace mapping { namespace type {$/;"	n	namespace:oatpp	file:
data	../oatpp/src/oatpp/core/data/mapping/type/ListMap.hpp	/^namespace oatpp { namespace data { namespace mapping { namespace type {$/;"	n	namespace:oatpp
data	../oatpp/src/oatpp/core/data/mapping/type/Object.cpp	/^namespace oatpp { namespace data { namespace mapping { namespace type {$/;"	n	namespace:oatpp	file:
data	../oatpp/src/oatpp/core/data/mapping/type/Object.hpp	/^namespace oatpp { namespace data { namespace mapping { namespace type {$/;"	n	namespace:oatpp
data	../oatpp/src/oatpp/core/data/mapping/type/Primitive.cpp	/^namespace oatpp { namespace data { namespace mapping { namespace type {$/;"	n	namespace:oatpp	file:
data	../oatpp/src/oatpp/core/data/mapping/type/Primitive.hpp	/^namespace oatpp { namespace data { namespace mapping { namespace type {$/;"	n	namespace:oatpp
data	../oatpp/src/oatpp/core/data/mapping/type/Type.cpp	/^namespace oatpp { namespace data { namespace mapping { namespace type {$/;"	n	namespace:oatpp	file:
data	../oatpp/src/oatpp/core/data/mapping/type/Type.hpp	/^namespace oatpp { namespace data { namespace mapping { namespace type {$/;"	n	namespace:oatpp
data	../oatpp/src/oatpp/core/data/share/MemoryLabel.cpp	/^namespace oatpp { namespace data { namespace share {$/;"	n	namespace:oatpp	file:
data	../oatpp/src/oatpp/core/data/share/MemoryLabel.hpp	/^namespace oatpp { namespace data { namespace share {$/;"	n	namespace:oatpp
data	../oatpp/src/oatpp/core/data/stream/ChunkedBuffer.cpp	/^namespace oatpp { namespace data{ namespace stream {$/;"	n	namespace:oatpp	file:
data	../oatpp/src/oatpp/core/data/stream/ChunkedBuffer.hpp	/^    const void* data;$/;"	m	class:oatpp::data::stream::ChunkedBuffer::Chunk	typeref:typename:const void *
data	../oatpp/src/oatpp/core/data/stream/ChunkedBuffer.hpp	/^namespace oatpp { namespace data{ namespace stream {$/;"	n	namespace:oatpp
data	../oatpp/src/oatpp/core/data/stream/Delegate.hpp	/^namespace oatpp { namespace data{ namespace stream {$/;"	n	namespace:oatpp
data	../oatpp/src/oatpp/core/data/stream/Stream.cpp	/^namespace oatpp { namespace data{ namespace stream {$/;"	n	namespace:oatpp	file:
data	../oatpp/src/oatpp/core/data/stream/Stream.hpp	/^namespace oatpp { namespace data{ namespace stream {$/;"	n	namespace:oatpp
data	../oatpp/src/oatpp/core/data/stream/StreamBufferedProxy.cpp	/^namespace oatpp { namespace data{ namespace stream {$/;"	n	namespace:oatpp	file:
data	../oatpp/src/oatpp/core/data/stream/StreamBufferedProxy.hpp	/^namespace oatpp { namespace data{ namespace stream {$/;"	n	namespace:oatpp
data	../oatpp/test/oatpp/core/data/mapping/type/TypeTest.cpp	/^namespace oatpp { namespace test { namespace core { namespace data { namespace mapping { namespa/;"	n	namespace:oatpp::test::core	file:
data	../oatpp/test/oatpp/core/data/mapping/type/TypeTest.hpp	/^namespace oatpp { namespace test { namespace core { namespace data { namespace mapping { namespa/;"	n	namespace:oatpp::test::core
data	../oatpp/test/oatpp/core/data/share/MemoryLabelTest.cpp	/^namespace oatpp { namespace test { namespace core { namespace data { namespace share {$/;"	n	namespace:oatpp::test::core	file:
data	../oatpp/test/oatpp/core/data/share/MemoryLabelTest.hpp	/^namespace oatpp { namespace test { namespace core { namespace data { namespace share {$/;"	n	namespace:oatpp::test::core
data	../oatpp/test/oatpp/core/data/stream/ChunkedBufferTest.cpp	/^namespace oatpp { namespace test { namespace core { namespace data { namespace stream {$/;"	n	namespace:oatpp::test::core	file:
data	../oatpp/test/oatpp/core/data/stream/ChunkedBufferTest.hpp	/^namespace oatpp { namespace test { namespace core { namespace data { namespace stream {$/;"	n	namespace:oatpp::test::core
deallocate	../oatpp/src/oatpp/core/base/memory/Allocator.hpp	/^  void deallocate(T* ptr, size_t n) {$/;"	f	class:oatpp::base::memory::CustomPoolSharedObjectAllocator	typeref:typename:void
deallocate	../oatpp/src/oatpp/core/base/memory/Allocator.hpp	/^  void deallocate(T* ptr, size_t n) {$/;"	f	class:oatpp::base::memory::PoolSharedObjectAllocator	typeref:typename:void
deallocate	../oatpp/src/oatpp/core/base/memory/Allocator.hpp	/^  void deallocate(T* ptr, size_t n) {$/;"	f	class:oatpp::base::memory::SharedObjectAllocator	typeref:typename:void
deallocate	../oatpp/src/oatpp/core/base/memory/Allocator.hpp	/^  void deallocate(T* ptr, size_t n) {$/;"	f	class:oatpp::base::memory::ThreadLocalPoolSharedObjectAllocator	typeref:typename:void
decObjects	../oatpp/src/oatpp/core/base/Environment.cpp	/^void Environment::decObjects(){$/;"	f	class:oatpp::base::Environment	typeref:typename:void
declareHeaders	../oatpp/src/oatpp/web/protocol/http/outgoing/BufferBody.cpp	/^void BufferBody::declareHeaders(Headers& headers) noexcept {$/;"	f	class:oatpp::web::protocol::http::outgoing::BufferBody	typeref:typename:void
declareHeaders	../oatpp/src/oatpp/web/protocol/http/outgoing/ChunkedBufferBody.cpp	/^void ChunkedBufferBody::declareHeaders(Headers& headers) noexcept {$/;"	f	class:oatpp::web::protocol::http::outgoing::ChunkedBufferBody	typeref:typename:void
declareHeaders	../oatpp/src/oatpp/web/protocol/http/outgoing/DtoBody.cpp	/^void DtoBody::declareHeaders(Headers& headers) noexcept {$/;"	f	class:oatpp::web::protocol::http::outgoing::DtoBody	typeref:typename:void
decode	../oatpp/src/oatpp/encoding/Base64.cpp	/^oatpp::String Base64::decode(const char* data, v_int32 size, const char* auxiliaryChars) {$/;"	f	class:oatpp::encoding::Base64	typeref:typename:oatpp::String
decode	../oatpp/src/oatpp/encoding/Base64.cpp	/^oatpp::String Base64::decode(const oatpp::String& data, const char* auxiliaryChars) {$/;"	f	class:oatpp::encoding::Base64	typeref:typename:oatpp::String
decode	../oatpp/src/oatpp/web/protocol/http/incoming/SimpleBodyDecoder.cpp	/^void SimpleBodyDecoder::decode(const Headers& headers,$/;"	f	class:oatpp::web::protocol::http::incoming::SimpleBodyDecoder	typeref:typename:void
decodeAsync	../oatpp/src/oatpp/web/protocol/http/incoming/SimpleBodyDecoder.cpp	/^oatpp::async::CoroutineStarter SimpleBodyDecoder::decodeAsync(const Headers& headers,$/;"	f	class:oatpp::web::protocol::http::incoming::SimpleBodyDecoder	typeref:typename:oatpp::async::CoroutineStarter
decodeToDto	../oatpp/src/oatpp/web/protocol/http/incoming/BodyDecoder.hpp	/^  typename Type::ObjectWrapper decodeToDto(const Headers& headers,$/;"	f	class:oatpp::web::protocol::http::incoming::BodyDecoder	typeref:typename:Type::ObjectWrapper
decodeToDtoAsync	../oatpp/src/oatpp/web/protocol/http/incoming/BodyDecoder.hpp	/^  decodeToDtoAsync(const Headers& headers,$/;"	f	class:oatpp::web::protocol::http::incoming::BodyDecoder	typeref:typename:oatpp::async::CoroutineStarterForResult<const typename DtoType::ObjectWrapper &>
decodeToString	../oatpp/src/oatpp/web/protocol/http/incoming/BodyDecoder.hpp	/^  oatpp::String decodeToString(const Headers& headers,$/;"	f	class:oatpp::web::protocol::http::incoming::BodyDecoder	typeref:typename:oatpp::String
decodeToStringAsync	../oatpp/src/oatpp/web/protocol/http/incoming/BodyDecoder.hpp	/^  decodeToStringAsync(const Headers& headers, const std::shared_ptr<oatpp::data::stream::InputSt/;"	f	class:oatpp::web::protocol::http::incoming::BodyDecoder	typeref:typename:oatpp::async::CoroutineStarterForResult<const oatpp::String &>
decodeUtf8Char	../oatpp/src/oatpp/encoding/Unicode.cpp	/^v_int32 Unicode::decodeUtf8Char(v_int32 code, p_char8 buffer) {$/;"	f	class:oatpp::encoding::Unicode	typeref:typename:v_int32
default_target	../oatpp/build/Makefile	/^default_target: all$/;"	t
default_target	../oatpp/build/src/Makefile	/^default_target: all$/;"	t
default_target	../oatpp/build/test/Makefile	/^default_target: all$/;"	t
depend	../oatpp/build/Makefile	/^depend:$/;"	t
depend	../oatpp/build/src/Makefile	/^depend:$/;"	t
depend	../oatpp/build/test/Makefile	/^depend:$/;"	t
deprecated	../oatpp/src/oatpp/web/server/api/Endpoint.hpp	/^      oatpp::Boolean deprecated = false;$/;"	m	struct:oatpp::web::server::api::Endpoint::Info::Param	typeref:typename:oatpp::Boolean
description	../oatpp/src/oatpp/web/protocol/http/Http.hpp	/^  const char* description;$/;"	m	class:oatpp::web::protocol::http::Status	typeref:typename:const char *
description	../oatpp/src/oatpp/web/protocol/http/Http.hpp	/^  oatpp::data::share::StringKeyLabel description;$/;"	m	struct:oatpp::web::protocol::http::ResponseStartingLine	typeref:typename:oatpp::data::share::StringKeyLabel
description	../oatpp/src/oatpp/web/server/api/Endpoint.hpp	/^      oatpp::String description;$/;"	m	struct:oatpp::web::server::api::Endpoint::Info::Param	typeref:typename:oatpp::String
description	../oatpp/src/oatpp/web/server/api/Endpoint.hpp	/^    oatpp::String description;$/;"	m	class:oatpp::web::server::api::Endpoint::Info	typeref:typename:oatpp::String
deserialize	../oatpp/src/oatpp/parser/json/mapping/Deserializer.hpp	/^  static AbstractObjectWrapper deserialize(oatpp::parser::Caret& caret,$/;"	f	class:oatpp::parser::json::mapping::Deserializer	typeref:typename:AbstractObjectWrapper
deserializerConfig	../oatpp/src/oatpp/parser/json/mapping/ObjectMapper.hpp	/^  std::shared_ptr<Deserializer::Config> deserializerConfig;$/;"	m	class:oatpp::parser::json::mapping::ObjectMapper	typeref:typename:std::shared_ptr<Deserializer::Config>
destroy	../oatpp/src/oatpp/core/base/Environment.cpp	/^void Environment::destroy(){$/;"	f	class:oatpp::base::Environment	typeref:typename:void
destroyEntry	../oatpp/src/oatpp/core/collection/ListMap.hpp	/^  void destroyEntry(Entry* entry){$/;"	f	class:oatpp::collection::ListMap	typeref:typename:void
destroyNode	../oatpp/src/oatpp/core/collection/LinkedList.hpp	/^  void destroyNode(LinkedListNode* node){$/;"	f	class:oatpp::collection::LinkedList	typeref:typename:void
detach	../oatpp/src/oatpp/core/async/Executor.cpp	/^void Executor::SubmissionProcessor::detach() {$/;"	f	class:oatpp::async::Executor::SubmissionProcessor	typeref:typename:void
detach	../oatpp/src/oatpp/core/async/Executor.cpp	/^void Executor::detach() {$/;"	f	class:oatpp::async::Executor	typeref:typename:void
detach	../oatpp/src/oatpp/core/async/worker/IOEventWorker_common.cpp	/^void IOEventWorker::detach() {$/;"	f	class:oatpp::async::worker::IOEventWorker	typeref:typename:void
detach	../oatpp/src/oatpp/core/async/worker/IOEventWorker_common.cpp	/^void IOEventWorkerForeman::detach() {$/;"	f	class:oatpp::async::worker::IOEventWorkerForeman	typeref:typename:void
detach	../oatpp/src/oatpp/core/async/worker/IOWorker.cpp	/^void IOWorker::detach() {$/;"	f	class:oatpp::async::worker::IOWorker	typeref:typename:void
detach	../oatpp/src/oatpp/core/async/worker/TimerWorker.cpp	/^void TimerWorker::detach() {$/;"	f	class:oatpp::async::worker::TimerWorker	typeref:typename:void
dismissAction	../oatpp/src/oatpp/core/async/worker/Worker.cpp	/^void Worker::dismissAction(Action& action) {$/;"	f	class:oatpp::async::worker::Worker	typeref:typename:void
doChunkedDecoding	../oatpp/src/oatpp/web/protocol/http/incoming/SimpleBodyDecoder.cpp	/^void SimpleBodyDecoder::doChunkedDecoding(const std::shared_ptr<oatpp::data::stream::InputStream/;"	f	class:oatpp::web::protocol::http::incoming::SimpleBodyDecoder	typeref:typename:void
doChunkedDecodingAsync	../oatpp/src/oatpp/web/protocol/http/incoming/SimpleBodyDecoder.cpp	/^oatpp::async::CoroutineStarter SimpleBodyDecoder::doChunkedDecodingAsync(const std::shared_ptr<o/;"	f	class:oatpp::web::protocol::http::incoming::SimpleBodyDecoder	typeref:typename:oatpp::async::CoroutineStarter
doConnect	../oatpp/src/oatpp/network/client/SimpleTCPConnectionProvider.cpp	/^    Action doConnect() {$/;"	f	class:oatpp::network::client::SimpleTCPConnectionProvider::getConnectionAsync::ConnectCoroutine	typeref:typename:Action	file:
doGarbageAllocs	../oatpp/test/oatpp/core/base/memory/MemoryPoolTest.cpp	/^void doGarbageAllocs(base::memory::MemoryPool& pool, v_int32 garbageNumber){$/;"	f	namespace:oatpp::test::memory::__anonf07292930110	typeref:typename:void
doGarbageAllocsStdNew	../oatpp/test/oatpp/core/base/memory/MemoryPoolTest.cpp	/^void doGarbageAllocsStdNew(v_int32 garbageNumber){$/;"	f	namespace:oatpp::test::memory::__anonf07292930110	typeref:typename:void
doPoolSimpleAlloc	../oatpp/test/oatpp/core/base/memory/MemoryPoolTest.cpp	/^  void doPoolSimpleAlloc(){$/;"	f	namespace:oatpp::test::memory::__anonf07292930110	typeref:typename:void
doRead	../oatpp/src/oatpp/core/data/stream/Stream.cpp	/^    Action doRead() {$/;"	f	class:oatpp::data::stream::transferAsync::TransferCoroutine	typeref:typename:Action	file:
doStackAlloc	../oatpp/test/oatpp/core/base/memory/MemoryPoolTest.cpp	/^  void doStackAlloc(){$/;"	f	namespace:oatpp::test::memory::__anonf07292930110	typeref:typename:void
doStdSimpleAlloc	../oatpp/test/oatpp/core/base/memory/MemoryPoolTest.cpp	/^  void doStdSimpleAlloc(){$/;"	f	namespace:oatpp::test::memory::__anonf07292930110	typeref:typename:void
doWrite	../oatpp/src/oatpp/core/data/stream/Stream.cpp	/^    Action doWrite() {$/;"	f	class:oatpp::data::stream::transferAsync::TransferCoroutine	typeref:typename:Action	file:
dto	../oatpp/test/oatpp/web/app/Controller.hpp	/^    auto dto = TestDto::createShared();$/;"	m	class:oatpp::test::web::app::Controller	typeref:typename:auto
duration	src/hls/Playlist.hpp	/^    v_float64 duration;$/;"	m	struct:Playlist::RecordMarker	typeref:typename:v_float64
edit_cache	../oatpp/build/Makefile	/^edit_cache:$/;"	t
edit_cache	../oatpp/build/src/Makefile	/^edit_cache:$/;"	t
edit_cache	../oatpp/build/test/Makefile	/^edit_cache:$/;"	t
edit_cache/fast	../oatpp/build/Makefile	/^edit_cache\/fast: edit_cache$/;"	t
edit_cache/fast	../oatpp/build/src/Makefile	/^edit_cache\/fast: edit_cache$/;"	t
edit_cache/fast	../oatpp/build/test/Makefile	/^edit_cache\/fast: edit_cache$/;"	t
empty	../oatpp/src/oatpp/core/data/mapping/type/Primitive.hpp	/^    static const ObjectWrapper& empty(){$/;"	f	class:oatpp::data::mapping::type::Primitive::ObjectWrapper	typeref:typename:const ObjectWrapper &
empty	../oatpp/src/oatpp/core/data/mapping/type/Primitive.hpp	/^  static const String& empty(){$/;"	f	class:oatpp::data::mapping::type::String	typeref:typename:const String &
empty	../oatpp/src/oatpp/core/data/mapping/type/Type.hpp	/^  static ObjectWrapper empty(){$/;"	f	class:oatpp::data::mapping::type::ObjectWrapper	typeref:typename:ObjectWrapper
empty	../oatpp/src/oatpp/core/data/mapping/type/Type.hpp	/^  static PolymorphicWrapper empty(){$/;"	f	class:oatpp::data::mapping::type::PolymorphicWrapper	typeref:typename:PolymorphicWrapper
encode	../oatpp/src/oatpp/encoding/Base64.cpp	/^oatpp::String Base64::encode(const oatpp::String& data, const char* alphabet) {$/;"	f	class:oatpp::encoding::Base64	typeref:typename:oatpp::String
encode	../oatpp/src/oatpp/encoding/Base64.cpp	/^oatpp::String Base64::encode(const void* data, v_int32 size, const char* alphabet) {$/;"	f	class:oatpp::encoding::Base64	typeref:typename:oatpp::String
encodeUtf8Char	../oatpp/src/oatpp/encoding/Unicode.cpp	/^v_int32 Unicode::encodeUtf8Char(p_char8 sequence, v_int32& length){$/;"	f	class:oatpp::encoding::Unicode	typeref:typename:v_int32
encoding	../oatpp/src/oatpp/encoding/Base64.cpp	/^namespace oatpp { namespace encoding {$/;"	n	namespace:oatpp	file:
encoding	../oatpp/src/oatpp/encoding/Base64.hpp	/^namespace oatpp { namespace encoding {$/;"	n	namespace:oatpp
encoding	../oatpp/src/oatpp/encoding/Hex.cpp	/^namespace oatpp { namespace encoding {$/;"	n	namespace:oatpp	file:
encoding	../oatpp/src/oatpp/encoding/Hex.hpp	/^namespace oatpp { namespace encoding {$/;"	n	namespace:oatpp
encoding	../oatpp/src/oatpp/encoding/Unicode.cpp	/^namespace oatpp { namespace encoding {$/;"	n	namespace:oatpp	file:
encoding	../oatpp/src/oatpp/encoding/Unicode.hpp	/^namespace oatpp { namespace encoding {$/;"	n	namespace:oatpp
encoding	../oatpp/test/oatpp/encoding/Base64Test.cpp	/^namespace oatpp { namespace test { namespace encoding {$/;"	n	namespace:oatpp::test	file:
encoding	../oatpp/test/oatpp/encoding/Base64Test.hpp	/^namespace oatpp { namespace test { namespace encoding {$/;"	n	namespace:oatpp::test
encoding	../oatpp/test/oatpp/encoding/UnicodeTest.cpp	/^namespace oatpp { namespace test { namespace encoding {$/;"	n	namespace:oatpp::test	file:
encoding	../oatpp/test/oatpp/encoding/UnicodeTest.hpp	/^namespace oatpp { namespace test { namespace encoding {$/;"	n	namespace:oatpp::test
end	../oatpp/src/oatpp/core/parser/Caret.cpp	/^  void Caret::Label::end() {$/;"	f	class:oatpp::parser::Caret::Label	typeref:typename:void
end	../oatpp/src/oatpp/web/protocol/http/Http.hpp	/^  oatpp::data::v_io_size end;$/;"	m	class:oatpp::web::protocol::http::ContentRange	typeref:typename:oatpp::data::v_io_size
end	../oatpp/src/oatpp/web/protocol/http/Http.hpp	/^  oatpp::data::v_io_size end;$/;"	m	class:oatpp::web::protocol::http::Range	typeref:typename:oatpp::data::v_io_size
equals	../oatpp/src/oatpp/core/base/StrBuffer.cpp	/^bool StrBuffer::equals(StrBuffer* other) const {$/;"	f	class:oatpp::base::StrBuffer	typeref:typename:bool
equals	../oatpp/src/oatpp/core/base/StrBuffer.cpp	/^bool StrBuffer::equals(StrBuffer* str1, StrBuffer* str2) {$/;"	f	class:oatpp::base::StrBuffer	typeref:typename:bool
equals	../oatpp/src/oatpp/core/base/StrBuffer.cpp	/^bool StrBuffer::equals(const char* data) const {$/;"	f	class:oatpp::base::StrBuffer	typeref:typename:bool
equals	../oatpp/src/oatpp/core/base/StrBuffer.cpp	/^bool StrBuffer::equals(const char* data1, const char* data2) {$/;"	f	class:oatpp::base::StrBuffer	typeref:typename:bool
equals	../oatpp/src/oatpp/core/base/StrBuffer.cpp	/^bool StrBuffer::equals(const void* data, v_int32 size) const {$/;"	f	class:oatpp::base::StrBuffer	typeref:typename:bool
equals	../oatpp/src/oatpp/core/base/StrBuffer.cpp	/^bool StrBuffer::equals(const void* data1, const void* data2, v_int32 size) {$/;"	f	class:oatpp::base::StrBuffer	typeref:typename:bool
equals	../oatpp/src/oatpp/core/data/share/MemoryLabel.hpp	/^  bool equals(const char* data) const {$/;"	f	class:oatpp::data::share::MemoryLabel	typeref:typename:bool
equals	../oatpp/src/oatpp/core/data/share/MemoryLabel.hpp	/^  bool equals(const void* data, v_int32 size) const {$/;"	f	class:oatpp::data::share::MemoryLabel	typeref:typename:bool
equalsCI	../oatpp/src/oatpp/core/base/StrBuffer.cpp	/^bool StrBuffer::equalsCI(StrBuffer* str1, StrBuffer* str2) {$/;"	f	class:oatpp::base::StrBuffer	typeref:typename:bool
equalsCI	../oatpp/src/oatpp/core/base/StrBuffer.cpp	/^bool StrBuffer::equalsCI(const char* data1, const char* data2) {$/;"	f	class:oatpp::base::StrBuffer	typeref:typename:bool
equalsCI	../oatpp/src/oatpp/core/base/StrBuffer.cpp	/^bool StrBuffer::equalsCI(const void* data1, const void* data2, v_int32 size) {$/;"	f	class:oatpp::base::StrBuffer	typeref:typename:bool
equalsCI_FAST	../oatpp/src/oatpp/core/base/StrBuffer.cpp	/^bool StrBuffer::equalsCI_FAST(StrBuffer* str1, StrBuffer* str2) {$/;"	f	class:oatpp::base::StrBuffer	typeref:typename:bool
equalsCI_FAST	../oatpp/src/oatpp/core/base/StrBuffer.cpp	/^bool StrBuffer::equalsCI_FAST(StrBuffer* str1, const char* str2) {$/;"	f	class:oatpp::base::StrBuffer	typeref:typename:bool
equalsCI_FAST	../oatpp/src/oatpp/core/base/StrBuffer.cpp	/^bool StrBuffer::equalsCI_FAST(const char* data1, const char* data2) {$/;"	f	class:oatpp::base::StrBuffer	typeref:typename:bool
equalsCI_FAST	../oatpp/src/oatpp/core/base/StrBuffer.cpp	/^bool StrBuffer::equalsCI_FAST(const void* data1, const void* data2, v_int32 size) {$/;"	f	class:oatpp::base::StrBuffer	typeref:typename:bool
error	../oatpp/src/oatpp/core/async/Coroutine.cpp	/^Action AbstractCoroutine::error(const std::shared_ptr<const Error>& error) {$/;"	f	class:oatpp::async::AbstractCoroutine	typeref:typename:Action
error	../oatpp/src/oatpp/core/async/Coroutine.hpp	/^  Action error(Args... args) {$/;"	f	class:oatpp::async::AbstractCoroutine	typeref:typename:Action
escapeString	../oatpp/src/oatpp/parser/json/Utils.cpp	/^oatpp::String Utils::escapeString(p_char8 data, v_int32 size, bool copyAsOwnData) {$/;"	f	class:oatpp::parser::json::Utils	typeref:typename:oatpp::String
escapeUtf8Char	../oatpp/src/oatpp/parser/json/Utils.cpp	/^v_int32 Utils::escapeUtf8Char(p_char8 sequence, p_char8 buffer){$/;"	f	class:oatpp::parser::json::Utils	typeref:typename:v_int32
execute	../oatpp/src/oatpp/core/async/Executor.hpp	/^    void execute(Args... params) {$/;"	f	class:oatpp::async::Executor::SubmissionProcessor	typeref:typename:void
execute	../oatpp/src/oatpp/core/async/Executor.hpp	/^  void execute(Args... params) {$/;"	f	class:oatpp::async::Executor	typeref:typename:void
execute	../oatpp/src/oatpp/core/async/Processor.hpp	/^  void execute(Args... params) {$/;"	f	class:oatpp::async::Processor	typeref:typename:void
execute	../oatpp/src/oatpp/web/client/HttpRequestExecutor.cpp	/^HttpRequestExecutor::execute(const String& method,$/;"	f	class:oatpp::web::client::HttpRequestExecutor	typeref:typename:std::shared_ptr<HttpRequestExecutor::Response>
executeAsync	../oatpp/src/oatpp/web/client/HttpRequestExecutor.cpp	/^HttpRequestExecutor::executeAsync(const String& method,$/;"	f	class:oatpp::web::client::HttpRequestExecutor	typeref:typename:oatpp::async::CoroutineStarterForResult<const std::shared_ptr<HttpRequestExecutor::Response> &>
executeRequest	../oatpp/src/oatpp/web/client/ApiClient.cpp	/^std::shared_ptr<ApiClient::Response> ApiClient::executeRequest(const oatpp::String& method,$/;"	f	class:oatpp::web::client::ApiClient	typeref:typename:std::shared_ptr<ApiClient::Response>
executeRequestAsync	../oatpp/src/oatpp/web/client/ApiClient.cpp	/^ApiClient::executeRequestAsync(const oatpp::String& method,$/;"	f	class:oatpp::web::client::ApiClient	typeref:typename:oatpp::async::CoroutineStarterForResult<const std::shared_ptr<ApiClient::Response> &>
extraPtr	../oatpp/src/oatpp/core/base/memory/Allocator.hpp	/^  void* extraPtr;$/;"	m	class:oatpp::base::memory::AllocationExtras	typeref:typename:void *
extraWanted	../oatpp/src/oatpp/core/base/memory/Allocator.hpp	/^  const v_int32 extraWanted;$/;"	m	class:oatpp::base::memory::AllocationExtras	typeref:typename:const v_int32
features	../oatpp/build/CMakeFiles/feature_tests.cxx	/^  const char features[] = {"\\n"$/;"	v	typeref:typename:const char[]
find	../oatpp/src/oatpp/core/collection/ListMap.hpp	/^  const Entry* find(const K& key) const{$/;"	f	class:oatpp::collection::ListMap	typeref:typename:const Entry *
findChar	../oatpp/src/oatpp/core/parser/Caret.cpp	/^  bool Caret::findChar(v_char8 c){$/;"	f	class:oatpp::parser::Caret	typeref:typename:bool
findCharFromSet	../oatpp/src/oatpp/core/parser/Caret.cpp	/^  v_int32 Caret::findCharFromSet(const char* set){$/;"	f	class:oatpp::parser::Caret	typeref:typename:v_int32
findCharFromSet	../oatpp/src/oatpp/core/parser/Caret.cpp	/^  v_int32 Caret::findCharFromSet(p_char8 set, v_int32 setSize){$/;"	f	class:oatpp::parser::Caret	typeref:typename:v_int32
findRN	../oatpp/src/oatpp/core/parser/Caret.cpp	/^  bool Caret::findRN() {$/;"	f	class:oatpp::parser::Caret	typeref:typename:bool
findROrN	../oatpp/src/oatpp/core/parser/Caret.cpp	/^  bool Caret::findROrN() {$/;"	f	class:oatpp::parser::Caret	typeref:typename:bool
findSysChar	../oatpp/src/oatpp/web/url/mapping/Pattern.cpp	/^v_char8 Pattern::findSysChar(oatpp::parser::Caret& caret) {$/;"	f	class:oatpp::web::url::mapping::Pattern	typeref:typename:v_char8
findText	../oatpp/src/oatpp/core/parser/Caret.cpp	/^  bool Caret::findText(const char* text) {$/;"	f	class:oatpp::parser::Caret	typeref:typename:bool
findText	../oatpp/src/oatpp/core/parser/Caret.cpp	/^  bool Caret::findText(p_char8 text, v_int32 textSize) {$/;"	f	class:oatpp::parser::Caret	typeref:typename:bool
finish	../oatpp/src/oatpp/core/async/Coroutine.hpp	/^  Action finish() const {$/;"	f	class:oatpp::async::Coroutine	typeref:typename:Action
finished	../oatpp/src/oatpp/core/async/Coroutine.cpp	/^bool AbstractCoroutine::finished() const {$/;"	f	class:oatpp::async::AbstractCoroutine	typeref:typename:bool
first	../oatpp/src/oatpp/core/collection/FastQueue.hpp	/^  T* first;$/;"	m	class:oatpp::collection::FastQueue	typeref:typename:T *
float32ToCharSequence	../oatpp/src/oatpp/core/utils/ConversionUtils.cpp	/^  v_int32 float32ToCharSequence(v_float32 value, p_char8 data){$/;"	f	namespace:oatpp::utils::conversion	typeref:typename:v_int32
float32ToStr	../oatpp/src/oatpp/core/utils/ConversionUtils.cpp	/^  oatpp::String float32ToStr(v_float32 value){$/;"	f	namespace:oatpp::utils::conversion	typeref:typename:oatpp::String
float64ToCharSequence	../oatpp/src/oatpp/core/utils/ConversionUtils.cpp	/^  v_int32 float64ToCharSequence(v_float64 value, p_char8 data){$/;"	f	namespace:oatpp::utils::conversion	typeref:typename:v_int32
float64ToStr	../oatpp/src/oatpp/core/utils/ConversionUtils.cpp	/^  oatpp::String float64ToStr(v_float64 value){$/;"	f	namespace:oatpp::utils::conversion	typeref:typename:oatpp::String
flush	../oatpp/src/oatpp/core/data/stream/StreamBufferedProxy.cpp	/^data::v_io_size OutputStreamBufferedProxy::flush() {$/;"	f	class:oatpp::data::stream::OutputStreamBufferedProxy	typeref:typename:data::v_io_size
flushAsync	../oatpp/src/oatpp/core/data/stream/StreamBufferedProxy.cpp	/^oatpp::async::CoroutineStarter OutputStreamBufferedProxy::flushAsync() {$/;"	f	class:oatpp::data::stream::OutputStreamBufferedProxy	typeref:typename:oatpp::async::CoroutineStarter
flushToStream	../oatpp/src/oatpp/core/data/buffer/FIFOBuffer.cpp	/^data::v_io_size FIFOBuffer::flushToStream(data::stream::OutputStream& stream) {$/;"	f	class:oatpp::data::buffer::FIFOBuffer	typeref:typename:data::v_io_size
flushToStream	../oatpp/src/oatpp/core/data/stream/ChunkedBuffer.cpp	/^bool ChunkedBuffer::flushToStream(const std::shared_ptr<OutputStream>& stream){$/;"	f	class:oatpp::data::stream::ChunkedBuffer	typeref:typename:bool
flushToStreamAsync	../oatpp/src/oatpp/core/data/buffer/FIFOBuffer.cpp	/^async::CoroutineStarter FIFOBuffer::flushToStreamAsync(const std::shared_ptr<data::stream::Outpu/;"	f	class:oatpp::data::buffer::FIFOBuffer	typeref:typename:async::CoroutineStarter
flushToStreamAsync	../oatpp/src/oatpp/core/data/stream/ChunkedBuffer.cpp	/^oatpp::async::CoroutineStarter ChunkedBuffer::flushToStreamAsync(const std::shared_ptr<OutputStr/;"	f	class:oatpp::data::stream::ChunkedBuffer	typeref:typename:oatpp::async::CoroutineStarter
forEach	../oatpp/src/oatpp/core/collection/LinkedList.hpp	/^  void forEach(const F& lambda) const {$/;"	f	class:oatpp::collection::LinkedList	typeref:typename:void
forEachNode	../oatpp/src/oatpp/core/collection/LinkedList.hpp	/^  void forEachNode(const F& lambda) const {$/;"	f	class:oatpp::collection::LinkedList	typeref:typename:void
formatPath	../oatpp/src/oatpp/web/client/ApiClient.cpp	/^oatpp::String ApiClient::formatPath(const PathPattern& pathPattern,$/;"	f	class:oatpp::web::client::ApiClient	typeref:typename:oatpp::String
formatPath	../oatpp/src/oatpp/web/client/ApiClient.cpp	/^void ApiClient::formatPath(oatpp::data::stream::OutputStream* stream,$/;"	f	class:oatpp::web::client::ApiClient	typeref:typename:void
formatText	src/Utils.cpp	/^oatpp::String formatText(const char* text, ...) {$/;"	f	typeref:typename:oatpp::String
fptr	../oatpp/src/oatpp/core/async/Coroutine.hpp	/^    FunctionPtr fptr;$/;"	m	union:oatpp::async::Action::Data	typeref:typename:FunctionPtr
free	../oatpp/src/oatpp/core/base/memory/MemoryPool.cpp	/^void MemoryPool::free(void* entry) {$/;"	f	class:oatpp::base::memory::MemoryPool	typeref:typename:void
free	../oatpp/src/oatpp/core/base/memory/MemoryPool.hpp	/^  void free(T* entry) {$/;"	f	class:oatpp::base::memory::Bench	typeref:typename:void
freeByEntryHeader	../oatpp/src/oatpp/core/base/memory/MemoryPool.cpp	/^void MemoryPool::freeByEntryHeader(EntryHeader* entry) {$/;"	f	class:oatpp::base::memory::MemoryPool	typeref:typename:void
freeEntry	../oatpp/src/oatpp/core/data/stream/ChunkedBuffer.cpp	/^void ChunkedBuffer::freeEntry(ChunkEntry* entry){$/;"	f	class:oatpp::data::stream::ChunkedBuffer	typeref:typename:void
fullFlush	../oatpp/src/oatpp/core/data/buffer/FIFOBuffer.cpp	/^    Action fullFlush() {$/;"	f	class:oatpp::data::buffer::FIFOBuffer::flushToStreamAsync::FlushCoroutine	typeref:typename:Action	file:
function	../oatpp/src/oatpp/web/url/mapping/Pattern.hpp	/^    const char* function;$/;"	m	class:oatpp::web::url::mapping::Pattern::Part	typeref:typename:const char *
generateForTime	src/hls/Playlist.cpp	/^std::shared_ptr<oatpp::data::stream::ChunkedBuffer> Playlist::generateForTime(v_int64 millis, v_/;"	f	class:Playlist	typeref:typename:std::shared_ptr<oatpp::data::stream::ChunkedBuffer>
generateTable	../oatpp/src/oatpp/algorithm/CRC.cpp	/^p_word32 CRC32::generateTable(v_word32 poly) {$/;"	f	class:oatpp::algorithm::CRC32	typeref:typename:p_word32
get	../oatpp/src/oatpp/core/collection/LinkedList.hpp	/^  const T& get(v_int32 index) const{$/;"	f	class:oatpp::collection::LinkedList	typeref:typename:const T &
get	../oatpp/src/oatpp/core/collection/ListMap.hpp	/^  const V& get(const K& key, const V& defaultValue) const {$/;"	f	class:oatpp::collection::ListMap	typeref:typename:const V &
get	../oatpp/src/oatpp/core/data/mapping/type/Type.cpp	/^AbstractObjectWrapper Type::Property::get(void* object) {$/;"	f	class:oatpp::data::mapping::type::Type::Property	typeref:typename:AbstractObjectWrapper
get	../oatpp/src/oatpp/core/data/mapping/type/Type.hpp	/^  T* get() const {$/;"	f	class:oatpp::data::mapping::type::PolymorphicWrapper	typeref:typename:T *
getAlphabetCharIndex	../oatpp/src/oatpp/encoding/Base64.cpp	/^v_char8 Base64::getAlphabetCharIndex(v_char8 a, const char* auxiliaryChars) {$/;"	f	class:oatpp::encoding::Base64	typeref:typename:v_char8
getArgumentIndex	../oatpp/src/oatpp/core/base/CommandLineArguments.cpp	/^v_int32 CommandLineArguments::Parser::getArgumentIndex(int argc, const char * argv[], const char/;"	f	class:oatpp::base::CommandLineArguments::Parser	typeref:typename:v_int32
getArgumentIndex	../oatpp/src/oatpp/core/base/CommandLineArguments.hpp	/^  v_int32 getArgumentIndex(const char* argName) const {$/;"	f	class:oatpp::base::CommandLineArguments	typeref:typename:v_int32
getArgumentStartingWith	../oatpp/src/oatpp/core/base/CommandLineArguments.cpp	/^const char* CommandLineArguments::Parser::getArgumentStartingWith(int argc, const char * argv[],/;"	f	class:oatpp::base::CommandLineArguments::Parser	typeref:typename:const char *
getArgumentStartingWith	../oatpp/src/oatpp/core/base/CommandLineArguments.hpp	/^  const char* getArgumentStartingWith(const char* argNamePrefix, const char* defaultValue = null/;"	f	class:oatpp::base::CommandLineArguments	typeref:typename:const char *
getAsRef	../oatpp/src/oatpp/core/data/mapping/type/Type.cpp	/^AbstractObjectWrapper& Type::Property::getAsRef(void* object) {$/;"	f	class:oatpp::data::mapping::type::Type::Property	typeref:typename:AbstractObjectWrapper &
getBody	../oatpp/src/oatpp/web/protocol/http/outgoing/Request.cpp	/^std::shared_ptr<Body> Request::getBody() {$/;"	f	class:oatpp::web::protocol::http::outgoing::Request	typeref:typename:std::shared_ptr<Body>
getBodyDecoder	../oatpp/src/oatpp/web/protocol/http/incoming/Request.cpp	/^std::shared_ptr<const http::incoming::BodyDecoder> Request::getBodyDecoder() const {$/;"	f	class:oatpp::web::protocol::http::incoming::Request	typeref:typename:std::shared_ptr<const http::incoming::BodyDecoder>
getBodyDecoder	../oatpp/src/oatpp/web/protocol/http/incoming/Response.cpp	/^std::shared_ptr<const http::incoming::BodyDecoder> Response::getBodyDecoder() const {$/;"	f	class:oatpp::web::protocol::http::incoming::Response	typeref:typename:std::shared_ptr<const http::incoming::BodyDecoder>
getBodyStream	../oatpp/src/oatpp/web/protocol/http/incoming/Request.cpp	/^std::shared_ptr<oatpp::data::stream::InputStream> Request::getBodyStream() const {$/;"	f	class:oatpp::web::protocol::http::incoming::Request	typeref:typename:std::shared_ptr<oatpp::data::stream::InputStream>
getBodyStream	../oatpp/src/oatpp/web/protocol/http/incoming/Response.cpp	/^std::shared_ptr<oatpp::data::stream::InputStream> Response::getBodyStream() const {$/;"	f	class:oatpp::web::protocol::http::incoming::Response	typeref:typename:std::shared_ptr<oatpp::data::stream::InputStream>
getBranch	../oatpp/src/oatpp/web/server/HttpRouter.cpp	/^const std::shared_ptr<HttpRouter::BranchRouter>& HttpRouter::getBranch(const StringKeyLabel& nam/;"	f	class:oatpp::web::server::HttpRouter	typeref:typename:const std::shared_ptr<HttpRouter::BranchRouter> &
getBufferPool	../oatpp/src/oatpp/core/data/buffer/IOBuffer.hpp	/^  static oatpp::base::memory::ThreadDistributedMemoryPool& getBufferPool(){$/;"	f	class:oatpp::data::buffer::IOBuffer	typeref:typename:oatpp::base::memory::ThreadDistributedMemoryPool &
getBufferSize	../oatpp/src/oatpp/core/data/buffer/FIFOBuffer.cpp	/^data::v_io_size FIFOBuffer::getBufferSize() const {$/;"	f	class:oatpp::data::buffer::FIFOBuffer	typeref:typename:data::v_io_size
getChunkForPosition	../oatpp/src/oatpp/core/data/stream/ChunkedBuffer.cpp	/^ChunkedBuffer::ChunkEntry* ChunkedBuffer::getChunkForPosition(ChunkEntry* fromChunk,$/;"	f	class:oatpp::data::stream::ChunkedBuffer	typeref:typename:ChunkedBuffer::ChunkEntry *
getChunks	../oatpp/src/oatpp/core/data/stream/ChunkedBuffer.cpp	/^std::shared_ptr<ChunkedBuffer::Chunks> ChunkedBuffer::getChunks() {$/;"	f	class:oatpp::data::stream::ChunkedBuffer	typeref:typename:std::shared_ptr<ChunkedBuffer::Chunks>
getCode	../oatpp/src/oatpp/core/data/IODefinitions.hpp	/^  v_io_size getCode() const {$/;"	f	class:oatpp::data::AsyncIOError	typeref:typename:v_io_size
getCode	../oatpp/src/oatpp/core/parser/ParsingError.cpp	/^v_int32 ParsingError::getCode() const {$/;"	f	class:oatpp::parser::ParsingError	typeref:typename:v_int32
getComponent	../oatpp/src/oatpp/core/base/Environment.cpp	/^void* Environment::getComponent(const std::string& typeName) {$/;"	f	class:oatpp::base::Environment	typeref:typename:void *
getComponent	../oatpp/src/oatpp/core/base/Environment.cpp	/^void* Environment::getComponent(const std::string& typeName, const std::string& componentName) {$/;"	f	class:oatpp::base::Environment	typeref:typename:void *
getConnection	../oatpp/src/oatpp/network/client/SimpleTCPConnectionProvider.cpp	/^std::shared_ptr<oatpp::data::stream::IOStream> SimpleTCPConnectionProvider::getConnection(){$/;"	f	class:oatpp::network::client::SimpleTCPConnectionProvider	typeref:typename:std::shared_ptr<oatpp::data::stream::IOStream>
getConnection	../oatpp/src/oatpp/network/server/SimpleTCPConnectionProvider.cpp	/^std::shared_ptr<oatpp::data::stream::IOStream> SimpleTCPConnectionProvider::getConnection(){$/;"	f	class:oatpp::network::server::SimpleTCPConnectionProvider	typeref:typename:std::shared_ptr<oatpp::data::stream::IOStream>
getConnection	../oatpp/src/oatpp/network/virtual_/client/ConnectionProvider.cpp	/^std::shared_ptr<ConnectionProvider::IOStream> ConnectionProvider::getConnection() {$/;"	f	class:oatpp::network::virtual_::client::ConnectionProvider	typeref:typename:std::shared_ptr<ConnectionProvider::IOStream>
getConnection	../oatpp/src/oatpp/network/virtual_/server/ConnectionProvider.cpp	/^std::shared_ptr<ConnectionProvider::IOStream> ConnectionProvider::getConnection() {$/;"	f	class:oatpp::network::virtual_::server::ConnectionProvider	typeref:typename:std::shared_ptr<ConnectionProvider::IOStream>
getConnection	../oatpp/src/oatpp/web/client/ApiClient.cpp	/^std::shared_ptr<RequestExecutor::ConnectionHandle> ApiClient::getConnection() {$/;"	f	class:oatpp::web::client::ApiClient	typeref:typename:std::shared_ptr<RequestExecutor::ConnectionHandle>
getConnection	../oatpp/src/oatpp/web/client/HttpRequestExecutor.cpp	/^std::shared_ptr<HttpRequestExecutor::ConnectionHandle> HttpRequestExecutor::getConnection() {$/;"	f	class:oatpp::web::client::HttpRequestExecutor	typeref:typename:std::shared_ptr<HttpRequestExecutor::ConnectionHandle>
getConnectionAsync	../oatpp/src/oatpp/network/client/SimpleTCPConnectionProvider.cpp	/^oatpp::async::CoroutineStarterForResult<const std::shared_ptr<oatpp::data::stream::IOStream>&> S/;"	f	class:oatpp::network::client::SimpleTCPConnectionProvider	typeref:typename:oatpp::async::CoroutineStarterForResult<const std::shared_ptr<oatpp::data::stream::IOStream> &>
getConnectionAsync	../oatpp/src/oatpp/network/server/SimpleTCPConnectionProvider.hpp	/^  oatpp::async::CoroutineStarterForResult<const std::shared_ptr<oatpp::data::stream::IOStream>&>/;"	f	class:oatpp::network::server::SimpleTCPConnectionProvider	typeref:typename:oatpp::async::CoroutineStarterForResult<const std::shared_ptr<oatpp::data::stream::IOStream> &>
getConnectionAsync	../oatpp/src/oatpp/network/virtual_/client/ConnectionProvider.cpp	/^oatpp::async::CoroutineStarterForResult<const std::shared_ptr<oatpp::data::stream::IOStream>&> C/;"	f	class:oatpp::network::virtual_::client::ConnectionProvider	typeref:typename:oatpp::async::CoroutineStarterForResult<const std::shared_ptr<oatpp::data::stream::IOStream> &>
getConnectionAsync	../oatpp/src/oatpp/network/virtual_/server/ConnectionProvider.hpp	/^  oatpp::async::CoroutineStarterForResult<const std::shared_ptr<oatpp::data::stream::IOStream>&>/;"	f	class:oatpp::network::virtual_::server::ConnectionProvider	typeref:typename:oatpp::async::CoroutineStarterForResult<const std::shared_ptr<oatpp::data::stream::IOStream> &>
getConnectionAsync	../oatpp/src/oatpp/web/client/ApiClient.cpp	/^oatpp::async::CoroutineStarterForResult<const std::shared_ptr<RequestExecutor::ConnectionHandle>/;"	f	class:oatpp::web::client::ApiClient	typeref:typename:oatpp::async::CoroutineStarterForResult<const std::shared_ptr<RequestExecutor::ConnectionHandle> &>
getConnectionAsync	../oatpp/src/oatpp/web/client/HttpRequestExecutor.cpp	/^HttpRequestExecutor::getConnectionAsync() {$/;"	f	class:oatpp::web::client::HttpRequestExecutor	typeref:typename:oatpp::async::CoroutineStarterForResult<const std::shared_ptr<HttpRequestExecutor::ConnectionHandle> &>
getConnectionUpgradeHandler	../oatpp/src/oatpp/web/protocol/http/outgoing/Response.cpp	/^std::shared_ptr<oatpp::network::server::ConnectionHandler> Response::getConnectionUpgradeHandler/;"	f	class:oatpp::web::protocol::http::outgoing::Response	typeref:typename:std::shared_ptr<oatpp::network::server::ConnectionHandler>
getConnectionUpgradeParameters	../oatpp/src/oatpp/web/protocol/http/outgoing/Response.cpp	/^std::shared_ptr<const Response::ConnectionHandler::ParameterMap> Response::getConnectionUpgradeP/;"	f	class:oatpp::web::protocol::http::outgoing::Response	typeref:typename:std::shared_ptr<const Response::ConnectionHandler::ParameterMap>
getCoroutineProcessor	../oatpp/src/oatpp/core/async/worker/Worker.cpp	/^Processor* Worker::getCoroutineProcessor(AbstractCoroutine* CP) {$/;"	f	class:oatpp::async::worker::Worker	typeref:typename:Processor *
getCoroutineScheduledAction	../oatpp/src/oatpp/core/async/worker/Worker.cpp	/^Action& Worker::getCoroutineScheduledAction(AbstractCoroutine* CP) {$/;"	f	class:oatpp::async::worker::Worker	typeref:typename:Action &
getCurrData	../oatpp/src/oatpp/core/parser/Caret.cpp	/^  p_char8 Caret::getCurrData(){$/;"	f	class:oatpp::parser::Caret	typeref:typename:p_char8
getData	../oatpp/src/oatpp/core/base/StrBuffer.cpp	/^p_char8 StrBuffer::getData() const {$/;"	f	class:oatpp::base::StrBuffer	typeref:typename:p_char8
getData	../oatpp/src/oatpp/core/collection/LinkedList.hpp	/^    const T& getData(){$/;"	f	class:oatpp::collection::LinkedList::LinkedListNode	typeref:typename:const T &
getData	../oatpp/src/oatpp/core/data/buffer/IOBuffer.cpp	/^void* IOBuffer::getData(){$/;"	f	class:oatpp::data::buffer::IOBuffer	typeref:typename:void *
getData	../oatpp/src/oatpp/core/data/share/MemoryLabel.hpp	/^  p_char8 getData() const {$/;"	f	class:oatpp::data::share::MemoryLabel	typeref:typename:p_char8
getData	../oatpp/src/oatpp/core/parser/Caret.cpp	/^  p_char8 Caret::Label::getData(){$/;"	f	class:oatpp::parser::Caret::Label	typeref:typename:p_char8
getData	../oatpp/src/oatpp/core/parser/Caret.cpp	/^  p_char8 Caret::getData(){$/;"	f	class:oatpp::parser::Caret	typeref:typename:p_char8
getDataSize	../oatpp/src/oatpp/core/parser/Caret.cpp	/^  v_int32 Caret::getDataSize(){$/;"	f	class:oatpp::parser::Caret	typeref:typename:v_int32
getDefaultObjectMapper	../oatpp/src/oatpp/web/server/api/ApiController.cpp	/^const std::shared_ptr<oatpp::data::mapping::ObjectMapper>& ApiController::getDefaultObjectMapper/;"	f	class:oatpp::web::server::api::ApiController	typeref:typename:const std::shared_ptr<oatpp::data::mapping::ObjectMapper> &
getElapsedTicks	../oatpp/src/oatpp-test/Checker.cpp	/^v_int64 PerformanceChecker::getElapsedTicks(){$/;"	f	class:oatpp::test::PerformanceChecker	typeref:typename:v_int64
getEndpoint	../oatpp/src/oatpp/web/url/mapping/Router.hpp	/^    Endpoint* getEndpoint() {$/;"	f	class:oatpp::web::url::mapping::Router::Route	typeref:typename:Endpoint *
getEndpointInfo	../oatpp/src/oatpp/web/server/api/ApiController.cpp	/^std::shared_ptr<ApiController::Endpoint::Info> ApiController::getEndpointInfo(const std::string&/;"	f	class:oatpp::web::server::api::ApiController	typeref:typename:std::shared_ptr<ApiController::Endpoint::Info>
getEndpoints	../oatpp/src/oatpp/web/server/api/ApiController.cpp	/^std::shared_ptr<ApiController::Endpoints> ApiController::getEndpoints() {$/;"	f	class:oatpp::web::server::api::ApiController	typeref:typename:std::shared_ptr<ApiController::Endpoints>
getEntry	../oatpp/src/oatpp/core/collection/ListMap.hpp	/^  Entry* getEntry(v_int32 index) const{$/;"	f	class:oatpp::collection::ListMap	typeref:typename:Entry *
getEntryByKey	../oatpp/src/oatpp/core/collection/ListMap.hpp	/^  Entry* getEntryByKey(const Key& key) const{$/;"	f	class:oatpp::collection::ListMap	typeref:typename:Entry *
getEntrySize	../oatpp/src/oatpp/core/base/memory/MemoryPool.cpp	/^v_int32 MemoryPool::getEntrySize(){$/;"	f	class:oatpp::base::memory::MemoryPool	typeref:typename:v_int32
getErrorCode	../oatpp/src/oatpp/core/parser/Caret.cpp	/^  v_int32 Caret::getErrorCode() {$/;"	f	class:oatpp::parser::Caret	typeref:typename:v_int32
getErrorCode	../oatpp/src/oatpp/web/client/RequestExecutor.cpp	/^v_int32 RequestExecutor::RequestExecutionError::getErrorCode() const {$/;"	f	class:oatpp::web::client::RequestExecutor::RequestExecutionError	typeref:typename:v_int32
getErrorMessage	../oatpp/src/oatpp/core/parser/Caret.cpp	/^  const char* Caret::getErrorMessage() {$/;"	f	class:oatpp::parser::Caret	typeref:typename:const char *
getExtension	src/Utils.cpp	/^oatpp::String StaticFilesManager::getExtension(const oatpp::String& filename) {$/;"	f	class:StaticFilesManager	typeref:typename:oatpp::String
getFile	src/Utils.cpp	/^oatpp::String StaticFilesManager::getFile(const oatpp::String& path) {$/;"	f	class:StaticFilesManager	typeref:typename:oatpp::String
getFirst	../oatpp/src/oatpp/core/collection/LinkedList.hpp	/^  const T& getFirst() const{$/;"	f	class:oatpp::collection::LinkedList	typeref:typename:const T &
getFirstEntry	../oatpp/src/oatpp/core/collection/ListMap.hpp	/^  Entry* getFirstEntry() const {$/;"	f	class:oatpp::collection::ListMap	typeref:typename:Entry *
getFirstNode	../oatpp/src/oatpp/core/collection/LinkedList.hpp	/^  LinkedListNode* getFirstNode() const {$/;"	f	class:oatpp::collection::LinkedList	typeref:typename:LinkedListNode *
getFullFileResponse	src/controller/MediaController.cpp	/^std::shared_ptr<MediaController::OutgoingResponse> MediaController::getFullFileResponse(const oa/;"	f	class:MediaController	typeref:typename:std::shared_ptr<MediaController::OutgoingResponse>
getHandle	../oatpp/src/oatpp/network/Connection.hpp	/^  data::v_io_handle getHandle(){$/;"	f	class:oatpp::network::Connection	typeref:typename:data::v_io_handle
getHardwareConcurrency	../oatpp/src/oatpp/core/concurrency/Thread.cpp	/^v_int32 getHardwareConcurrency() {$/;"	f	namespace:oatpp::concurrency	typeref:typename:v_int32
getHeader	../oatpp/src/oatpp/web/protocol/http/incoming/Request.cpp	/^oatpp::String Request::getHeader(const oatpp::data::share::StringKeyLabelCI_FAST& headerName) co/;"	f	class:oatpp::web::protocol::http::incoming::Request	typeref:typename:oatpp::String
getHeaders	../oatpp/src/oatpp/web/protocol/http/incoming/Request.cpp	/^const http::Headers& Request::getHeaders() const {$/;"	f	class:oatpp::web::protocol::http::incoming::Request	typeref:typename:const http::Headers &
getHeaders	../oatpp/src/oatpp/web/protocol/http/incoming/Response.cpp	/^const http::Headers& Response::getHeaders() const {$/;"	f	class:oatpp::web::protocol::http::incoming::Response	typeref:typename:const http::Headers &
getHeaders	../oatpp/src/oatpp/web/protocol/http/outgoing/Request.cpp	/^protocol::http::Headers& Request::getHeaders() {$/;"	f	class:oatpp::web::protocol::http::outgoing::Request	typeref:typename:protocol::http::Headers &
getHeaders	../oatpp/src/oatpp/web/protocol/http/outgoing/Response.cpp	/^protocol::http::Headers& Response::getHeaders() {$/;"	f	class:oatpp::web::protocol::http::outgoing::Response	typeref:typename:protocol::http::Headers &
getHost	../oatpp/src/oatpp/network/client/SimpleTCPConnectionProvider.hpp	/^  oatpp::String getHost() {$/;"	f	class:oatpp::network::client::SimpleTCPConnectionProvider	typeref:typename:oatpp::String
getIOEventCode	../oatpp/src/oatpp/core/async/Coroutine.cpp	/^v_int32 Action::getIOEventCode() const {$/;"	f	class:oatpp::async::Action	typeref:typename:v_int32
getIOEventType	../oatpp/src/oatpp/core/async/Coroutine.cpp	/^Action::IOEventType Action::getIOEventType() const {$/;"	f	class:oatpp::async::Action	typeref:typename:Action::IOEventType
getIOHandle	../oatpp/src/oatpp/core/async/Coroutine.cpp	/^oatpp::data::v_io_handle Action::getIOHandle() const {$/;"	f	class:oatpp::async::Action	typeref:typename:oatpp::data::v_io_handle
getIOStatus	../oatpp/src/oatpp/web/protocol/CommunicationError.cpp	/^oatpp::data::v_io_size CommunicationError::getIOStatus() {$/;"	f	class:oatpp::web::protocol::CommunicationError	typeref:typename:oatpp::data::v_io_size
getInfo	../oatpp/src/oatpp/core/data/mapping/ObjectMapper.cpp	/^const ObjectMapper::Info& ObjectMapper::getInfo() const {$/;"	f	class:oatpp::data::mapping::ObjectMapper	typeref:typename:const ObjectMapper::Info &
getInfo	../oatpp/src/oatpp/web/protocol/CommunicationError.hpp	/^  Info getInfo() {$/;"	f	class:oatpp::web::protocol::AsyncProtocolError	typeref:typename:Info
getInfo	../oatpp/src/oatpp/web/protocol/CommunicationError.hpp	/^  Info getInfo() {$/;"	f	class:oatpp::web::protocol::ProtocolError	typeref:typename:Info
getInputStreamIOMode	../oatpp/src/oatpp/core/data/stream/Stream.hpp	/^  IOMode getInputStreamIOMode() override {$/;"	f	class:oatpp::data::stream::CompoundIOStream	typeref:typename:IOMode
getInputStreamIOMode	../oatpp/src/oatpp/core/data/stream/StreamBufferedProxy.cpp	/^oatpp::data::stream::IOMode InputStreamBufferedProxy::getInputStreamIOMode() {$/;"	f	class:oatpp::data::stream::InputStreamBufferedProxy	typeref:typename:oatpp::data::stream::IOMode
getInputStreamIOMode	../oatpp/src/oatpp/network/Connection.cpp	/^oatpp::data::stream::IOMode Connection::getInputStreamIOMode() {$/;"	f	class:oatpp::network::Connection	typeref:typename:oatpp::data::stream::IOMode
getInputStreamIOMode	../oatpp/src/oatpp/network/virtual_/Pipe.cpp	/^oatpp::data::stream::IOMode Pipe::Reader::getInputStreamIOMode() {$/;"	f	class:oatpp::network::virtual_::Pipe::Reader	typeref:typename:oatpp::data::stream::IOMode
getInputStreamIOMode	../oatpp/src/oatpp/network/virtual_/Socket.cpp	/^oatpp::data::stream::IOMode Socket::getInputStreamIOMode() {$/;"	f	class:oatpp::network::virtual_::Socket	typeref:typename:oatpp::data::stream::IOMode
getKey	../oatpp/src/oatpp/core/collection/ListMap.hpp	/^    const K& getKey() const{$/;"	f	class:oatpp::collection::ListMap::Entry	typeref:typename:const K &
getLast	../oatpp/src/oatpp/core/collection/LinkedList.hpp	/^  const T& getLast() const{$/;"	f	class:oatpp::collection::LinkedList	typeref:typename:const T &
getList	../oatpp/src/oatpp/core/data/mapping/type/Type.hpp	/^    const std::list<Property*>& getList() const {$/;"	f	class:oatpp::data::mapping::type::Type::Properties	typeref:typename:const std::list<Property * > &
getMap	../oatpp/src/oatpp/core/data/mapping/type/Type.hpp	/^    const std::unordered_map<std::string, Property*>& getMap() const {$/;"	f	class:oatpp::data::mapping::type::Type::Properties	typeref:typename:const std::unordered_map<std::string,Property * > &
getMapperInfo	../oatpp/src/oatpp/parser/json/mapping/ObjectMapper.hpp	/^  static Info& getMapperInfo() {$/;"	f	class:oatpp::parser::json::mapping::ObjectMapper	typeref:typename:Info &
getMemberCaller	../oatpp/src/oatpp/core/async/Coroutine.hpp	/^  MemberCaller getMemberCaller() const override {$/;"	f	class:oatpp::async::Coroutine	typeref:typename:MemberCaller
getMemberCaller	../oatpp/src/oatpp/core/async/Coroutine.hpp	/^  MemberCaller getMemberCaller() const override {$/;"	f	class:oatpp::async::CoroutineWithResult	typeref:typename:MemberCaller
getMemoryHandle	../oatpp/src/oatpp/core/data/share/MemoryLabel.hpp	/^  std::shared_ptr<base::StrBuffer> getMemoryHandle() const {$/;"	f	class:oatpp::data::share::MemoryLabel	typeref:typename:std::shared_ptr<base::StrBuffer>
getMessage	../oatpp/src/oatpp/core/parser/ParsingError.cpp	/^oatpp::String ParsingError::getMessage() const {$/;"	f	class:oatpp::parser::ParsingError	typeref:typename:oatpp::String
getMessage	../oatpp/src/oatpp/web/client/RequestExecutor.cpp	/^const char* RequestExecutor::RequestExecutionError::getMessage() const {$/;"	f	class:oatpp::web::client::RequestExecutor::RequestExecutionError	typeref:typename:const char *
getMessage	../oatpp/src/oatpp/web/protocol/CommunicationError.cpp	/^oatpp::String& CommunicationError::getMessage(){$/;"	f	class:oatpp::web::protocol::CommunicationError	typeref:typename:oatpp::String &
getMessage	../oatpp/src/oatpp/web/protocol/CommunicationError.hpp	/^  oatpp::String getMessage() {$/;"	f	class:oatpp::web::protocol::AsyncProtocolError	typeref:typename:oatpp::String
getMethod	../oatpp/src/oatpp/web/protocol/http/outgoing/Request.cpp	/^const oatpp::data::share::StringKeyLabel& Request::getMethod() const {$/;"	f	class:oatpp::web::protocol::http::outgoing::Request	typeref:typename:const oatpp::data::share::StringKeyLabel &
getMicroTickCount	../oatpp/src/oatpp/core/base/Environment.cpp	/^v_int64 Environment::getMicroTickCount(){$/;"	f	class:oatpp::base::Environment	typeref:typename:v_int64
getMillisTickCount	src/Utils.cpp	/^v_int64 getMillisTickCount(){$/;"	f	typeref:typename:v_int64
getName	../oatpp/src/oatpp/core/base/memory/MemoryPool.cpp	/^std::string MemoryPool::getName(){$/;"	f	class:oatpp::base::memory::MemoryPool	typeref:typename:std::string
getName	../oatpp/src/oatpp/network/virtual_/Interface.hpp	/^  oatpp::String getName() {$/;"	f	class:oatpp::network::virtual_::Interface	typeref:typename:oatpp::String
getNamedArgumentValue	../oatpp/src/oatpp/core/base/CommandLineArguments.cpp	/^const char* CommandLineArguments::Parser::getNamedArgumentValue(int argc, const char * argv[], c/;"	f	class:oatpp::base::CommandLineArguments::Parser	typeref:typename:const char *
getNamedArgumentValue	../oatpp/src/oatpp/core/base/CommandLineArguments.hpp	/^  const char* getNamedArgumentValue(const char* argName, const char* defaultValue = nullptr) con/;"	f	class:oatpp::base::CommandLineArguments	typeref:typename:const char *
getNext	../oatpp/src/oatpp/core/collection/LinkedList.hpp	/^    LinkedListNode* getNext(){$/;"	f	class:oatpp::collection::LinkedList::LinkedListNode	typeref:typename:LinkedListNode *
getNext	../oatpp/src/oatpp/core/collection/ListMap.hpp	/^    Entry* getNext() const{$/;"	f	class:oatpp::collection::ListMap::Entry	typeref:typename:Entry *
getNode	../oatpp/src/oatpp/core/collection/LinkedList.hpp	/^  LinkedListNode* getNode(v_int32 index) const{$/;"	f	class:oatpp::collection::LinkedList	typeref:typename:LinkedListNode *
getObject	../oatpp/src/oatpp/core/base/Environment.hpp	/^    T getObject() {$/;"	f	class:oatpp::base::Environment::Component	typeref:typename:T
getObjectsCount	../oatpp/src/oatpp/core/base/Environment.cpp	/^v_counter Environment::getObjectsCount(){$/;"	f	class:oatpp::base::Environment	typeref:typename:v_counter
getObjectsCount	../oatpp/src/oatpp/core/base/memory/MemoryPool.cpp	/^v_int32 MemoryPool::getObjectsCount(){$/;"	f	class:oatpp::base::memory::MemoryPool	typeref:typename:v_int32
getObjectsCreated	../oatpp/src/oatpp/core/base/Environment.cpp	/^v_counter Environment::getObjectsCreated(){$/;"	f	class:oatpp::base::Environment	typeref:typename:v_counter
getOrder	../oatpp/src/oatpp/web/server/api/Endpoint.cpp	/^const std::list<oatpp::String>& Endpoint::Info::Params::getOrder() const {$/;"	f	class:oatpp::web::server::api::Endpoint::Info::Params	typeref:typename:const std::list<oatpp::String> &
getOutputStreamIOMode	../oatpp/src/oatpp/core/data/stream/ChunkedBuffer.cpp	/^IOMode ChunkedBuffer::getOutputStreamIOMode() {$/;"	f	class:oatpp::data::stream::ChunkedBuffer	typeref:typename:IOMode
getOutputStreamIOMode	../oatpp/src/oatpp/core/data/stream/Stream.hpp	/^  IOMode getOutputStreamIOMode() override {$/;"	f	class:oatpp::data::stream::CompoundIOStream	typeref:typename:IOMode
getOutputStreamIOMode	../oatpp/src/oatpp/core/data/stream/StreamBufferedProxy.cpp	/^oatpp::data::stream::IOMode OutputStreamBufferedProxy::getOutputStreamIOMode() {$/;"	f	class:oatpp::data::stream::OutputStreamBufferedProxy	typeref:typename:oatpp::data::stream::IOMode
getOutputStreamIOMode	../oatpp/src/oatpp/network/Connection.cpp	/^oatpp::data::stream::IOMode Connection::getOutputStreamIOMode() {$/;"	f	class:oatpp::network::Connection	typeref:typename:oatpp::data::stream::IOMode
getOutputStreamIOMode	../oatpp/src/oatpp/network/virtual_/Pipe.cpp	/^oatpp::data::stream::IOMode Pipe::Writer::getOutputStreamIOMode() {$/;"	f	class:oatpp::network::virtual_::Pipe::Writer	typeref:typename:oatpp::data::stream::IOMode
getOutputStreamIOMode	../oatpp/src/oatpp/network/virtual_/Socket.cpp	/^oatpp::data::stream::IOMode Socket::getOutputStreamIOMode() {$/;"	f	class:oatpp::network::virtual_::Socket	typeref:typename:oatpp::data::stream::IOMode
getParent	../oatpp/src/oatpp/core/async/Coroutine.cpp	/^AbstractCoroutine* AbstractCoroutine::getParent() const {$/;"	f	class:oatpp::async::AbstractCoroutine	typeref:typename:AbstractCoroutine *
getPath	../oatpp/src/oatpp/web/protocol/http/outgoing/Request.cpp	/^const oatpp::data::share::StringKeyLabel& Request::getPath() const {$/;"	f	class:oatpp::web::protocol::http::outgoing::Request	typeref:typename:const oatpp::data::share::StringKeyLabel &
getPathTail	../oatpp/src/oatpp/web/protocol/http/incoming/Request.cpp	/^oatpp::String Request::getPathTail() const {$/;"	f	class:oatpp::web::protocol::http::incoming::Request	typeref:typename:oatpp::String
getPathVariable	../oatpp/src/oatpp/web/protocol/http/incoming/Request.cpp	/^oatpp::String Request::getPathVariable(const oatpp::data::share::StringKeyLabel& name) const {$/;"	f	class:oatpp::web::protocol::http::incoming::Request	typeref:typename:oatpp::String
getPathVariables	../oatpp/src/oatpp/web/protocol/http/incoming/Request.cpp	/^const url::mapping::Pattern::MatchMap& Request::getPathVariables() const {$/;"	f	class:oatpp::web::protocol::http::incoming::Request	typeref:typename:const url::mapping::Pattern::MatchMap &
getPool	../oatpp/src/oatpp/core/base/memory/Allocator.hpp	/^  static oatpp::base::memory::MemoryPool& getPool(const AllocatorPoolInfo& info){$/;"	f	class:oatpp::base::memory::ThreadLocalPoolSharedObjectAllocator	typeref:typename:oatpp::base::memory::MemoryPool &
getPool	../oatpp/src/oatpp/core/base/memory/Allocator.hpp	/^  static oatpp::base::memory::ThreadDistributedMemoryPool& getPool(const AllocatorPoolInfo& info/;"	f	class:oatpp::base::memory::PoolSharedObjectAllocator	typeref:typename:oatpp::base::memory::ThreadDistributedMemoryPool &
getPort	../oatpp/src/oatpp/network/client/SimpleTCPConnectionProvider.hpp	/^  v_word16 getPort(){$/;"	f	class:oatpp::network::client::SimpleTCPConnectionProvider	typeref:typename:v_word16
getPort	../oatpp/src/oatpp/network/server/SimpleTCPConnectionProvider.hpp	/^  v_word16 getPort(){$/;"	f	class:oatpp::network::server::SimpleTCPConnectionProvider	typeref:typename:v_word16
getPosition	../oatpp/src/oatpp/core/parser/Caret.cpp	/^  v_int32 Caret::getPosition(){$/;"	f	class:oatpp::parser::Caret	typeref:typename:v_int32
getPosition	../oatpp/src/oatpp/core/parser/ParsingError.cpp	/^v_int32 ParsingError::getPosition() const {$/;"	f	class:oatpp::parser::ParsingError	typeref:typename:v_int32
getProcessor	../oatpp/src/oatpp/core/async/Executor.cpp	/^oatpp::async::Processor& Executor::SubmissionProcessor::getProcessor() {$/;"	f	class:oatpp::async::Executor::SubmissionProcessor	typeref:typename:oatpp::async::Processor &
getProperties	../oatpp/src/oatpp/network/ConnectionProvider.cpp	/^const std::unordered_map<oatpp::data::share::StringKeyLabelCI, oatpp::data::share::StringKeyLabe/;"	f	class:oatpp::network::ConnectionProvider	typeref:typename:const std::unordered_map<oatpp::data::share::StringKeyLabelCI,oatpp::data::share::StringKeyLabel> &
getProperty	../oatpp/src/oatpp/network/ConnectionProvider.cpp	/^oatpp::data::share::StringKeyLabel ConnectionProvider::getProperty(const oatpp::String& key) {$/;"	f	class:oatpp::network::ConnectionProvider	typeref:typename:oatpp::data::share::StringKeyLabel
getPtr	../oatpp/src/oatpp/core/data/mapping/type/Type.hpp	/^  std::shared_ptr<T> getPtr() const {$/;"	f	class:oatpp::data::mapping::type::PolymorphicWrapper	typeref:typename:std::shared_ptr<T>
getQueryParameter	../oatpp/src/oatpp/web/protocol/http/incoming/Request.cpp	/^oatpp::String Request::getQueryParameter(const oatpp::data::share::StringKeyLabel& name) const {$/;"	f	class:oatpp::web::protocol::http::incoming::Request	typeref:typename:oatpp::String
getQueryParameter	../oatpp/src/oatpp/web/protocol/http/incoming/Request.cpp	/^oatpp::String Request::getQueryParameter(const oatpp::data::share::StringKeyLabel& name, const o/;"	f	class:oatpp::web::protocol::http::incoming::Request	typeref:typename:oatpp::String
getQueryParameters	../oatpp/src/oatpp/web/protocol/http/incoming/Request.cpp	/^const http::QueryParams& Request::getQueryParameters() const {$/;"	f	class:oatpp::web::protocol::http::incoming::Request	typeref:typename:const http::QueryParams &
getRangeResponse	src/controller/MediaController.cpp	/^std::shared_ptr<MediaController::OutgoingResponse> MediaController::getRangeResponse(const oatpp/;"	f	class:MediaController	typeref:typename:std::shared_ptr<MediaController::OutgoingResponse>
getReadErrorCode	../oatpp/src/oatpp/web/client/RequestExecutor.cpp	/^v_int32 RequestExecutor::RequestExecutionError::getReadErrorCode() const {$/;"	f	class:oatpp::web::client::RequestExecutor::RequestExecutionError	typeref:typename:v_int32
getReader	../oatpp/src/oatpp/network/virtual_/Pipe.cpp	/^Pipe::Reader* Pipe::getReader() {$/;"	f	class:oatpp::network::virtual_::Pipe	typeref:typename:Pipe::Reader *
getRoute	../oatpp/src/oatpp/web/server/HttpRouter.cpp	/^HttpRouter::BranchRouter::Route HttpRouter::getRoute(const StringKeyLabel& method, const StringK/;"	f	class:oatpp::web::server::HttpRouter	typeref:typename:HttpRouter::BranchRouter::Route
getRoute	../oatpp/src/oatpp/web/url/mapping/Router.hpp	/^  Route getRoute(const StringKeyLabel& path){$/;"	f	class:oatpp::web::url::mapping::Router	typeref:typename:Route
getRouter	../oatpp/src/oatpp-test/web/ClientServerTestRunner.hpp	/^  std::shared_ptr<HttpRouter> getRouter() {$/;"	f	class:oatpp::test::web::ClientServerTestRunner	typeref:typename:std::shared_ptr<HttpRouter>
getSavedErrorCode	../oatpp/src/oatpp/core/parser/Caret.cpp	/^v_int32 Caret::StateSaveGuard::getSavedErrorCode() {$/;"	f	class:oatpp::parser::Caret::StateSaveGuard	typeref:typename:v_int32
getSavedErrorMessage	../oatpp/src/oatpp/core/parser/Caret.cpp	/^const char* Caret::StateSaveGuard::getSavedErrorMessage() {$/;"	f	class:oatpp::parser::Caret::StateSaveGuard	typeref:typename:const char *
getSavedPosition	../oatpp/src/oatpp/core/parser/Caret.cpp	/^v_int32 Caret::StateSaveGuard::getSavedPosition() {$/;"	f	class:oatpp::parser::Caret::StateSaveGuard	typeref:typename:v_int32
getSegemntPool	../oatpp/src/oatpp/core/data/stream/ChunkedBuffer.hpp	/^  static oatpp::base::memory::ThreadDistributedMemoryPool& getSegemntPool(){$/;"	f	class:oatpp::data::stream::ChunkedBuffer	typeref:typename:oatpp::base::memory::ThreadDistributedMemoryPool &
getServer	../oatpp/src/oatpp-test/web/ClientServerTestRunner.hpp	/^  std::shared_ptr<oatpp::network::server::Server> getServer() {$/;"	f	class:oatpp::test::web::ClientServerTestRunner	typeref:typename:std::shared_ptr<oatpp::network::server::Server>
getSize	../oatpp/src/oatpp/core/base/StrBuffer.cpp	/^v_int32 StrBuffer::getSize() const {$/;"	f	class:oatpp::base::StrBuffer	typeref:typename:v_int32
getSize	../oatpp/src/oatpp/core/base/memory/MemoryPool.cpp	/^v_int64 MemoryPool::getSize(){$/;"	f	class:oatpp::base::memory::MemoryPool	typeref:typename:v_int64
getSize	../oatpp/src/oatpp/core/data/buffer/IOBuffer.cpp	/^v_int32 IOBuffer::getSize(){$/;"	f	class:oatpp::data::buffer::IOBuffer	typeref:typename:v_int32
getSize	../oatpp/src/oatpp/core/data/share/MemoryLabel.hpp	/^  v_int32 getSize() const {$/;"	f	class:oatpp::data::share::MemoryLabel	typeref:typename:v_int32
getSize	../oatpp/src/oatpp/core/data/stream/ChunkedBuffer.cpp	/^data::v_io_size ChunkedBuffer::getSize(){$/;"	f	class:oatpp::data::stream::ChunkedBuffer	typeref:typename:data::v_io_size
getSize	../oatpp/src/oatpp/core/parser/Caret.cpp	/^  v_int32 Caret::Label::getSize(){$/;"	f	class:oatpp::parser::Caret::Label	typeref:typename:v_int32
getSmStringBaseSize	../oatpp/src/oatpp/core/base/StrBuffer.hpp	/^  static v_int32 getSmStringBaseSize() {$/;"	f	class:oatpp::base::StrBuffer	typeref:typename:v_int32
getSmStringSize	../oatpp/src/oatpp/core/base/StrBuffer.hpp	/^  static v_int32 getSmStringSize() {$/;"	f	class:oatpp::base::StrBuffer	typeref:typename:v_int32
getSmallStringPool	../oatpp/src/oatpp/core/base/StrBuffer.hpp	/^  static oatpp::base::memory::ThreadDistributedMemoryPool& getSmallStringPool() {$/;"	f	class:oatpp::base::StrBuffer	typeref:typename:oatpp::base::memory::ThreadDistributedMemoryPool &
getSocket	../oatpp/src/oatpp/network/virtual_/Interface.cpp	/^std::shared_ptr<Socket> Interface::ConnectionSubmission::getSocket() {$/;"	f	class:oatpp::network::virtual_::Interface::ConnectionSubmission	typeref:typename:std::shared_ptr<Socket>
getSocketNonBlocking	../oatpp/src/oatpp/network/virtual_/Interface.cpp	/^std::shared_ptr<Socket> Interface::ConnectionSubmission::getSocketNonBlocking() {$/;"	f	class:oatpp::network::virtual_::Interface::ConnectionSubmission	typeref:typename:std::shared_ptr<Socket>
getStartingLine	../oatpp/src/oatpp/web/protocol/http/incoming/Request.cpp	/^const http::RequestStartingLine& Request::getStartingLine() const {$/;"	f	class:oatpp::web::protocol::http::incoming::Request	typeref:typename:const http::RequestStartingLine &
getStaticFileResponse	src/controller/MediaController.cpp	/^std::shared_ptr<MediaController::OutgoingResponse> MediaController::getStaticFileResponse(const /;"	f	class:MediaController	typeref:typename:std::shared_ptr<MediaController::OutgoingResponse>
getStatus	../oatpp/src/oatpp/network/server/Server.cpp	/^v_int32 Server::getStatus(){$/;"	f	class:oatpp::network::server::Server	typeref:typename:v_int32
getStatus	../oatpp/src/oatpp/web/protocol/http/outgoing/Response.cpp	/^const Status& Response::getStatus() const {$/;"	f	class:oatpp::web::protocol::http::outgoing::Response	typeref:typename:const Status &
getStatusCode	../oatpp/src/oatpp/web/protocol/http/incoming/Response.cpp	/^v_int32 Response::getStatusCode() const {$/;"	f	class:oatpp::web::protocol::http::incoming::Response	typeref:typename:v_int32
getStatusDescription	../oatpp/src/oatpp/web/protocol/http/incoming/Response.cpp	/^oatpp::String Response::getStatusDescription() const {$/;"	f	class:oatpp::web::protocol::http::incoming::Response	typeref:typename:oatpp::String
getStreamIOMode	../oatpp/src/oatpp/network/Connection.cpp	/^oatpp::data::stream::IOMode Connection::getStreamIOMode() {$/;"	f	class:oatpp::network::Connection	typeref:typename:oatpp::data::stream::IOMode
getSubstring	../oatpp/src/oatpp/core/data/stream/ChunkedBuffer.cpp	/^oatpp::String ChunkedBuffer::getSubstring(data::v_io_size pos,$/;"	f	class:oatpp::data::stream::ChunkedBuffer	typeref:typename:oatpp::String
getTail	../oatpp/src/oatpp/web/url/mapping/Pattern.hpp	/^    oatpp::String getTail() const {$/;"	f	class:oatpp::web::url::mapping::Pattern::MatchMap	typeref:typename:oatpp::String
getTasksCount	../oatpp/src/oatpp/core/async/Executor.cpp	/^v_int32 Executor::getTasksCount() {$/;"	f	class:oatpp::async::Executor	typeref:typename:v_int32
getTasksCount	../oatpp/src/oatpp/core/async/Processor.cpp	/^v_int32 Processor::getTasksCount() {$/;"	f	class:oatpp::async::Processor	typeref:typename:v_int32
getThreadLocalObjectsCount	../oatpp/src/oatpp/core/base/Environment.cpp	/^v_counter Environment::getThreadLocalObjectsCount(){$/;"	f	class:oatpp::base::Environment	typeref:typename:v_counter
getThreadLocalObjectsCreated	../oatpp/src/oatpp/core/base/Environment.cpp	/^v_counter Environment::getThreadLocalObjectsCreated(){$/;"	f	class:oatpp::base::Environment	typeref:typename:v_counter
getTimePointMicroseconds	../oatpp/src/oatpp/core/async/Coroutine.cpp	/^v_int64 Action::getTimePointMicroseconds() const {$/;"	f	class:oatpp::async::Action	typeref:typename:v_int64
getType	../oatpp/src/oatpp/core/async/Coroutine.cpp	/^v_int32 Action::getType() const {$/;"	f	class:oatpp::async::Action	typeref:typename:v_int32
getType	../oatpp/src/oatpp/core/async/worker/Worker.cpp	/^Worker::Type Worker::getType() {$/;"	f	class:oatpp::async::worker::Worker	typeref:typename:Worker::Type
getType	../oatpp/src/oatpp/core/data/mapping/type/List.hpp	/^    static Type* getType(){$/;"	f	class:oatpp::data::mapping::type::__class::List	typeref:typename:Type *
getType	../oatpp/src/oatpp/core/data/mapping/type/ListMap.hpp	/^    static Type* getType(){$/;"	f	class:oatpp::data::mapping::type::__class::ListMap	typeref:typename:Type *
getType	../oatpp/src/oatpp/core/data/mapping/type/Object.hpp	/^    static Type* getType(){$/;"	f	class:oatpp::data::mapping::type::__class::Object	typeref:typename:Type *
getType	../oatpp/src/oatpp/core/data/mapping/type/Primitive.hpp	/^    static Type* getType(){$/;"	f	class:oatpp::data::mapping::type::__class::Boolean	typeref:typename:Type *
getType	../oatpp/src/oatpp/core/data/mapping/type/Primitive.hpp	/^    static Type* getType(){$/;"	f	class:oatpp::data::mapping::type::__class::Float32	typeref:typename:Type *
getType	../oatpp/src/oatpp/core/data/mapping/type/Primitive.hpp	/^    static Type* getType(){$/;"	f	class:oatpp::data::mapping::type::__class::Float64	typeref:typename:Type *
getType	../oatpp/src/oatpp/core/data/mapping/type/Primitive.hpp	/^    static Type* getType(){$/;"	f	class:oatpp::data::mapping::type::__class::Int16	typeref:typename:Type *
getType	../oatpp/src/oatpp/core/data/mapping/type/Primitive.hpp	/^    static Type* getType(){$/;"	f	class:oatpp::data::mapping::type::__class::Int32	typeref:typename:Type *
getType	../oatpp/src/oatpp/core/data/mapping/type/Primitive.hpp	/^    static Type* getType(){$/;"	f	class:oatpp::data::mapping::type::__class::Int64	typeref:typename:Type *
getType	../oatpp/src/oatpp/core/data/mapping/type/Primitive.hpp	/^    static Type* getType(){$/;"	f	class:oatpp::data::mapping::type::__class::Int8	typeref:typename:Type *
getType	../oatpp/src/oatpp/core/data/mapping/type/Primitive.hpp	/^    static Type* getType(){$/;"	f	class:oatpp::data::mapping::type::__class::String	typeref:typename:Type *
getType	../oatpp/src/oatpp/core/data/mapping/type/Type.cpp	/^  Type* Void::getType(){$/;"	f	class:oatpp::data::mapping::type::__class::Void	typeref:typename:Type *
getUtf8CharSequenceLength	../oatpp/src/oatpp/encoding/Unicode.cpp	/^v_int32 Unicode::getUtf8CharSequenceLength(v_char8 firstByte) {$/;"	f	class:oatpp::encoding::Unicode	typeref:typename:v_int32
getUtf8CharSequenceLengthForCode	../oatpp/src/oatpp/encoding/Unicode.cpp	/^v_int32 Unicode::getUtf8CharSequenceLengthForCode(v_word32 code){$/;"	f	class:oatpp::encoding::Unicode	typeref:typename:v_int32
getValue	../oatpp/src/oatpp/core/collection/ListMap.hpp	/^    const V& getValue() const{$/;"	f	class:oatpp::collection::ListMap::Entry	typeref:typename:const V &
getValue	../oatpp/src/oatpp/core/data/mapping/type/Primitive.hpp	/^  ValueType getValue() {$/;"	f	class:oatpp::data::mapping::type::Primitive	typeref:typename:ValueType
getVariable	../oatpp/src/oatpp/web/url/mapping/Pattern.hpp	/^    oatpp::String getVariable(const StringKeyLabel& key) const {$/;"	f	class:oatpp::web::url::mapping::Pattern::MatchMap	typeref:typename:oatpp::String
getWriter	../oatpp/src/oatpp/network/virtual_/Pipe.cpp	/^Pipe::Writer* Pipe::getWriter() {$/;"	f	class:oatpp::network::virtual_::Pipe	typeref:typename:Pipe::Writer *
glanzzzo_web_client_Client_hpp	../oatpp/src/oatpp/web/client/ApiClient.hpp	/^#define glanzzzo_web_client_Client_hpp$/;"	d
grow	../oatpp/src/oatpp/core/base/memory/MemoryPool.hpp	/^  void grow(){$/;"	f	class:oatpp::base::memory::Bench	typeref:typename:void
guessMimeType	src/Utils.cpp	/^oatpp::String StaticFilesManager::guessMimeType(const oatpp::String& filename) {$/;"	f	class:StaticFilesManager	typeref:typename:oatpp::String
handle	../oatpp/src/oatpp/web/server/HttpRequestHandler.hpp	/^  virtual std::shared_ptr<OutgoingResponse> handle(const std::shared_ptr<IncomingRequest>& reque/;"	f	class:oatpp::web::server::HttpRequestHandler	typeref:typename:std::shared_ptr<OutgoingResponse>
handle	../oatpp/src/oatpp/web/server/api/ApiController.hpp	/^    std::shared_ptr<OutgoingResponse> handle(const std::shared_ptr<protocol::http::incoming::Req/;"	f	class:oatpp::web::server::api::ApiController::Handler	typeref:typename:std::shared_ptr<OutgoingResponse>
handleAsync	../oatpp/src/oatpp/web/server/HttpRequestHandler.hpp	/^  handleAsync(const std::shared_ptr<IncomingRequest>& request) {$/;"	f	class:oatpp::web::server::HttpRequestHandler	typeref:typename:oatpp::async::CoroutineStarterForResult<const std::shared_ptr<OutgoingResponse> &>
handleAsync	../oatpp/src/oatpp/web/server/api/ApiController.hpp	/^    handleAsync(const std::shared_ptr<protocol::http::incoming::Request>& request) override {$/;"	f	class:oatpp::web::server::api::ApiController::Handler	typeref:typename:oatpp::async::CoroutineStarterForResult<const std::shared_ptr<OutgoingResponse> &>
handleConnection	../oatpp/src/oatpp/web/server/AsyncHttpConnectionHandler.cpp	/^void AsyncHttpConnectionHandler::handleConnection(const std::shared_ptr<IOStream>& connection,$/;"	f	class:oatpp::web::server::AsyncHttpConnectionHandler	typeref:typename:void
handleConnection	../oatpp/src/oatpp/web/server/HttpConnectionHandler.cpp	/^void HttpConnectionHandler::handleConnection(const std::shared_ptr<oatpp::data::stream::IOStream/;"	f	class:oatpp::web::server::HttpConnectionHandler	typeref:typename:void
handleError	../oatpp/src/oatpp/core/async/Coroutine.cpp	/^Action AbstractCoroutine::handleError(const std::shared_ptr<const Error>& error) {$/;"	f	class:oatpp::async::AbstractCoroutine	typeref:typename:Action
handleError	../oatpp/src/oatpp/core/data/stream/Stream.cpp	/^    Action handleError(const std::shared_ptr<const Error>& error) override {$/;"	f	class:oatpp::data::stream::transferAsync::TransferCoroutine	typeref:typename:Action	file:
handleError	../oatpp/src/oatpp/web/server/HttpProcessor.cpp	/^HttpProcessor::Coroutine::Action HttpProcessor::Coroutine::handleError(const std::shared_ptr<con/;"	f	class:oatpp::web::server::HttpProcessor::Coroutine	typeref:typename:HttpProcessor::Coroutine::Action
handleError	../oatpp/src/oatpp/web/server/api/ApiController.cpp	/^std::shared_ptr<ApiController::OutgoingResponse> ApiController::handleError(const Status& status/;"	f	class:oatpp::web::server::api::ApiController	typeref:typename:std::shared_ptr<ApiController::OutgoingResponse>
handleError	../oatpp/src/oatpp/web/server/handler/ErrorHandler.cpp	/^DefaultErrorHandler::handleError(const protocol::http::Status& status, const oatpp::String& mess/;"	f	class:oatpp::web::server::handler::DefaultErrorHandler	typeref:typename:std::shared_ptr<protocol::http::outgoing::Response>
handleError	../oatpp/test/oatpp/web/FullAsyncClientTest.cpp	/^  Action handleError(const std::shared_ptr<const Error>& error) override {$/;"	f	class:oatpp::test::web::__anonb368a9f30110::ClientCoroutine_echoBodyAsync	typeref:typename:Action	file:
handleError	../oatpp/test/oatpp/web/FullAsyncClientTest.cpp	/^  Action handleError(const std::shared_ptr<const Error>& error) override {$/;"	f	class:oatpp::test::web::__anonb368a9f30110::ClientCoroutine_getRootAsync	typeref:typename:Action	file:
handler	../oatpp/src/oatpp/web/server/api/Endpoint.hpp	/^  const std::shared_ptr<RequestHandler> handler;$/;"	m	class:oatpp::web::server::api::Endpoint	typeref:typename:const std::shared_ptr<RequestHandler>
handler	../oatpp/src/oatpp/web/server/handler/ErrorHandler.cpp	/^namespace oatpp { namespace web { namespace server { namespace handler {$/;"	n	namespace:oatpp::web::server	file:
handler	../oatpp/src/oatpp/web/server/handler/ErrorHandler.hpp	/^namespace oatpp { namespace web { namespace server { namespace handler {$/;"	n	namespace:oatpp::web::server
handler	../oatpp/src/oatpp/web/server/handler/Interceptor.hpp	/^namespace oatpp { namespace web { namespace server { namespace handler {$/;"	n	namespace:oatpp::web::server
hasArgument	../oatpp/src/oatpp/core/base/CommandLineArguments.cpp	/^bool CommandLineArguments::Parser::hasArgument(int argc, const char * argv[], const char* argNam/;"	f	class:oatpp::base::CommandLineArguments::Parser	typeref:typename:bool
hasArgument	../oatpp/src/oatpp/core/base/CommandLineArguments.hpp	/^  bool hasArgument(const char* argName) const {$/;"	f	class:oatpp::base::CommandLineArguments	typeref:typename:bool
hasError	../oatpp/src/oatpp/core/parser/Caret.cpp	/^  bool Caret::hasError() {$/;"	f	class:oatpp::parser::Caret	typeref:typename:bool
hasOwnData	../oatpp/src/oatpp/core/base/StrBuffer.cpp	/^bool StrBuffer::hasOwnData() const {$/;"	f	class:oatpp::base::StrBuffer	typeref:typename:bool
hash	../oatpp/src/oatpp/core/data/mapping/type/Primitive.hpp	/^  struct hash<oatpp::data::mapping::type::String> {$/;"	s	namespace:std
hash	../oatpp/src/oatpp/core/data/share/MemoryLabel.hpp	/^  struct hash<oatpp::data::share::StringKeyLabel> {$/;"	s	namespace:std
hash	../oatpp/src/oatpp/core/data/share/MemoryLabel.hpp	/^  struct hash<oatpp::data::share::StringKeyLabelCI> {$/;"	s	namespace:std
hash	../oatpp/src/oatpp/core/data/share/MemoryLabel.hpp	/^  struct hash<oatpp::data::share::StringKeyLabelCI_FAST> {$/;"	s	namespace:std
hash	../oatpp/src/oatpp/web/protocol/http/Http.hpp	/^  struct hash<oatpp::web::protocol::http::Status> {$/;"	s	namespace:std
headerEqualsCI_FAST	../oatpp/src/oatpp/web/protocol/http/outgoing/CommunicationUtils.cpp	/^bool CommunicationUtils::headerEqualsCI_FAST(const oatpp::data::share::MemoryLabel& headerValue,/;"	f	class:oatpp::web::protocol::http::outgoing::CommunicationUtils	typeref:typename:bool
headers	../oatpp/src/oatpp/web/protocol/http/incoming/RequestHeadersReader.hpp	/^    http::Headers headers;$/;"	m	struct:oatpp::web::protocol::http::incoming::RequestHeadersReader::Result	typeref:typename:http::Headers
headers	../oatpp/src/oatpp/web/protocol/http/incoming/ResponseHeadersReader.hpp	/^    http::Headers headers;$/;"	m	struct:oatpp::web::protocol::http::incoming::ResponseHeadersReader::Result	typeref:typename:http::Headers
headers	../oatpp/src/oatpp/web/server/api/Endpoint.hpp	/^    Params headers;$/;"	m	class:oatpp::web::server::api::Endpoint::Info	typeref:typename:Params
help	../oatpp/build/Makefile	/^help:$/;"	t
help	../oatpp/build/src/Makefile	/^help:$/;"	t
help	../oatpp/build/test/Makefile	/^help:$/;"	t
host	../oatpp/src/oatpp/network/Url.hpp	/^    oatpp::String host;$/;"	m	struct:oatpp::network::Url::Authority	typeref:typename:oatpp::String
http	../oatpp/src/oatpp/web/protocol/http/Http.cpp	/^namespace oatpp { namespace web { namespace protocol { namespace http {$/;"	n	namespace:oatpp::web::protocol	file:
http	../oatpp/src/oatpp/web/protocol/http/Http.hpp	/^namespace oatpp { namespace web { namespace protocol { namespace http {$/;"	n	namespace:oatpp::web::protocol
http	../oatpp/src/oatpp/web/protocol/http/incoming/BodyDecoder.cpp	/^namespace oatpp { namespace web { namespace protocol { namespace http { namespace incoming {$/;"	n	namespace:oatpp::web::protocol	file:
http	../oatpp/src/oatpp/web/protocol/http/incoming/BodyDecoder.hpp	/^namespace oatpp { namespace web { namespace protocol { namespace http { namespace incoming {$/;"	n	namespace:oatpp::web::protocol
http	../oatpp/src/oatpp/web/protocol/http/incoming/Request.cpp	/^namespace oatpp { namespace web { namespace protocol { namespace http { namespace incoming {$/;"	n	namespace:oatpp::web::protocol	file:
http	../oatpp/src/oatpp/web/protocol/http/incoming/Request.hpp	/^namespace oatpp { namespace web { namespace protocol { namespace http { namespace incoming {$/;"	n	namespace:oatpp::web::protocol
http	../oatpp/src/oatpp/web/protocol/http/incoming/RequestHeadersReader.cpp	/^namespace oatpp { namespace web { namespace protocol { namespace http { namespace incoming {$/;"	n	namespace:oatpp::web::protocol	file:
http	../oatpp/src/oatpp/web/protocol/http/incoming/RequestHeadersReader.hpp	/^namespace oatpp { namespace web { namespace protocol { namespace http { namespace incoming {$/;"	n	namespace:oatpp::web::protocol
http	../oatpp/src/oatpp/web/protocol/http/incoming/Response.cpp	/^namespace oatpp { namespace web { namespace protocol { namespace http { namespace incoming {$/;"	n	namespace:oatpp::web::protocol	file:
http	../oatpp/src/oatpp/web/protocol/http/incoming/Response.hpp	/^namespace oatpp { namespace web { namespace protocol { namespace http { namespace incoming {$/;"	n	namespace:oatpp::web::protocol
http	../oatpp/src/oatpp/web/protocol/http/incoming/ResponseHeadersReader.cpp	/^namespace oatpp { namespace web { namespace protocol { namespace http { namespace incoming {$/;"	n	namespace:oatpp::web::protocol	file:
http	../oatpp/src/oatpp/web/protocol/http/incoming/ResponseHeadersReader.hpp	/^namespace oatpp { namespace web { namespace protocol { namespace http { namespace incoming {$/;"	n	namespace:oatpp::web::protocol
http	../oatpp/src/oatpp/web/protocol/http/incoming/SimpleBodyDecoder.cpp	/^namespace oatpp { namespace web { namespace protocol { namespace http { namespace incoming {$/;"	n	namespace:oatpp::web::protocol	file:
http	../oatpp/src/oatpp/web/protocol/http/incoming/SimpleBodyDecoder.hpp	/^namespace oatpp { namespace web { namespace protocol { namespace http { namespace incoming {$/;"	n	namespace:oatpp::web::protocol
http	../oatpp/src/oatpp/web/protocol/http/outgoing/Body.hpp	/^namespace oatpp { namespace web { namespace protocol { namespace http { namespace outgoing {$/;"	n	namespace:oatpp::web::protocol
http	../oatpp/src/oatpp/web/protocol/http/outgoing/BufferBody.cpp	/^namespace oatpp { namespace web { namespace protocol { namespace http { namespace outgoing {$/;"	n	namespace:oatpp::web::protocol	file:
http	../oatpp/src/oatpp/web/protocol/http/outgoing/BufferBody.hpp	/^namespace oatpp { namespace web { namespace protocol { namespace http { namespace outgoing {$/;"	n	namespace:oatpp::web::protocol
http	../oatpp/src/oatpp/web/protocol/http/outgoing/ChunkedBufferBody.cpp	/^namespace oatpp { namespace web { namespace protocol { namespace http { namespace outgoing {$/;"	n	namespace:oatpp::web::protocol	file:
http	../oatpp/src/oatpp/web/protocol/http/outgoing/ChunkedBufferBody.hpp	/^namespace oatpp { namespace web { namespace protocol { namespace http { namespace outgoing {$/;"	n	namespace:oatpp::web::protocol
http	../oatpp/src/oatpp/web/protocol/http/outgoing/CommunicationUtils.cpp	/^namespace oatpp { namespace web { namespace protocol { namespace http { namespace outgoing {$/;"	n	namespace:oatpp::web::protocol	file:
http	../oatpp/src/oatpp/web/protocol/http/outgoing/CommunicationUtils.hpp	/^namespace oatpp { namespace web { namespace protocol { namespace http { namespace outgoing {$/;"	n	namespace:oatpp::web::protocol
http	../oatpp/src/oatpp/web/protocol/http/outgoing/DtoBody.cpp	/^namespace oatpp { namespace web { namespace protocol { namespace http { namespace outgoing {$/;"	n	namespace:oatpp::web::protocol	file:
http	../oatpp/src/oatpp/web/protocol/http/outgoing/DtoBody.hpp	/^namespace oatpp { namespace web { namespace protocol { namespace http { namespace outgoing {$/;"	n	namespace:oatpp::web::protocol
http	../oatpp/src/oatpp/web/protocol/http/outgoing/Request.cpp	/^namespace oatpp { namespace web { namespace protocol { namespace http { namespace outgoing {$/;"	n	namespace:oatpp::web::protocol	file:
http	../oatpp/src/oatpp/web/protocol/http/outgoing/Request.hpp	/^namespace oatpp { namespace web { namespace protocol { namespace http { namespace outgoing {$/;"	n	namespace:oatpp::web::protocol
http	../oatpp/src/oatpp/web/protocol/http/outgoing/Response.cpp	/^namespace oatpp { namespace web { namespace protocol { namespace http { namespace outgoing {$/;"	n	namespace:oatpp::web::protocol	file:
http	../oatpp/src/oatpp/web/protocol/http/outgoing/Response.hpp	/^namespace oatpp { namespace web { namespace protocol { namespace http { namespace outgoing {$/;"	n	namespace:oatpp::web::protocol
http	../oatpp/src/oatpp/web/protocol/http/outgoing/ResponseFactory.cpp	/^namespace oatpp { namespace web { namespace protocol { namespace http { namespace outgoing {$/;"	n	namespace:oatpp::web::protocol	file:
http	../oatpp/src/oatpp/web/protocol/http/outgoing/ResponseFactory.hpp	/^namespace oatpp { namespace web { namespace protocol { namespace http { namespace outgoing {$/;"	n	namespace:oatpp::web::protocol
http_content_type	../oatpp/src/oatpp/core/data/mapping/ObjectMapper.hpp	/^    const char* const http_content_type;$/;"	m	class:oatpp::data::mapping::ObjectMapper::Info	typeref:typename:const char * const
inStream	../oatpp/src/oatpp/web/server/HttpProcessor.hpp	/^    std::shared_ptr<oatpp::data::stream::InputStreamBufferedProxy> inStream;$/;"	m	class:oatpp::web::server::HttpProcessor::ConnectionState	typeref:typename:std::shared_ptr<oatpp::data::stream::InputStreamBufferedProxy>
inc	../oatpp/src/oatpp/core/parser/Caret.cpp	/^  void Caret::inc(){$/;"	f	class:oatpp::parser::Caret	typeref:typename:void
inc	../oatpp/src/oatpp/core/parser/Caret.cpp	/^  void Caret::inc(v_int32 amount){$/;"	f	class:oatpp::parser::Caret	typeref:typename:void
incObjects	../oatpp/src/oatpp/core/base/Environment.cpp	/^void Environment::incObjects(){$/;"	f	class:oatpp::base::Environment	typeref:typename:void
includeNullFields	../oatpp/src/oatpp/parser/json/mapping/Serializer.hpp	/^    bool includeNullFields = true;$/;"	m	class:oatpp::parser::json::mapping::Serializer::Config	typeref:typename:bool
incoming	../oatpp/src/oatpp/web/protocol/http/incoming/BodyDecoder.cpp	/^namespace oatpp { namespace web { namespace protocol { namespace http { namespace incoming {$/;"	n	namespace:oatpp::web::protocol::http	file:
incoming	../oatpp/src/oatpp/web/protocol/http/incoming/BodyDecoder.hpp	/^namespace oatpp { namespace web { namespace protocol { namespace http { namespace incoming {$/;"	n	namespace:oatpp::web::protocol::http
incoming	../oatpp/src/oatpp/web/protocol/http/incoming/Request.cpp	/^namespace oatpp { namespace web { namespace protocol { namespace http { namespace incoming {$/;"	n	namespace:oatpp::web::protocol::http	file:
incoming	../oatpp/src/oatpp/web/protocol/http/incoming/Request.hpp	/^namespace oatpp { namespace web { namespace protocol { namespace http { namespace incoming {$/;"	n	namespace:oatpp::web::protocol::http
incoming	../oatpp/src/oatpp/web/protocol/http/incoming/RequestHeadersReader.cpp	/^namespace oatpp { namespace web { namespace protocol { namespace http { namespace incoming {$/;"	n	namespace:oatpp::web::protocol::http	file:
incoming	../oatpp/src/oatpp/web/protocol/http/incoming/RequestHeadersReader.hpp	/^namespace oatpp { namespace web { namespace protocol { namespace http { namespace incoming {$/;"	n	namespace:oatpp::web::protocol::http
incoming	../oatpp/src/oatpp/web/protocol/http/incoming/Response.cpp	/^namespace oatpp { namespace web { namespace protocol { namespace http { namespace incoming {$/;"	n	namespace:oatpp::web::protocol::http	file:
incoming	../oatpp/src/oatpp/web/protocol/http/incoming/Response.hpp	/^namespace oatpp { namespace web { namespace protocol { namespace http { namespace incoming {$/;"	n	namespace:oatpp::web::protocol::http
incoming	../oatpp/src/oatpp/web/protocol/http/incoming/ResponseHeadersReader.cpp	/^namespace oatpp { namespace web { namespace protocol { namespace http { namespace incoming {$/;"	n	namespace:oatpp::web::protocol::http	file:
incoming	../oatpp/src/oatpp/web/protocol/http/incoming/ResponseHeadersReader.hpp	/^namespace oatpp { namespace web { namespace protocol { namespace http { namespace incoming {$/;"	n	namespace:oatpp::web::protocol::http
incoming	../oatpp/src/oatpp/web/protocol/http/incoming/SimpleBodyDecoder.cpp	/^namespace oatpp { namespace web { namespace protocol { namespace http { namespace incoming {$/;"	n	namespace:oatpp::web::protocol::http	file:
incoming	../oatpp/src/oatpp/web/protocol/http/incoming/SimpleBodyDecoder.hpp	/^namespace oatpp { namespace web { namespace protocol { namespace http { namespace incoming {$/;"	n	namespace:oatpp::web::protocol::http
info	../oatpp/src/oatpp/web/server/api/Endpoint.hpp	/^  const std::shared_ptr<Info> info;$/;"	m	class:oatpp::web::server::api::Endpoint	typeref:typename:const std::shared_ptr<Info>
info_arch	../oatpp/build/CMakeFiles/3.14.5/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";$/;"	v	typeref:typename:char const *
info_compiler	../oatpp/build/CMakeFiles/3.14.5/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";$/;"	v	typeref:typename:char const *
info_cray	../oatpp/build/CMakeFiles/3.14.5/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const *info_cray = "INFO" ":" "compiler_wrapper[CrayPrgEnv]";$/;"	v	typeref:typename:char const *
info_language_dialect_default	../oatpp/build/CMakeFiles/3.14.5/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^const char* info_language_dialect_default = "INFO" ":" "dialect_default["$/;"	v	typeref:typename:const char *
info_platform	../oatpp/build/CMakeFiles/3.14.5/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";$/;"	v	typeref:typename:char const *
info_simulate	../oatpp/build/CMakeFiles/3.14.5/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* info_simulate = "INFO" ":" "simulate[" SIMULATE_ID "]";$/;"	v	typeref:typename:char const *
info_simulate_version	../oatpp/build/CMakeFiles/3.14.5/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const info_simulate_version[] = {$/;"	v	typeref:typename:char const[]
info_version	../oatpp/build/CMakeFiles/3.14.5/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const info_version[] = {$/;"	v	typeref:typename:char const[]
info_version_internal	../oatpp/build/CMakeFiles/3.14.5/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const info_version_internal[] = {$/;"	v	typeref:typename:char const[]
init	../oatpp/src/oatpp/core/base/Environment.cpp	/^void Environment::init() {$/;"	f	class:oatpp::base::Environment	typeref:typename:void
init	../oatpp/src/oatpp/core/base/Environment.cpp	/^void Environment::init(const std::shared_ptr<Logger>& logger) {$/;"	f	class:oatpp::base::Environment	typeref:typename:void
initEventQueue	../oatpp/src/oatpp/core/async/worker/IOEventWorker_epoll.cpp	/^void IOEventWorker::initEventQueue() {$/;"	f	class:oatpp::async::worker::IOEventWorker	typeref:typename:void
initEventQueue	../oatpp/src/oatpp/core/async/worker/IOEventWorker_kqueue.cpp	/^void IOEventWorker::initEventQueue() {$/;"	f	class:oatpp::async::worker::IOEventWorker	typeref:typename:void
insertAfterNode	../oatpp/src/oatpp/core/collection/LinkedList.hpp	/^  void insertAfterNode(const T& data, LinkedListNode* currentNode){$/;"	f	class:oatpp::collection::LinkedList	typeref:typename:void
install	../oatpp/build/Makefile	/^install: preinstall$/;"	t
install	../oatpp/build/src/Makefile	/^install: preinstall$/;"	t
install	../oatpp/build/test/Makefile	/^install: preinstall$/;"	t
install/fast	../oatpp/build/Makefile	/^install\/fast: preinstall\/fast$/;"	t
install/fast	../oatpp/build/src/Makefile	/^install\/fast: preinstall\/fast$/;"	t
install/fast	../oatpp/build/test/Makefile	/^install\/fast: preinstall\/fast$/;"	t
install/local	../oatpp/build/Makefile	/^install\/local: preinstall$/;"	t
install/local	../oatpp/build/src/Makefile	/^install\/local: preinstall$/;"	t
install/local	../oatpp/build/test/Makefile	/^install\/local: preinstall$/;"	t
install/local/fast	../oatpp/build/Makefile	/^install\/local\/fast: preinstall\/fast$/;"	t
install/local/fast	../oatpp/build/src/Makefile	/^install\/local\/fast: preinstall\/fast$/;"	t
install/local/fast	../oatpp/build/test/Makefile	/^install\/local\/fast: preinstall\/fast$/;"	t
install/strip	../oatpp/build/Makefile	/^install\/strip: preinstall$/;"	t
install/strip	../oatpp/build/src/Makefile	/^install\/strip: preinstall$/;"	t
install/strip	../oatpp/build/test/Makefile	/^install\/strip: preinstall$/;"	t
install/strip/fast	../oatpp/build/Makefile	/^install\/strip\/fast: preinstall\/fast$/;"	t
install/strip/fast	../oatpp/build/src/Makefile	/^install\/strip\/fast: preinstall\/fast$/;"	t
install/strip/fast	../oatpp/build/test/Makefile	/^install\/strip\/fast: preinstall\/fast$/;"	t
instantiateServer	../oatpp/src/oatpp/network/server/SimpleTCPConnectionProvider.cpp	/^oatpp::data::v_io_handle SimpleTCPConnectionProvider::instantiateServer(){$/;"	f	class:oatpp::network::server::SimpleTCPConnectionProvider	typeref:typename:oatpp::data::v_io_handle
int32ToCharSequence	../oatpp/src/oatpp/core/utils/ConversionUtils.cpp	/^  v_int32 int32ToCharSequence(v_int32 value, p_char8 data){$/;"	f	namespace:oatpp::utils::conversion	typeref:typename:v_int32
int32ToStdStr	../oatpp/src/oatpp/core/utils/ConversionUtils.cpp	/^  std::string int32ToStdStr(v_int32 value){$/;"	f	namespace:oatpp::utils::conversion	typeref:typename:std::string
int32ToStr	../oatpp/src/oatpp/core/utils/ConversionUtils.cpp	/^  oatpp::String int32ToStr(v_int32 value){$/;"	f	namespace:oatpp::utils::conversion	typeref:typename:oatpp::String
int64ToCharSequence	../oatpp/src/oatpp/core/utils/ConversionUtils.cpp	/^  v_int32 int64ToCharSequence(v_int64 value, p_char8 data){$/;"	f	namespace:oatpp::utils::conversion	typeref:typename:v_int32
int64ToStdStr	../oatpp/src/oatpp/core/utils/ConversionUtils.cpp	/^  std::string int64ToStdStr(v_int64 value){$/;"	f	namespace:oatpp::utils::conversion	typeref:typename:std::string
int64ToStr	../oatpp/src/oatpp/core/utils/ConversionUtils.cpp	/^  oatpp::String int64ToStr(v_int64 value){$/;"	f	namespace:oatpp::utils::conversion	typeref:typename:oatpp::String
ioBuffer	../oatpp/src/oatpp/web/server/HttpProcessor.hpp	/^    std::shared_ptr<oatpp::data::buffer::IOBuffer> ioBuffer;$/;"	m	class:oatpp::web::server::HttpProcessor::ConnectionState	typeref:typename:std::shared_ptr<oatpp::data::buffer::IOBuffer>
ioData	../oatpp/src/oatpp/core/async/Coroutine.hpp	/^    IOData ioData;$/;"	m	union:oatpp::async::Action::Data	typeref:typename:IOData
ioEventType	../oatpp/src/oatpp/core/async/Coroutine.hpp	/^    IOEventType ioEventType;$/;"	m	struct:oatpp::async::Action::IOData	typeref:typename:IOEventType
ioHandle	../oatpp/src/oatpp/core/async/Coroutine.hpp	/^    oatpp::data::v_io_handle ioHandle;$/;"	m	struct:oatpp::async::Action::IOData	typeref:typename:oatpp::data::v_io_handle
ioRepeat	../oatpp/src/oatpp/core/async/Coroutine.hpp	/^  Action ioRepeat(data::v_io_handle ioHandle, Action::IOEventType ioEventType) const {$/;"	f	class:oatpp::async::Coroutine	typeref:typename:Action
ioRepeat	../oatpp/src/oatpp/core/async/Coroutine.hpp	/^  Action ioRepeat(data::v_io_handle ioHandle, Action::IOEventType ioEventType) const {$/;"	f	class:oatpp::async::CoroutineWithResult	typeref:typename:Action
ioStatus	../oatpp/src/oatpp/web/protocol/CommunicationError.hpp	/^  oatpp::data::v_io_size ioStatus;$/;"	m	struct:oatpp::web::protocol::ProtocolErrorInfo	typeref:typename:oatpp::data::v_io_size
ioWait	../oatpp/src/oatpp/core/async/Coroutine.hpp	/^  Action ioWait(data::v_io_handle ioHandle, Action::IOEventType ioEventType) const {$/;"	f	class:oatpp::async::Coroutine	typeref:typename:Action
ioWait	../oatpp/src/oatpp/core/async/Coroutine.hpp	/^  Action ioWait(data::v_io_handle ioHandle, Action::IOEventType ioEventType) const {$/;"	f	class:oatpp::async::CoroutineWithResult	typeref:typename:Action
is	../oatpp/src/oatpp/core/async/Error.hpp	/^  bool is() const {$/;"	f	class:oatpp::async::Error	typeref:typename:bool
isAtBlankChar	../oatpp/src/oatpp/core/parser/Caret.cpp	/^  bool Caret::isAtBlankChar() const{$/;"	f	class:oatpp::parser::Caret	typeref:typename:bool
isAtChar	../oatpp/src/oatpp/core/parser/Caret.cpp	/^  bool Caret::isAtChar(v_char8 c) const{$/;"	f	class:oatpp::parser::Caret	typeref:typename:bool
isAtCharFromSet	../oatpp/src/oatpp/core/parser/Caret.cpp	/^  bool Caret::isAtCharFromSet(const char* set) const{$/;"	f	class:oatpp::parser::Caret	typeref:typename:bool
isAtCharFromSet	../oatpp/src/oatpp/core/parser/Caret.cpp	/^  bool Caret::isAtCharFromSet(p_char8 set, v_int32 setSize) const{$/;"	f	class:oatpp::parser::Caret	typeref:typename:bool
isAtDigitChar	../oatpp/src/oatpp/core/parser/Caret.cpp	/^  bool Caret::isAtDigitChar() const{$/;"	f	class:oatpp::parser::Caret	typeref:typename:bool
isAtRN	../oatpp/src/oatpp/core/parser/Caret.cpp	/^  bool Caret::isAtRN() {$/;"	f	class:oatpp::parser::Caret	typeref:typename:bool
isAtText	../oatpp/src/oatpp/core/parser/Caret.cpp	/^  bool Caret::isAtText(const char* text, bool skipIfTrue){$/;"	f	class:oatpp::parser::Caret	typeref:typename:bool
isAtText	../oatpp/src/oatpp/core/parser/Caret.cpp	/^  bool Caret::isAtText(p_char8 text, v_int32 textSize, bool skipIfTrue){$/;"	f	class:oatpp::parser::Caret	typeref:typename:bool
isAtTextNCS	../oatpp/src/oatpp/core/parser/Caret.cpp	/^  bool Caret::isAtTextNCS(const char* text, bool skipIfTrue){$/;"	f	class:oatpp::parser::Caret	typeref:typename:bool
isAtTextNCS	../oatpp/src/oatpp/core/parser/Caret.cpp	/^  bool Caret::isAtTextNCS(p_char8 text, v_int32 textSize, bool skipIfTrue){$/;"	f	class:oatpp::parser::Caret	typeref:typename:bool
isBase64String	../oatpp/src/oatpp/encoding/Base64.cpp	/^bool Base64::isBase64String(const char* data, v_int32 size, const char* auxiliaryChars) {$/;"	f	class:oatpp::encoding::Base64	typeref:typename:bool
isError	../oatpp/src/oatpp/core/async/Coroutine.cpp	/^bool Action::isError() const {$/;"	f	class:oatpp::async::Action	typeref:typename:bool
isSizeKnown	../oatpp/src/oatpp/web/protocol/http/Http.hpp	/^  bool isSizeKnown;$/;"	m	class:oatpp::web::protocol::http::ContentRange	typeref:typename:bool
isValid	../oatpp/src/oatpp/network/virtual_/Interface.cpp	/^bool Interface::ConnectionSubmission::isValid() {$/;"	f	class:oatpp::network::virtual_::Interface::ConnectionSubmission	typeref:typename:bool
isValid	../oatpp/src/oatpp/web/protocol/http/Http.hpp	/^  bool isValid() const {$/;"	f	class:oatpp::web::protocol::http::ContentRange	typeref:typename:bool
isValid	../oatpp/src/oatpp/web/protocol/http/Http.hpp	/^  bool isValid() const {$/;"	f	class:oatpp::web::protocol::http::Range	typeref:typename:bool
it	../oatpp/test/oatpp/web/app/Controller.hpp	/^    for(auto& it : queries) {$/;"	m	class:oatpp::test::web::app::Controller	typeref:typename:auto &
iterate	../oatpp/src/oatpp/core/async/Coroutine.cpp	/^Action AbstractCoroutine::iterate() {$/;"	f	class:oatpp::async::AbstractCoroutine	typeref:typename:Action
iterate	../oatpp/src/oatpp/core/async/Processor.cpp	/^bool Processor::iterate(v_int32 numIterations) {$/;"	f	class:oatpp::async::Processor	typeref:typename:bool
iterateAddrInfoResults	../oatpp/src/oatpp/network/client/SimpleTCPConnectionProvider.cpp	/^    Action iterateAddrInfoResults() {$/;"	f	class:oatpp::network::client::SimpleTCPConnectionProvider::getConnectionAsync::ConnectCoroutine	typeref:typename:Action	file:
join	../oatpp/src/oatpp/core/async/Executor.cpp	/^void Executor::SubmissionProcessor::join() {$/;"	f	class:oatpp::async::Executor::SubmissionProcessor	typeref:typename:void
join	../oatpp/src/oatpp/core/async/Executor.cpp	/^void Executor::join() {$/;"	f	class:oatpp::async::Executor	typeref:typename:void
join	../oatpp/src/oatpp/core/async/worker/IOEventWorker_common.cpp	/^void IOEventWorker::join() {$/;"	f	class:oatpp::async::worker::IOEventWorker	typeref:typename:void
join	../oatpp/src/oatpp/core/async/worker/IOEventWorker_common.cpp	/^void IOEventWorkerForeman::join() {$/;"	f	class:oatpp::async::worker::IOEventWorkerForeman	typeref:typename:void
join	../oatpp/src/oatpp/core/async/worker/IOWorker.cpp	/^void IOWorker::join() {$/;"	f	class:oatpp::async::worker::IOWorker	typeref:typename:void
join	../oatpp/src/oatpp/core/async/worker/TimerWorker.cpp	/^void TimerWorker::join() {$/;"	f	class:oatpp::async::worker::TimerWorker	typeref:typename:void
json	../oatpp/src/oatpp/parser/json/Utils.cpp	/^namespace oatpp { namespace parser { namespace json{$/;"	n	namespace:oatpp::parser	file:
json	../oatpp/src/oatpp/parser/json/Utils.hpp	/^namespace oatpp { namespace parser { namespace json{$/;"	n	namespace:oatpp::parser
json	../oatpp/src/oatpp/parser/json/mapping/Deserializer.cpp	/^namespace oatpp { namespace parser { namespace json { namespace mapping {$/;"	n	namespace:oatpp::parser	file:
json	../oatpp/src/oatpp/parser/json/mapping/Deserializer.hpp	/^namespace oatpp { namespace parser { namespace json { namespace mapping {$/;"	n	namespace:oatpp::parser
json	../oatpp/src/oatpp/parser/json/mapping/ObjectMapper.cpp	/^namespace oatpp { namespace parser { namespace json { namespace mapping {$/;"	n	namespace:oatpp::parser	file:
json	../oatpp/src/oatpp/parser/json/mapping/ObjectMapper.hpp	/^namespace oatpp { namespace parser { namespace json { namespace mapping {$/;"	n	namespace:oatpp::parser
json	../oatpp/src/oatpp/parser/json/mapping/Serializer.cpp	/^namespace oatpp { namespace parser { namespace json { namespace mapping {$/;"	n	namespace:oatpp::parser	file:
json	../oatpp/src/oatpp/parser/json/mapping/Serializer.hpp	/^namespace oatpp { namespace parser { namespace json { namespace mapping {$/;"	n	namespace:oatpp::parser
json	../oatpp/test/oatpp/parser/json/mapping/DTOMapperPerfTest.cpp	/^namespace oatpp { namespace test { namespace parser { namespace json { namespace mapping {$/;"	n	namespace:oatpp::test::parser	file:
json	../oatpp/test/oatpp/parser/json/mapping/DTOMapperPerfTest.hpp	/^namespace oatpp { namespace test { namespace parser { namespace json { namespace mapping {$/;"	n	namespace:oatpp::test::parser
json	../oatpp/test/oatpp/parser/json/mapping/DTOMapperTest.cpp	/^namespace oatpp { namespace test { namespace parser { namespace json { namespace mapping {$/;"	n	namespace:oatpp::test::parser	file:
json	../oatpp/test/oatpp/parser/json/mapping/DTOMapperTest.hpp	/^namespace oatpp { namespace test { namespace parser { namespace json { namespace mapping {$/;"	n	namespace:oatpp::test::parser
json	../oatpp/test/oatpp/parser/json/mapping/DeserializerTest.cpp	/^namespace oatpp { namespace test { namespace parser { namespace json { namespace mapping {$/;"	n	namespace:oatpp::test::parser	file:
json	../oatpp/test/oatpp/parser/json/mapping/DeserializerTest.hpp	/^namespace oatpp { namespace test { namespace parser { namespace json { namespace mapping {$/;"	n	namespace:oatpp::test::parser
key	../oatpp/src/oatpp/core/collection/ListMap.hpp	/^    K           key;$/;"	m	class:oatpp::collection::ListMap::Entry	typeref:typename:K
labelQueryParams	../oatpp/src/oatpp/network/Url.cpp	/^Url::ParametersAsLabels Url::Parser::labelQueryParams(const oatpp::String& str) {$/;"	f	class:oatpp::network::Url::Parser	typeref:typename:Url::ParametersAsLabels
last	../oatpp/src/oatpp/core/collection/FastQueue.hpp	/^  T* last;$/;"	m	class:oatpp::collection::FastQueue	typeref:typename:T *
linkWorkers	../oatpp/src/oatpp/core/async/Executor.cpp	/^void Executor::linkWorkers(const std::vector<std::shared_ptr<worker::Worker>>& workers) {$/;"	f	class:oatpp::async::Executor	typeref:typename:void
list_install_components	../oatpp/build/Makefile	/^list_install_components:$/;"	t
list_install_components	../oatpp/build/src/Makefile	/^list_install_components:$/;"	t
list_install_components	../oatpp/build/test/Makefile	/^list_install_components:$/;"	t
list_install_components/fast	../oatpp/build/Makefile	/^list_install_components\/fast: list_install_components$/;"	t
list_install_components/fast	../oatpp/build/src/Makefile	/^list_install_components\/fast: list_install_components$/;"	t
list_install_components/fast	../oatpp/build/test/Makefile	/^list_install_components\/fast: list_install_components$/;"	t
loadFromFile	../oatpp/src/oatpp/core/base/StrBuffer.cpp	/^std::shared_ptr<StrBuffer> StrBuffer::loadFromFile(const char* filename) {$/;"	f	class:oatpp::base::StrBuffer	typeref:typename:std::shared_ptr<StrBuffer>
loadFromFile	src/Utils.cpp	/^oatpp::String loadFromFile(const char* fileName) {$/;"	f	typeref:typename:oatpp::String
lock	../oatpp/src/oatpp/core/async/Lock.cpp	/^void Lock::lock() {$/;"	f	class:oatpp::async::Lock	typeref:typename:void
lock	../oatpp/src/oatpp/core/concurrency/SpinLock.cpp	/^void SpinLock::lock() {$/;"	f	class:oatpp::concurrency::SpinLock	typeref:typename:void
lockAsync	../oatpp/src/oatpp/core/async/Lock.cpp	/^CoroutineStarter LockGuard::lockAsync() {$/;"	f	class:oatpp::async::LockGuard	typeref:typename:CoroutineStarter
lockAsync	../oatpp/src/oatpp/core/async/Lock.cpp	/^CoroutineStarter LockGuard::lockAsync(Lock* lock) {$/;"	f	class:oatpp::async::LockGuard	typeref:typename:CoroutineStarter
lockAsyncInline	../oatpp/src/oatpp/core/async/Lock.cpp	/^Action LockGuard::lockAsyncInline(oatpp::async::Action&& nextAction) {$/;"	f	class:oatpp::async::LockGuard	typeref:typename:Action
log	../oatpp/src/oatpp/core/base/Environment.cpp	/^void DefaultLogger::log(v_int32 priority, const std::string& tag, const std::string& message) {$/;"	f	class:oatpp::base::DefaultLogger	typeref:typename:void
log	../oatpp/src/oatpp/core/base/Environment.cpp	/^void Environment::log(v_int32 priority, const std::string& tag, const std::string& message) {$/;"	f	class:oatpp::base::Environment	typeref:typename:void
logFormatted	../oatpp/src/oatpp/core/base/Environment.cpp	/^void Environment::logFormatted(v_int32 priority, const std::string& tag, const char* message, ../;"	f	class:oatpp::base::Environment	typeref:typename:void
logRouterMappings	../oatpp/src/oatpp/web/server/HttpRouter.cpp	/^void HttpRouter::logRouterMappings() {$/;"	f	class:oatpp::web::server::HttpRouter	typeref:typename:void
logRouterMappings	../oatpp/src/oatpp/web/url/mapping/Router.hpp	/^  void logRouterMappings() {$/;"	f	class:oatpp::web::url::mapping::Router	typeref:typename:void
lowerCase	../oatpp/src/oatpp/core/base/StrBuffer.cpp	/^void StrBuffer::lowerCase(const void* data, v_int32 size) {$/;"	f	class:oatpp::base::StrBuffer	typeref:typename:void
m_accumulator	../oatpp/src/oatpp/web/protocol/http/incoming/RequestHeadersReader.cpp	/^    v_word32 m_accumulator;$/;"	m	class:oatpp::web::protocol::http::incoming::RequestHeadersReader::readHeadersAsync::ReaderCoroutine	typeref:typename:v_word32	file:
m_accumulator	../oatpp/src/oatpp/web/protocol/http/incoming/ResponseHeadersReader.cpp	/^    v_word32 m_accumulator;$/;"	m	class:oatpp::web::protocol::http::incoming::ResponseHeadersReader::readHeadersAsync::ReaderCoroutine	typeref:typename:v_word32	file:
m_allWorkers	../oatpp/src/oatpp/core/async/Executor.hpp	/^  std::vector<std::shared_ptr<worker::Worker>> m_allWorkers;$/;"	m	class:oatpp::async::Executor	typeref:typename:std::vector<std::shared_ptr<worker::Worker>>
m_argc	../oatpp/src/oatpp/core/base/CommandLineArguments.hpp	/^  int m_argc;$/;"	m	class:oatpp::base::CommandLineArguments	typeref:typename:int
m_argv	../oatpp/src/oatpp/core/base/CommandLineArguments.hpp	/^  const char ** m_argv;$/;"	m	class:oatpp::base::CommandLineArguments	typeref:typename:const char **
m_atom	../oatpp/src/oatpp/core/concurrency/SpinLock.hpp	/^  std::atomic<bool> m_atom;$/;"	m	class:oatpp::concurrency::SpinLock	typeref:typename:std::atomic<bool>
m_backlog	../oatpp/src/oatpp/core/async/worker/IOEventWorker.hpp	/^  oatpp::collection::FastQueue<AbstractCoroutine> m_backlog;$/;"	m	class:oatpp::async::worker::IOEventWorker	typeref:typename:oatpp::collection::FastQueue<AbstractCoroutine>
m_backlog	../oatpp/src/oatpp/core/async/worker/IOWorker.hpp	/^  oatpp::collection::FastQueue<AbstractCoroutine> m_backlog;$/;"	m	class:oatpp::async::worker::IOWorker	typeref:typename:oatpp::collection::FastQueue<AbstractCoroutine>
m_backlog	../oatpp/src/oatpp/core/async/worker/TimerWorker.hpp	/^  oatpp::collection::FastQueue<AbstractCoroutine> m_backlog;$/;"	m	class:oatpp::async::worker::TimerWorker	typeref:typename:oatpp::collection::FastQueue<AbstractCoroutine>
m_backlogCondition	../oatpp/src/oatpp/core/async/worker/IOWorker.hpp	/^  std::condition_variable_any m_backlogCondition;$/;"	m	class:oatpp::async::worker::IOWorker	typeref:typename:std::condition_variable_any
m_backlogCondition	../oatpp/src/oatpp/core/async/worker/TimerWorker.hpp	/^  std::condition_variable_any m_backlogCondition;$/;"	m	class:oatpp::async::worker::TimerWorker	typeref:typename:std::condition_variable_any
m_backlogLock	../oatpp/src/oatpp/core/async/worker/IOEventWorker.hpp	/^  oatpp::concurrency::SpinLock m_backlogLock;$/;"	m	class:oatpp::async::worker::IOEventWorker	typeref:typename:oatpp::concurrency::SpinLock
m_backlogLock	../oatpp/src/oatpp/core/async/worker/IOWorker.hpp	/^  oatpp::concurrency::SpinLock m_backlogLock;$/;"	m	class:oatpp::async::worker::IOWorker	typeref:typename:oatpp::concurrency::SpinLock
m_backlogLock	../oatpp/src/oatpp/core/async/worker/TimerWorker.hpp	/^  oatpp::concurrency::SpinLock m_backlogLock;$/;"	m	class:oatpp::async::worker::TimerWorker	typeref:typename:oatpp::concurrency::SpinLock
m_balancer	../oatpp/src/oatpp/core/async/Executor.hpp	/^  std::atomic<v_word32> m_balancer;$/;"	m	class:oatpp::async::Executor	typeref:typename:std::atomic<v_word32>
m_basePath	src/Utils.hpp	/^  oatpp::String m_basePath;$/;"	m	class:StaticFilesManager	typeref:typename:oatpp::String
m_blocks	../oatpp/src/oatpp/core/base/memory/MemoryPool.hpp	/^  Block* m_blocks;$/;"	m	class:oatpp::base::memory::Bench	typeref:typename:Block *
m_body	../oatpp/src/oatpp/web/client/HttpRequestExecutor.cpp	/^    std::shared_ptr<Body> m_body;$/;"	m	class:oatpp::web::client::HttpRequestExecutor::executeAsync::ExecutorCoroutine	typeref:typename:std::shared_ptr<Body>	file:
m_body	../oatpp/src/oatpp/web/protocol/http/outgoing/BufferBody.hpp	/^    std::shared_ptr<BufferBody> m_body;$/;"	m	class:oatpp::web::protocol::http::outgoing::BufferBody::WriteToStreamCoroutine	typeref:typename:std::shared_ptr<BufferBody>
m_body	../oatpp/src/oatpp/web/protocol/http/outgoing/ChunkedBufferBody.hpp	/^    std::shared_ptr<ChunkedBufferBody> m_body;$/;"	m	class:oatpp::web::protocol::http::outgoing::ChunkedBufferBody::WriteToStreamCoroutine	typeref:typename:std::shared_ptr<ChunkedBufferBody>
m_body	../oatpp/src/oatpp/web/protocol/http/outgoing/Request.hpp	/^  std::shared_ptr<Body> m_body;$/;"	m	class:oatpp::web::protocol::http::outgoing::Request	typeref:typename:std::shared_ptr<Body>
m_body	../oatpp/src/oatpp/web/protocol/http/outgoing/Response.hpp	/^  std::shared_ptr<Body> m_body;$/;"	m	class:oatpp::web::protocol::http::outgoing::Response	typeref:typename:std::shared_ptr<Body>
m_bodyDecoder	../oatpp/src/oatpp/web/client/HttpRequestExecutor.cpp	/^    std::shared_ptr<const oatpp::web::protocol::http::incoming::BodyDecoder> m_bodyDecoder;$/;"	m	class:oatpp::web::client::HttpRequestExecutor::executeAsync::ExecutorCoroutine	typeref:typename:std::shared_ptr<const oatpp::web::protocol::http::incoming::BodyDecoder>	file:
m_bodyDecoder	../oatpp/src/oatpp/web/client/HttpRequestExecutor.hpp	/^  std::shared_ptr<const oatpp::web::protocol::http::incoming::BodyDecoder> m_bodyDecoder;$/;"	m	class:oatpp::web::client::HttpRequestExecutor	typeref:typename:std::shared_ptr<const oatpp::web::protocol::http::incoming::BodyDecoder>
m_bodyDecoder	../oatpp/src/oatpp/web/protocol/http/incoming/Request.hpp	/^  std::shared_ptr<const http::incoming::BodyDecoder> m_bodyDecoder;$/;"	m	class:oatpp::web::protocol::http::incoming::Request	typeref:typename:std::shared_ptr<const http::incoming::BodyDecoder>
m_bodyDecoder	../oatpp/src/oatpp/web/protocol/http/incoming/Response.hpp	/^  std::shared_ptr<const http::incoming::BodyDecoder> m_bodyDecoder;$/;"	m	class:oatpp::web::protocol::http::incoming::Response	typeref:typename:std::shared_ptr<const http::incoming::BodyDecoder>
m_bodyDecoder	../oatpp/src/oatpp/web/server/AsyncHttpConnectionHandler.hpp	/^  std::shared_ptr<const BodyDecoder> m_bodyDecoder; \/\/ TODO make bodyDecoder configurable here$/;"	m	class:oatpp::web::server::AsyncHttpConnectionHandler	typeref:typename:std::shared_ptr<const BodyDecoder>
m_bodyDecoder	../oatpp/src/oatpp/web/server/HttpConnectionHandler.hpp	/^    std::shared_ptr<const oatpp::web::protocol::http::incoming::BodyDecoder> m_bodyDecoder;$/;"	m	class:oatpp::web::server::HttpConnectionHandler::Task	typeref:typename:std::shared_ptr<const oatpp::web::protocol::http::incoming::BodyDecoder>
m_bodyDecoder	../oatpp/src/oatpp/web/server/HttpConnectionHandler.hpp	/^  std::shared_ptr<const oatpp::web::protocol::http::incoming::BodyDecoder> m_bodyDecoder;$/;"	m	class:oatpp::web::server::HttpConnectionHandler	typeref:typename:std::shared_ptr<const oatpp::web::protocol::http::incoming::BodyDecoder>
m_bodyDecoder	../oatpp/src/oatpp/web/server/HttpProcessor.hpp	/^    std::shared_ptr<const oatpp::web::protocol::http::incoming::BodyDecoder> m_bodyDecoder;$/;"	m	class:oatpp::web::server::HttpProcessor::Coroutine	typeref:typename:std::shared_ptr<const oatpp::web::protocol::http::incoming::BodyDecoder>
m_bodyStream	../oatpp/src/oatpp/web/protocol/http/incoming/BodyDecoder.hpp	/^    std::shared_ptr<oatpp::data::stream::InputStream> m_bodyStream;$/;"	m	class:oatpp::web::protocol::http::incoming::BodyDecoder::ToDtoDecoder	typeref:typename:std::shared_ptr<oatpp::data::stream::InputStream>
m_bodyStream	../oatpp/src/oatpp/web/protocol/http/incoming/BodyDecoder.hpp	/^    std::shared_ptr<oatpp::data::stream::InputStream> m_bodyStream;$/;"	m	class:oatpp::web::protocol::http::incoming::BodyDecoder::ToStringDecoder	typeref:typename:std::shared_ptr<oatpp::data::stream::InputStream>
m_bodyStream	../oatpp/src/oatpp/web/protocol/http/incoming/Request.hpp	/^  std::shared_ptr<oatpp::data::stream::InputStream> m_bodyStream;$/;"	m	class:oatpp::web::protocol::http::incoming::Request	typeref:typename:std::shared_ptr<oatpp::data::stream::InputStream>
m_bodyStream	../oatpp/src/oatpp/web/protocol/http/incoming/Response.hpp	/^  std::shared_ptr<oatpp::data::stream::InputStream> m_bodyStream;$/;"	m	class:oatpp::web::protocol::http::incoming::Response	typeref:typename:std::shared_ptr<oatpp::data::stream::InputStream>
m_branchMap	../oatpp/src/oatpp/web/server/HttpRouter.hpp	/^  BranchMap m_branchMap;$/;"	m	class:oatpp::web::server::HttpRouter	typeref:typename:BranchMap
m_buff	../oatpp/test/oatpp/core/async/LockTest.cpp	/^  Buff *m_buff;$/;"	m	class:oatpp::test::async::__anonf33831840110::NotSynchronizedCoroutine	typeref:typename:Buff *	file:
m_buff	../oatpp/test/oatpp/core/async/LockTest.cpp	/^  Buff *m_buff;$/;"	m	class:oatpp::test::async::__anonf33831840110::TestCoroutine	typeref:typename:Buff *	file:
m_buff	../oatpp/test/oatpp/core/async/LockTest.cpp	/^  Buff *m_buff;$/;"	m	class:oatpp::test::async::__anonf33831840110::TestCoroutine2	typeref:typename:Buff *	file:
m_buffer	../oatpp/src/oatpp/core/data/buffer/FIFOBuffer.hpp	/^  p_char8 m_buffer;$/;"	m	class:oatpp::data::buffer::FIFOBuffer	typeref:typename:p_char8
m_buffer	../oatpp/src/oatpp/core/data/stream/Stream.cpp	/^    std::shared_ptr<oatpp::data::buffer::IOBuffer> m_buffer;$/;"	m	class:oatpp::data::stream::transferAsync::TransferCoroutine	typeref:typename:std::shared_ptr<oatpp::data::buffer::IOBuffer>	file:
m_buffer	../oatpp/src/oatpp/core/data/stream/StreamBufferedProxy.hpp	/^  buffer::FIFOBuffer m_buffer;$/;"	m	class:oatpp::data::stream::InputStreamBufferedProxy	typeref:typename:buffer::FIFOBuffer
m_buffer	../oatpp/src/oatpp/core/data/stream/StreamBufferedProxy.hpp	/^  std::shared_ptr<buffer::FIFOBuffer> m_buffer;$/;"	m	class:oatpp::data::stream::OutputStreamBufferedProxy	typeref:typename:std::shared_ptr<buffer::FIFOBuffer>
m_buffer	../oatpp/src/oatpp/network/virtual_/Pipe.hpp	/^  oatpp::data::buffer::IOBuffer m_buffer;$/;"	m	class:oatpp::network::virtual_::Pipe	typeref:typename:oatpp::data::buffer::IOBuffer
m_buffer	../oatpp/src/oatpp/web/protocol/http/incoming/RequestHeadersReader.cpp	/^    p_char8 m_buffer;$/;"	m	class:oatpp::web::protocol::http::incoming::RequestHeadersReader::readHeadersAsync::ReaderCoroutine	typeref:typename:p_char8	file:
m_buffer	../oatpp/src/oatpp/web/protocol/http/incoming/RequestHeadersReader.hpp	/^  p_char8 m_buffer;$/;"	m	class:oatpp::web::protocol::http::incoming::RequestHeadersReader	typeref:typename:p_char8
m_buffer	../oatpp/src/oatpp/web/protocol/http/incoming/ResponseHeadersReader.cpp	/^    p_char8 m_buffer;$/;"	m	class:oatpp::web::protocol::http::incoming::ResponseHeadersReader::readHeadersAsync::ReaderCoroutine	typeref:typename:p_char8	file:
m_buffer	../oatpp/src/oatpp/web/protocol/http/incoming/ResponseHeadersReader.hpp	/^  p_char8 m_buffer;$/;"	m	class:oatpp::web::protocol::http::incoming::ResponseHeadersReader	typeref:typename:p_char8
m_buffer	../oatpp/src/oatpp/web/protocol/http/incoming/SimpleBodyDecoder.cpp	/^    std::shared_ptr<oatpp::data::buffer::IOBuffer> m_buffer = oatpp::data::buffer::IOBuffer::cre/;"	m	class:oatpp::web::protocol::http::incoming::SimpleBodyDecoder::doChunkedDecodingAsync::ChunkedDecoder	typeref:typename:std::shared_ptr<oatpp::data::buffer::IOBuffer>	file:
m_buffer	../oatpp/src/oatpp/web/protocol/http/outgoing/BufferBody.hpp	/^  oatpp::String m_buffer;$/;"	m	class:oatpp::web::protocol::http::outgoing::BufferBody	typeref:typename:oatpp::String
m_buffer	../oatpp/src/oatpp/web/protocol/http/outgoing/ChunkedBufferBody.hpp	/^    v_char8 m_buffer[16];$/;"	m	class:oatpp::web::protocol::http::outgoing::ChunkedBufferBody::WriteToStreamCoroutine	typeref:typename:v_char8[16]
m_buffer	../oatpp/src/oatpp/web/protocol/http/outgoing/ChunkedBufferBody.hpp	/^  std::shared_ptr<oatpp::data::stream::ChunkedBuffer> m_buffer;$/;"	m	class:oatpp::web::protocol::http::outgoing::ChunkedBufferBody	typeref:typename:std::shared_ptr<oatpp::data::stream::ChunkedBuffer>
m_buffer	../oatpp/src/oatpp/web/protocol/http/outgoing/Request.cpp	/^    std::shared_ptr<oatpp::data::stream::ChunkedBuffer> m_buffer;$/;"	m	class:oatpp::web::protocol::http::outgoing::Request::sendAsync::SendAsyncCoroutine	typeref:typename:std::shared_ptr<oatpp::data::stream::ChunkedBuffer>	file:
m_buffer	../oatpp/src/oatpp/web/protocol/http/outgoing/Response.cpp	/^    std::shared_ptr<oatpp::data::stream::ChunkedBuffer> m_buffer;$/;"	m	class:oatpp::web::protocol::http::outgoing::Response::sendAsync::SendAsyncCoroutine	typeref:typename:std::shared_ptr<oatpp::data::stream::ChunkedBuffer>	file:
m_buffer	../oatpp/test/oatpp/core/async/LockTest.cpp	/^  oatpp::data::stream::ChunkedBuffer *m_buffer;$/;"	m	class:oatpp::test::async::__anonf33831840110::Buff	typeref:typename:oatpp::data::stream::ChunkedBuffer *	file:
m_buffer	../oatpp/test/oatpp/network/virtual_/PipeTest.cpp	/^    std::shared_ptr<oatpp::data::stream::ChunkedBuffer> m_buffer;$/;"	m	class:oatpp::test::network::virtual_::__anon0e2557b20110::ReaderTask	typeref:typename:std::shared_ptr<oatpp::data::stream::ChunkedBuffer>	file:
m_bufferPtr	../oatpp/src/oatpp/core/data/stream/StreamBufferedProxy.hpp	/^  std::shared_ptr<oatpp::data::buffer::IOBuffer> m_bufferPtr;$/;"	m	class:oatpp::data::stream::InputStreamBufferedProxy	typeref:typename:std::shared_ptr<oatpp::data::buffer::IOBuffer>
m_bufferPtr	../oatpp/src/oatpp/core/data/stream/StreamBufferedProxy.hpp	/^  std::shared_ptr<oatpp::data::buffer::IOBuffer> m_bufferPtr;$/;"	m	class:oatpp::data::stream::OutputStreamBufferedProxy	typeref:typename:std::shared_ptr<oatpp::data::buffer::IOBuffer>
m_bufferSize	../oatpp/src/oatpp/core/data/buffer/FIFOBuffer.hpp	/^  v_io_size m_bufferSize;$/;"	m	class:oatpp::data::buffer::FIFOBuffer	typeref:typename:v_io_size
m_bufferSize	../oatpp/src/oatpp/web/protocol/http/incoming/RequestHeadersReader.cpp	/^    v_int32 m_bufferSize;$/;"	m	class:oatpp::web::protocol::http::incoming::RequestHeadersReader::readHeadersAsync::ReaderCoroutine	typeref:typename:v_int32	file:
m_bufferSize	../oatpp/src/oatpp/web/protocol/http/incoming/RequestHeadersReader.hpp	/^  v_int32 m_bufferSize;$/;"	m	class:oatpp::web::protocol::http::incoming::RequestHeadersReader	typeref:typename:v_int32
m_bufferSize	../oatpp/src/oatpp/web/protocol/http/incoming/ResponseHeadersReader.cpp	/^    v_int32 m_bufferSize;$/;"	m	class:oatpp::web::protocol::http::incoming::ResponseHeadersReader::readHeadersAsync::ReaderCoroutine	typeref:typename:v_int32	file:
m_bufferSize	../oatpp/src/oatpp/web/protocol/http/incoming/ResponseHeadersReader.hpp	/^  v_int32 m_bufferSize;$/;"	m	class:oatpp::web::protocol::http::incoming::ResponseHeadersReader	typeref:typename:v_int32
m_bufferStream	../oatpp/src/oatpp/web/protocol/http/incoming/RequestHeadersReader.cpp	/^    oatpp::data::stream::ChunkedBuffer m_bufferStream;$/;"	m	class:oatpp::web::protocol::http::incoming::RequestHeadersReader::readHeadersAsync::ReaderCoroutine	typeref:typename:oatpp::data::stream::ChunkedBuffer	file:
m_bufferStream	../oatpp/src/oatpp/web/protocol/http/incoming/ResponseHeadersReader.cpp	/^    oatpp::data::stream::ChunkedBuffer m_bufferStream;$/;"	m	class:oatpp::web::protocol::http::incoming::ResponseHeadersReader::readHeadersAsync::ReaderCoroutine	typeref:typename:oatpp::data::stream::ChunkedBuffer	file:
m_bytesLeft	../oatpp/src/oatpp/core/data/stream/ChunkedBuffer.cpp	/^    data::v_io_size m_bytesLeft;$/;"	m	class:oatpp::data::stream::ChunkedBuffer::flushToStreamAsync::FlushCoroutine	typeref:typename:data::v_io_size	file:
m_bytesLeft	../oatpp/src/oatpp/core/data/stream/Stream.cpp	/^    oatpp::data::v_io_size m_bytesLeft;$/;"	m	class:oatpp::data::stream::transferAsync::TransferCoroutine	typeref:typename:oatpp::data::v_io_size	file:
m_cache	src/Utils.hpp	/^  std::unordered_map<oatpp::String, oatpp::String> m_cache;$/;"	m	class:StaticFilesManager	typeref:typename:std::unordered_map<oatpp::String,oatpp::String>
m_callback	../oatpp/src/oatpp/core/async/Coroutine.hpp	/^  FunctionPtr m_callback;$/;"	m	class:oatpp::async::AbstractCoroutineWithResult	typeref:typename:FunctionPtr
m_canRead	../oatpp/src/oatpp/core/data/buffer/FIFOBuffer.hpp	/^  bool m_canRead;$/;"	m	class:oatpp::data::buffer::FIFOBuffer	typeref:typename:bool
m_caret	../oatpp/src/oatpp/core/parser/Caret.hpp	/^    Caret& m_caret;$/;"	m	class:oatpp::parser::Caret::StateSaveGuard	typeref:typename:Caret &
m_caret	../oatpp/src/oatpp/core/parser/Caret.hpp	/^    Caret* m_caret;$/;"	m	class:oatpp::parser::Caret::Label	typeref:typename:Caret *
m_chunkPos	../oatpp/src/oatpp/core/data/stream/ChunkedBuffer.hpp	/^  data::v_io_size m_chunkPos;$/;"	m	class:oatpp::data::stream::ChunkedBuffer	typeref:typename:data::v_io_size
m_chunkSize	../oatpp/src/oatpp/core/base/memory/MemoryPool.hpp	/^  v_int32 m_chunkSize;$/;"	m	class:oatpp::base::memory::MemoryPool	typeref:typename:v_int32
m_chunked	../oatpp/src/oatpp/web/protocol/http/outgoing/ChunkedBufferBody.hpp	/^  bool m_chunked;$/;"	m	class:oatpp::web::protocol::http::outgoing::ChunkedBufferBody	typeref:typename:bool
m_chunkedBuffer	../oatpp/src/oatpp/core/data/stream/ChunkedBuffer.cpp	/^    std::shared_ptr<ChunkedBuffer> m_chunkedBuffer;$/;"	m	class:oatpp::data::stream::ChunkedBuffer::flushToStreamAsync::FlushCoroutine	typeref:typename:std::shared_ptr<ChunkedBuffer>	file:
m_chunkedBuffer	../oatpp/src/oatpp/web/protocol/http/incoming/BodyDecoder.hpp	/^    std::shared_ptr<oatpp::data::stream::ChunkedBuffer> m_chunkedBuffer = oatpp::data::stream::C/;"	m	class:oatpp::web::protocol::http::incoming::BodyDecoder::ToDtoDecoder	typeref:typename:std::shared_ptr<oatpp::data::stream::ChunkedBuffer>
m_chunkedBuffer	../oatpp/src/oatpp/web/protocol/http/incoming/BodyDecoder.hpp	/^    std::shared_ptr<oatpp::data::stream::ChunkedBuffer> m_chunkedBuffer;$/;"	m	class:oatpp::web::protocol::http::incoming::BodyDecoder::ToStringDecoder	typeref:typename:std::shared_ptr<oatpp::data::stream::ChunkedBuffer>
m_chunks	../oatpp/src/oatpp/core/base/memory/MemoryPool.hpp	/^  std::list<p_char8> m_chunks;$/;"	m	class:oatpp::base::memory::MemoryPool	typeref:typename:std::list<p_char8>
m_chunks	../oatpp/src/oatpp/web/protocol/http/outgoing/ChunkedBufferBody.hpp	/^    std::shared_ptr<oatpp::data::stream::ChunkedBuffer::Chunks> m_chunks;$/;"	m	class:oatpp::web::protocol::http::outgoing::ChunkedBufferBody::WriteToStreamCoroutine	typeref:typename:std::shared_ptr<oatpp::data::stream::ChunkedBuffer::Chunks>
m_chunksToTransfer	../oatpp/test/oatpp/network/virtual_/PipeTest.cpp	/^    v_int32 m_chunksToTransfer;$/;"	m	class:oatpp::test::network::virtual_::__anon0e2557b20110::ReaderTask	typeref:typename:v_int32	file:
m_chunksToTransfer	../oatpp/test/oatpp/network/virtual_/PipeTest.cpp	/^    v_int32 m_chunksToTransfer;$/;"	m	class:oatpp::test::network::virtual_::__anon0e2557b20110::WriterTask	typeref:typename:v_int32	file:
m_clientHandle	../oatpp/src/oatpp/network/client/SimpleTCPConnectionProvider.cpp	/^    oatpp::data::v_io_handle m_clientHandle;$/;"	m	class:oatpp::network::client::SimpleTCPConnectionProvider::getConnectionAsync::ConnectCoroutine	typeref:typename:oatpp::data::v_io_handle	file:
m_closed	../oatpp/src/oatpp/network/server/SimpleTCPConnectionProvider.hpp	/^  bool m_closed;$/;"	m	class:oatpp::network::server::SimpleTCPConnectionProvider	typeref:typename:bool
m_code	../oatpp/src/oatpp/core/data/IODefinitions.hpp	/^  v_io_size m_code;$/;"	m	class:oatpp::data::AsyncIOError	typeref:typename:v_io_size
m_code	../oatpp/src/oatpp/core/parser/ParsingError.hpp	/^  v_int32 m_code;$/;"	m	class:oatpp::parser::ParsingError	typeref:typename:v_int32
m_components	../oatpp/src/oatpp/core/base/Environment.cpp	/^std::unordered_map<std::string, std::unordered_map<std::string, void*>> Environment::m_component/;"	m	class:oatpp::base::Environment	typeref:typename:std::unordered_map<std::string,std::unordered_map<std::string,void * >>
m_components	../oatpp/src/oatpp/core/base/Environment.hpp	/^  static std::unordered_map<std::string, std::unordered_map<std::string, void*>> m_components;$/;"	m	class:oatpp::base::Environment	typeref:typename:std::unordered_map<std::string,std::unordered_map<std::string,void * >>
m_condition	../oatpp/src/oatpp/network/virtual_/Interface.hpp	/^    std::condition_variable m_condition;$/;"	m	class:oatpp::network::virtual_::Interface::ConnectionSubmission	typeref:typename:std::condition_variable
m_condition	../oatpp/src/oatpp/network/virtual_/Interface.hpp	/^  std::condition_variable m_condition;$/;"	m	class:oatpp::network::virtual_::Interface	typeref:typename:std::condition_variable
m_conditionRead	../oatpp/src/oatpp/network/virtual_/Pipe.hpp	/^  std::condition_variable m_conditionRead;$/;"	m	class:oatpp::network::virtual_::Pipe	typeref:typename:std::condition_variable
m_conditionWrite	../oatpp/src/oatpp/network/virtual_/Pipe.hpp	/^  std::condition_variable m_conditionWrite;$/;"	m	class:oatpp::network::virtual_::Pipe	typeref:typename:std::condition_variable
m_config	../oatpp/src/oatpp/core/base/Environment.hpp	/^  Config m_config;$/;"	m	class:oatpp::base::DefaultLogger	typeref:typename:Config
m_connection	../oatpp/src/oatpp/web/client/HttpRequestExecutor.cpp	/^    std::shared_ptr<oatpp::data::stream::IOStream> m_connection;$/;"	m	class:oatpp::web::client::HttpRequestExecutor::executeAsync::ExecutorCoroutine	typeref:typename:std::shared_ptr<oatpp::data::stream::IOStream>	file:
m_connection	../oatpp/src/oatpp/web/protocol/http/incoming/RequestHeadersReader.cpp	/^    std::shared_ptr<oatpp::data::stream::IOStream> m_connection;$/;"	m	class:oatpp::web::protocol::http::incoming::RequestHeadersReader::readHeadersAsync::ReaderCoroutine	typeref:typename:std::shared_ptr<oatpp::data::stream::IOStream>	file:
m_connection	../oatpp/src/oatpp/web/protocol/http/incoming/Response.hpp	/^  std::shared_ptr<oatpp::data::stream::IOStream> m_connection;$/;"	m	class:oatpp::web::protocol::http::incoming::Response	typeref:typename:std::shared_ptr<oatpp::data::stream::IOStream>
m_connection	../oatpp/src/oatpp/web/protocol/http/incoming/ResponseHeadersReader.cpp	/^    std::shared_ptr<oatpp::data::stream::IOStream> m_connection;$/;"	m	class:oatpp::web::protocol::http::incoming::ResponseHeadersReader::readHeadersAsync::ReaderCoroutine	typeref:typename:std::shared_ptr<oatpp::data::stream::IOStream>	file:
m_connection	../oatpp/src/oatpp/web/server/HttpConnectionHandler.hpp	/^    std::shared_ptr<oatpp::data::stream::IOStream> m_connection;$/;"	m	class:oatpp::web::server::HttpConnectionHandler::Task	typeref:typename:std::shared_ptr<oatpp::data::stream::IOStream>
m_connection	../oatpp/src/oatpp/web/server/HttpProcessor.hpp	/^    std::shared_ptr<oatpp::data::stream::IOStream> m_connection;$/;"	m	class:oatpp::web::server::HttpProcessor::Coroutine	typeref:typename:std::shared_ptr<oatpp::data::stream::IOStream>
m_connectionHandle	../oatpp/src/oatpp/web/client/HttpRequestExecutor.cpp	/^    std::shared_ptr<ConnectionHandle> m_connectionHandle;$/;"	m	class:oatpp::web::client::HttpRequestExecutor::executeAsync::ExecutorCoroutine	typeref:typename:std::shared_ptr<ConnectionHandle>	file:
m_connectionHandler	../oatpp/src/oatpp/network/server/Server.hpp	/^  std::shared_ptr<ConnectionHandler> m_connectionHandler;$/;"	m	class:oatpp::network::server::Server	typeref:typename:std::shared_ptr<ConnectionHandler>
m_connectionProvider	../oatpp/src/oatpp/network/server/Server.hpp	/^  std::shared_ptr<ServerConnectionProvider> m_connectionProvider;$/;"	m	class:oatpp::network::server::Server	typeref:typename:std::shared_ptr<ServerConnectionProvider>
m_connectionProvider	../oatpp/src/oatpp/web/client/HttpRequestExecutor.cpp	/^    std::shared_ptr<oatpp::network::ClientConnectionProvider> m_connectionProvider;$/;"	m	class:oatpp::web::client::HttpRequestExecutor::executeAsync::ExecutorCoroutine	typeref:typename:std::shared_ptr<oatpp::network::ClientConnectionProvider>	file:
m_connectionProvider	../oatpp/src/oatpp/web/client/HttpRequestExecutor.cpp	/^    std::shared_ptr<oatpp::network::ClientConnectionProvider> m_connectionProvider;$/;"	m	class:oatpp::web::client::HttpRequestExecutor::getConnectionAsync::GetConnectionCoroutine	typeref:typename:std::shared_ptr<oatpp::network::ClientConnectionProvider>	file:
m_connectionProvider	../oatpp/src/oatpp/web/client/HttpRequestExecutor.hpp	/^  std::shared_ptr<oatpp::network::ClientConnectionProvider> m_connectionProvider;$/;"	m	class:oatpp::web::client::HttpRequestExecutor	typeref:typename:std::shared_ptr<oatpp::network::ClientConnectionProvider>
m_connectionState	../oatpp/src/oatpp/web/server/HttpProcessor.hpp	/^    v_int32 m_connectionState;$/;"	m	class:oatpp::web::server::HttpProcessor::Coroutine	typeref:typename:v_int32
m_connectionUpgradeHandler	../oatpp/src/oatpp/web/protocol/http/outgoing/Response.hpp	/^  std::shared_ptr<ConnectionHandler> m_connectionUpgradeHandler;$/;"	m	class:oatpp::web::protocol::http::outgoing::Response	typeref:typename:std::shared_ptr<ConnectionHandler>
m_connectionUpgradeParameters	../oatpp/src/oatpp/web/protocol/http/outgoing/Response.hpp	/^  std::shared_ptr<const ConnectionHandler::ParameterMap> m_connectionUpgradeParameters;$/;"	m	class:oatpp::web::protocol::http::outgoing::Response	typeref:typename:std::shared_ptr<const ConnectionHandler::ParameterMap>
m_connectionsPerEndpoint	../oatpp/test/oatpp/web/FullAsyncClientTest.hpp	/^  v_int32 m_connectionsPerEndpoint;$/;"	m	class:oatpp::test::web::FullAsyncClientTest	typeref:typename:v_int32
m_controller	../oatpp/src/oatpp/web/server/api/ApiController.hpp	/^    T* m_controller;$/;"	m	class:oatpp::web::server::api::ApiController::Handler	typeref:typename:T *
m_controllers	../oatpp/src/oatpp-test/web/ClientServerTestRunner.hpp	/^  std::list<std::shared_ptr<ApiController>> m_controllers;$/;"	m	class:oatpp::test::web::ClientServerTestRunner	typeref:typename:std::list<std::shared_ptr<ApiController>>
m_coroutine	../oatpp/src/oatpp/core/async/Coroutine.hpp	/^    AbstractCoroutineWithResult* m_coroutine;$/;"	m	class:oatpp::async::AbstractCoroutineWithResult::StarterForResult	typeref:typename:AbstractCoroutineWithResult *
m_count	../oatpp/src/oatpp/core/collection/LinkedList.hpp	/^  v_int32 m_count;$/;"	m	class:oatpp::collection::LinkedList	typeref:typename:v_int32
m_count	../oatpp/src/oatpp/core/collection/ListMap.hpp	/^  v_int32 m_count;$/;"	m	class:oatpp::collection::ListMap	typeref:typename:v_int32
m_counter	../oatpp/src/oatpp/core/async/Lock.hpp	/^  std::atomic<v_int32> m_counter;$/;"	m	class:oatpp::async::Lock	typeref:typename:std::atomic<v_int32>
m_counter	../oatpp/test/oatpp/core/async/LockTest.cpp	/^  v_int32 m_counter;$/;"	m	class:oatpp::test::async::__anonf33831840110::NotSynchronizedCoroutine	typeref:typename:v_int32	file:
m_counter	../oatpp/test/oatpp/core/async/LockTest.cpp	/^  v_int32 m_counter;$/;"	m	class:oatpp::test::async::__anonf33831840110::TestCoroutine	typeref:typename:v_int32	file:
m_currChunk	../oatpp/src/oatpp/web/protocol/http/outgoing/ChunkedBufferBody.hpp	/^    oatpp::data::stream::ChunkedBuffer::Chunks::LinkedListNode* m_currChunk;$/;"	m	class:oatpp::web::protocol::http::outgoing::ChunkedBufferBody::WriteToStreamCoroutine	typeref:typename:oatpp::data::stream::ChunkedBuffer::Chunks::LinkedListNode *
m_currData	../oatpp/src/oatpp/core/data/stream/ChunkedBuffer.cpp	/^    const void* m_currData;$/;"	m	class:oatpp::data::stream::ChunkedBuffer::flushToStreamAsync::FlushCoroutine	typeref:typename:const void *	file:
m_currData	../oatpp/src/oatpp/web/protocol/http/outgoing/BufferBody.hpp	/^    const void* m_currData;$/;"	m	class:oatpp::web::protocol::http::outgoing::BufferBody::WriteToStreamCoroutine	typeref:typename:const void *
m_currData	../oatpp/src/oatpp/web/protocol/http/outgoing/ChunkedBufferBody.hpp	/^    const void* m_currData;$/;"	m	class:oatpp::web::protocol::http::outgoing::ChunkedBufferBody::WriteToStreamCoroutine	typeref:typename:const void *
m_currDataSize	../oatpp/src/oatpp/core/data/stream/ChunkedBuffer.cpp	/^    data::v_io_size m_currDataSize;$/;"	m	class:oatpp::data::stream::ChunkedBuffer::flushToStreamAsync::FlushCoroutine	typeref:typename:data::v_io_size	file:
m_currDataSize	../oatpp/src/oatpp/web/protocol/http/outgoing/BufferBody.hpp	/^    oatpp::data::v_io_size m_currDataSize;$/;"	m	class:oatpp::web::protocol::http::outgoing::BufferBody::WriteToStreamCoroutine	typeref:typename:oatpp::data::v_io_size
m_currDataSize	../oatpp/src/oatpp/web/protocol/http/outgoing/ChunkedBufferBody.hpp	/^    oatpp::data::v_io_size m_currDataSize;$/;"	m	class:oatpp::web::protocol::http::outgoing::ChunkedBufferBody::WriteToStreamCoroutine	typeref:typename:oatpp::data::v_io_size
m_currEntry	../oatpp/src/oatpp/core/data/stream/ChunkedBuffer.cpp	/^    ChunkEntry* m_currEntry;$/;"	m	class:oatpp::data::stream::ChunkedBuffer::flushToStreamAsync::FlushCoroutine	typeref:typename:ChunkEntry *	file:
m_currLineLength	../oatpp/src/oatpp/web/protocol/http/incoming/SimpleBodyDecoder.cpp	/^    v_int32 m_currLineLength;$/;"	m	class:oatpp::web::protocol::http::incoming::SimpleBodyDecoder::doChunkedDecodingAsync::ChunkedDecoder	typeref:typename:v_int32	file:
m_currentRequest	../oatpp/src/oatpp/web/server/HttpProcessor.hpp	/^    std::shared_ptr<protocol::http::incoming::Request> m_currentRequest;$/;"	m	class:oatpp::web::server::HttpProcessor::Coroutine	typeref:typename:std::shared_ptr<protocol::http::incoming::Request>
m_currentResponse	../oatpp/src/oatpp/web/server/HttpProcessor.hpp	/^    std::shared_ptr<protocol::http::outgoing::Response> m_currentResponse;$/;"	m	class:oatpp::web::server::HttpProcessor::Coroutine	typeref:typename:std::shared_ptr<protocol::http::outgoing::Response>
m_currentResult	../oatpp/src/oatpp/network/client/SimpleTCPConnectionProvider.cpp	/^    struct addrinfo* m_currentResult;$/;"	m	class:oatpp::network::client::SimpleTCPConnectionProvider::getConnectionAsync::ConnectCoroutine	typeref:struct:addrinfo *	file:
m_currentRoute	../oatpp/src/oatpp/web/server/HttpProcessor.hpp	/^    oatpp::web::server::HttpRouter::BranchRouter::Route m_currentRoute;$/;"	m	class:oatpp::web::server::HttpProcessor::Coroutine	typeref:typename:oatpp::web::server::HttpRouter::BranchRouter::Route
m_data	../oatpp/src/oatpp/core/async/Coroutine.hpp	/^  Data m_data;$/;"	m	class:oatpp::async::Action	typeref:typename:Data
m_data	../oatpp/src/oatpp/core/base/StrBuffer.hpp	/^  p_char8 m_data;$/;"	m	class:oatpp::base::StrBuffer	typeref:typename:p_char8
m_data	../oatpp/src/oatpp/core/data/share/MemoryLabel.hpp	/^  p_char8 m_data;$/;"	m	class:oatpp::data::share::MemoryLabel	typeref:typename:p_char8
m_data	../oatpp/src/oatpp/core/parser/Caret.hpp	/^  p_char8 m_data;$/;"	m	class:oatpp::parser::Caret	typeref:typename:p_char8
m_data	../oatpp/test/oatpp/web/FullAsyncClientTest.cpp	/^  oatpp::String m_data;$/;"	m	class:oatpp::test::web::__anonb368a9f30110::ClientCoroutine_echoBodyAsync	typeref:typename:oatpp::String	file:
m_data1	../oatpp/src/oatpp/core/data/buffer/FIFOBuffer.cpp	/^    const void* m_data1;$/;"	m	class:oatpp::data::buffer::FIFOBuffer::flushToStreamAsync::FlushCoroutine	typeref:typename:const void *	file:
m_data2	../oatpp/src/oatpp/core/data/buffer/FIFOBuffer.cpp	/^    const void* m_data2;$/;"	m	class:oatpp::data::buffer::FIFOBuffer::flushToStreamAsync::FlushCoroutine	typeref:typename:const void *	file:
m_dataSample	../oatpp/test/oatpp/network/virtual_/InterfaceTest.cpp	/^    oatpp::String m_dataSample;$/;"	m	class:oatpp::test::network::virtual_::__anoncbc809950110::ClientTask	typeref:typename:oatpp::String	file:
m_dataSample	../oatpp/test/oatpp/network/virtual_/InterfaceTest.cpp	/^    oatpp::String m_dataSample;$/;"	m	class:oatpp::test::network::virtual_::__anoncbc809950110::Server	typeref:typename:oatpp::String	file:
m_dataSample	../oatpp/test/oatpp/network/virtual_/InterfaceTest.cpp	/^    oatpp::String m_dataSample;$/;"	m	class:oatpp::test::network::virtual_::__anoncbc809950110::ServerTask	typeref:typename:oatpp::String	file:
m_decoder	../oatpp/src/oatpp/web/protocol/http/incoming/BodyDecoder.hpp	/^    const BodyDecoder* m_decoder;$/;"	m	class:oatpp::web::protocol::http::incoming::BodyDecoder::ToDtoDecoder	typeref:typename:const BodyDecoder *
m_decoder	../oatpp/src/oatpp/web/protocol/http/incoming/BodyDecoder.hpp	/^    const BodyDecoder* m_decoder;$/;"	m	class:oatpp::web::protocol::http::incoming::BodyDecoder::ToStringDecoder	typeref:typename:const BodyDecoder *
m_defaultObjectMapper	../oatpp/src/oatpp/web/server/api/ApiController.hpp	/^  std::shared_ptr<oatpp::data::mapping::ObjectMapper> m_defaultObjectMapper;$/;"	m	class:oatpp::web::server::api::ApiController	typeref:typename:std::shared_ptr<oatpp::data::mapping::ObjectMapper>
m_deleted	../oatpp/src/oatpp/core/base/memory/MemoryPool.hpp	/^  bool m_deleted;$/;"	m	class:oatpp::base::memory::ThreadDistributedMemoryPool	typeref:typename:bool
m_desiredReadCount	../oatpp/src/oatpp/core/data/stream/Stream.cpp	/^    oatpp::data::v_io_size m_desiredReadCount;$/;"	m	class:oatpp::data::stream::transferAsync::TransferCoroutine	typeref:typename:oatpp::data::v_io_size	file:
m_done	../oatpp/src/oatpp/web/protocol/http/incoming/SimpleBodyDecoder.cpp	/^    bool m_done = false;$/;"	m	class:oatpp::web::protocol::http::incoming::SimpleBodyDecoder::doChunkedDecodingAsync::ChunkedDecoder	typeref:typename:bool	file:
m_dto	../oatpp/src/oatpp/web/protocol/http/outgoing/DtoBody.hpp	/^  oatpp::data::mapping::type::AbstractObjectWrapper m_dto;$/;"	m	class:oatpp::web::protocol::http::outgoing::DtoBody	typeref:typename:oatpp::data::mapping::type::AbstractObjectWrapper
m_end	../oatpp/src/oatpp/core/parser/Caret.hpp	/^    v_int32 m_end;$/;"	m	class:oatpp::parser::Caret::Label	typeref:typename:v_int32
m_endpoint	../oatpp/src/oatpp/web/url/mapping/Router.hpp	/^    Endpoint* m_endpoint;$/;"	m	class:oatpp::web::url::mapping::Router::Route	typeref:typename:Endpoint *
m_endpointInfo	../oatpp/src/oatpp/web/server/api/ApiController.hpp	/^  std::unordered_map<std::string, std::shared_ptr<Endpoint::Info>> m_endpointInfo;$/;"	m	class:oatpp::web::server::api::ApiController	typeref:typename:std::unordered_map<std::string,std::shared_ptr<Endpoint::Info>>
m_endpoints	../oatpp/src/oatpp/web/server/api/ApiController.hpp	/^  std::shared_ptr<Endpoints> m_endpoints;$/;"	m	class:oatpp::web::server::api::ApiController	typeref:typename:std::shared_ptr<Endpoints>
m_endpointsByPattern	../oatpp/src/oatpp/web/url/mapping/Router.hpp	/^  std::list<Pair> m_endpointsByPattern;$/;"	m	class:oatpp::web::url::mapping::Router	typeref:typename:std::list<Pair>
m_entry	../oatpp/src/oatpp/core/data/buffer/IOBuffer.hpp	/^  void* m_entry;$/;"	m	class:oatpp::data::buffer::IOBuffer	typeref:typename:void *
m_entrySize	../oatpp/src/oatpp/core/base/memory/MemoryPool.hpp	/^  v_int32 m_entrySize;$/;"	m	class:oatpp::base::memory::MemoryPool	typeref:typename:v_int32
m_errorCode	../oatpp/src/oatpp/core/parser/Caret.hpp	/^  v_int32 m_errorCode;$/;"	m	class:oatpp::parser::Caret	typeref:typename:v_int32
m_errorCode	../oatpp/src/oatpp/web/client/RequestExecutor.hpp	/^    v_int32 m_errorCode;$/;"	m	class:oatpp::web::client::RequestExecutor::RequestExecutionError	typeref:typename:v_int32
m_errorHandler	../oatpp/src/oatpp/web/server/AsyncHttpConnectionHandler.hpp	/^  std::shared_ptr<handler::ErrorHandler> m_errorHandler;$/;"	m	class:oatpp::web::server::AsyncHttpConnectionHandler	typeref:typename:std::shared_ptr<handler::ErrorHandler>
m_errorHandler	../oatpp/src/oatpp/web/server/HttpConnectionHandler.hpp	/^    std::shared_ptr<handler::ErrorHandler> m_errorHandler;$/;"	m	class:oatpp::web::server::HttpConnectionHandler::Task	typeref:typename:std::shared_ptr<handler::ErrorHandler>
m_errorHandler	../oatpp/src/oatpp/web/server/HttpConnectionHandler.hpp	/^  std::shared_ptr<handler::ErrorHandler> m_errorHandler;$/;"	m	class:oatpp::web::server::HttpConnectionHandler	typeref:typename:std::shared_ptr<handler::ErrorHandler>
m_errorHandler	../oatpp/src/oatpp/web/server/HttpProcessor.hpp	/^    std::shared_ptr<handler::ErrorHandler> m_errorHandler;$/;"	m	class:oatpp::web::server::HttpProcessor::Coroutine	typeref:typename:std::shared_ptr<handler::ErrorHandler>
m_errorHandler	../oatpp/src/oatpp/web/server/api/ApiController.hpp	/^  std::shared_ptr<handler::ErrorHandler> m_errorHandler;$/;"	m	class:oatpp::web::server::api::ApiController	typeref:typename:std::shared_ptr<handler::ErrorHandler>
m_errorMessage	../oatpp/src/oatpp/core/parser/Caret.hpp	/^  const char* m_errorMessage;$/;"	m	class:oatpp::parser::Caret	typeref:typename:const char *
m_eventQueueHandle	../oatpp/src/oatpp/core/async/worker/IOEventWorker.hpp	/^  oatpp::data::v_io_handle m_eventQueueHandle;$/;"	m	class:oatpp::async::worker::IOEventWorker	typeref:typename:oatpp::data::v_io_handle
m_executor	../oatpp/src/oatpp/web/server/AsyncHttpConnectionHandler.hpp	/^  std::shared_ptr<oatpp::async::Executor> m_executor;$/;"	m	class:oatpp::web::server::AsyncHttpConnectionHandler	typeref:typename:std::shared_ptr<oatpp::async::Executor>
m_fifo	../oatpp/src/oatpp/core/data/buffer/FIFOBuffer.cpp	/^    std::shared_ptr<FIFOBuffer> m_fifo;$/;"	m	class:oatpp::data::buffer::FIFOBuffer::flushToStreamAsync::FlushCoroutine	typeref:typename:std::shared_ptr<FIFOBuffer>	file:
m_fifo	../oatpp/src/oatpp/core/data/buffer/FIFOBuffer.hpp	/^  FIFOBuffer m_fifo;$/;"	m	class:oatpp::data::buffer::SynchronizedFIFOBuffer	typeref:typename:FIFOBuffer
m_fifo	../oatpp/src/oatpp/network/virtual_/Pipe.hpp	/^  oatpp::data::buffer::SynchronizedFIFOBuffer m_fifo;$/;"	m	class:oatpp::network::virtual_::Pipe	typeref:typename:oatpp::data::buffer::SynchronizedFIFOBuffer
m_first	../oatpp/src/oatpp/core/async/Coroutine.hpp	/^  AbstractCoroutine* m_first;$/;"	m	class:oatpp::async::CoroutineStarter	typeref:typename:AbstractCoroutine *
m_first	../oatpp/src/oatpp/core/collection/LinkedList.hpp	/^  LinkedListNode* m_first;$/;"	m	class:oatpp::collection::LinkedList	typeref:typename:LinkedListNode *
m_first	../oatpp/src/oatpp/core/collection/ListMap.hpp	/^  Entry* m_first;$/;"	m	class:oatpp::collection::ListMap	typeref:typename:Entry *
m_firstEntry	../oatpp/src/oatpp/core/data/stream/ChunkedBuffer.hpp	/^  ChunkEntry* m_firstEntry;$/;"	m	class:oatpp::data::stream::ChunkedBuffer	typeref:typename:ChunkEntry *
m_foreman	../oatpp/src/oatpp/core/async/worker/IOEventWorker.hpp	/^  IOEventWorkerForeman* m_foreman;$/;"	m	class:oatpp::async::worker::IOEventWorker	typeref:typename:IOEventWorkerForeman *
m_fromStream	../oatpp/src/oatpp/core/data/stream/Stream.cpp	/^    std::shared_ptr<InputStream> m_fromStream;$/;"	m	class:oatpp::data::stream::transferAsync::TransferCoroutine	typeref:typename:std::shared_ptr<InputStream>	file:
m_fromStream	../oatpp/src/oatpp/web/protocol/http/incoming/SimpleBodyDecoder.cpp	/^    std::shared_ptr<oatpp::data::stream::InputStream> m_fromStream;$/;"	m	class:oatpp::web::protocol::http::incoming::SimpleBodyDecoder::doChunkedDecodingAsync::ChunkedDecoder	typeref:typename:std::shared_ptr<oatpp::data::stream::InputStream>	file:
m_granularity	../oatpp/src/oatpp/core/async/worker/TimerWorker.hpp	/^  std::chrono::duration<v_int64, std::micro> m_granularity;$/;"	m	class:oatpp::async::worker::TimerWorker	typeref:typename:std::chrono::duration<v_int64,std::micro>
m_growSize	../oatpp/src/oatpp/core/base/memory/MemoryPool.hpp	/^  v_int32 m_growSize;$/;"	m	class:oatpp::base::memory::Bench	typeref:typename:v_int32
m_guard	../oatpp/src/oatpp/core/async/Lock.cpp	/^    LockGuard* m_guard;$/;"	m	class:oatpp::async::LockGuard::lockAsync::LockCoroutine	typeref:typename:LockGuard *	file:
m_handle	../oatpp/src/oatpp/network/Connection.hpp	/^  data::v_io_handle m_handle;$/;"	m	class:oatpp::network::Connection	typeref:typename:data::v_io_handle
m_hasOwnData	../oatpp/src/oatpp/core/base/StrBuffer.hpp	/^  bool m_hasOwnData;$/;"	m	class:oatpp::base::StrBuffer	typeref:typename:bool
m_headers	../oatpp/src/oatpp/web/client/HttpRequestExecutor.cpp	/^    Headers m_headers;$/;"	m	class:oatpp::web::client::HttpRequestExecutor::executeAsync::ExecutorCoroutine	typeref:typename:Headers	file:
m_headers	../oatpp/src/oatpp/web/protocol/http/incoming/BodyDecoder.hpp	/^    Headers m_headers;$/;"	m	class:oatpp::web::protocol::http::incoming::BodyDecoder::ToDtoDecoder	typeref:typename:Headers
m_headers	../oatpp/src/oatpp/web/protocol/http/incoming/BodyDecoder.hpp	/^    Headers m_headers;$/;"	m	class:oatpp::web::protocol::http::incoming::BodyDecoder::ToStringDecoder	typeref:typename:Headers
m_headers	../oatpp/src/oatpp/web/protocol/http/incoming/Request.hpp	/^  http::Headers m_headers;$/;"	m	class:oatpp::web::protocol::http::incoming::Request	typeref:typename:http::Headers
m_headers	../oatpp/src/oatpp/web/protocol/http/incoming/Response.hpp	/^  http::Headers m_headers;$/;"	m	class:oatpp::web::protocol::http::incoming::Response	typeref:typename:http::Headers
m_headers	../oatpp/src/oatpp/web/protocol/http/outgoing/Request.hpp	/^  Headers m_headers;$/;"	m	class:oatpp::web::protocol::http::outgoing::Request	typeref:typename:Headers
m_headers	../oatpp/src/oatpp/web/protocol/http/outgoing/Response.hpp	/^  Headers m_headers;$/;"	m	class:oatpp::web::protocol::http::outgoing::Response	typeref:typename:Headers
m_host	../oatpp/src/oatpp/network/client/SimpleTCPConnectionProvider.cpp	/^    oatpp::String m_host;$/;"	m	class:oatpp::network::client::SimpleTCPConnectionProvider::getConnectionAsync::ConnectCoroutine	typeref:typename:oatpp::String	file:
m_host	../oatpp/src/oatpp/network/client/SimpleTCPConnectionProvider.hpp	/^  oatpp::String m_host;$/;"	m	class:oatpp::network::client::SimpleTCPConnectionProvider	typeref:typename:oatpp::String
m_id	../oatpp/src/oatpp/core/base/memory/MemoryPool.hpp	/^  v_int64 m_id;$/;"	m	class:oatpp::base::memory::MemoryPool	typeref:typename:v_int64
m_inEvents	../oatpp/src/oatpp/core/async/worker/IOEventWorker.hpp	/^  std::unique_ptr<v_char8[]> m_inEvents;$/;"	m	class:oatpp::async::worker::IOEventWorker	typeref:typename:std::unique_ptr<v_char8[]>
m_inEventsCapacity	../oatpp/src/oatpp/core/async/worker/IOEventWorker.hpp	/^  v_int32 m_inEventsCapacity;$/;"	m	class:oatpp::async::worker::IOEventWorker	typeref:typename:v_int32
m_inEventsCount	../oatpp/src/oatpp/core/async/worker/IOEventWorker.hpp	/^  v_int32 m_inEventsCount;$/;"	m	class:oatpp::async::worker::IOEventWorker	typeref:typename:v_int32
m_inStream	../oatpp/src/oatpp/web/server/HttpProcessor.hpp	/^    std::shared_ptr<oatpp::data::stream::InputStreamBufferedProxy> m_inStream;$/;"	m	class:oatpp::web::server::HttpProcessor::Coroutine	typeref:typename:std::shared_ptr<oatpp::data::stream::InputStreamBufferedProxy>
m_index	../oatpp/src/oatpp/core/base/memory/MemoryPool.hpp	/^  T** m_index;$/;"	m	class:oatpp::base::memory::Bench	typeref:typename:T **
m_indexPosition	../oatpp/src/oatpp/core/base/memory/MemoryPool.hpp	/^  v_int32 m_indexPosition;$/;"	m	class:oatpp::base::memory::Bench	typeref:typename:v_int32
m_info	../oatpp/src/oatpp/core/base/memory/Allocator.hpp	/^  AllocationExtras& m_info;$/;"	m	class:oatpp::base::memory::CustomPoolSharedObjectAllocator	typeref:typename:AllocationExtras &
m_info	../oatpp/src/oatpp/core/base/memory/Allocator.hpp	/^  AllocationExtras& m_info;$/;"	m	class:oatpp::base::memory::SharedObjectAllocator	typeref:typename:AllocationExtras &
m_info	../oatpp/src/oatpp/core/data/mapping/ObjectMapper.hpp	/^  Info m_info;$/;"	m	class:oatpp::data::mapping::ObjectMapper	typeref:typename:Info
m_info	../oatpp/src/oatpp/web/protocol/CommunicationError.hpp	/^  Info m_info;$/;"	m	class:oatpp::web::protocol::AsyncProtocolError	typeref:typename:Info
m_info	../oatpp/src/oatpp/web/protocol/CommunicationError.hpp	/^  Info m_info;$/;"	m	class:oatpp::web::protocol::ProtocolError	typeref:typename:Info
m_inputStream	../oatpp/src/oatpp/core/data/stream/Stream.hpp	/^  std::shared_ptr<InputStream> m_inputStream;$/;"	m	class:oatpp::data::stream::CompoundIOStream	typeref:typename:std::shared_ptr<InputStream>
m_inputStream	../oatpp/src/oatpp/core/data/stream/StreamBufferedProxy.hpp	/^  std::shared_ptr<InputStream> m_inputStream;$/;"	m	class:oatpp::data::stream::InputStreamBufferedProxy	typeref:typename:std::shared_ptr<InputStream>
m_interface	../oatpp/src/oatpp/network/virtual_/client/ConnectionProvider.cpp	/^    std::shared_ptr<virtual_::Interface> m_interface;$/;"	m	class:oatpp::network::virtual_::client::ConnectionProvider::getConnectionAsync::ConnectCoroutine	typeref:typename:std::shared_ptr<virtual_::Interface>	file:
m_interface	../oatpp/src/oatpp/network/virtual_/client/ConnectionProvider.hpp	/^  std::shared_ptr<virtual_::Interface> m_interface;$/;"	m	class:oatpp::network::virtual_::client::ConnectionProvider	typeref:typename:std::shared_ptr<virtual_::Interface>
m_interface	../oatpp/src/oatpp/network/virtual_/server/ConnectionProvider.hpp	/^  std::shared_ptr<virtual_::Interface> m_interface;$/;"	m	class:oatpp::network::virtual_::server::ConnectionProvider	typeref:typename:std::shared_ptr<virtual_::Interface>
m_interface	../oatpp/test/oatpp/network/virtual_/InterfaceTest.cpp	/^    std::shared_ptr<Interface> m_interface;$/;"	m	class:oatpp::test::network::virtual_::__anoncbc809950110::ClientTask	typeref:typename:std::shared_ptr<Interface>	file:
m_interface	../oatpp/test/oatpp/network/virtual_/InterfaceTest.cpp	/^    std::shared_ptr<Interface> m_interface;$/;"	m	class:oatpp::test::network::virtual_::__anoncbc809950110::Server	typeref:typename:std::shared_ptr<Interface>	file:
m_ioBalancer	../oatpp/src/oatpp/core/async/Processor.hpp	/^  v_word32 m_ioBalancer = 0;$/;"	m	class:oatpp::async::Processor	typeref:typename:v_word32
m_ioBuffer	../oatpp/src/oatpp/web/client/HttpRequestExecutor.cpp	/^    std::shared_ptr<oatpp::data::buffer::IOBuffer> m_ioBuffer;$/;"	m	class:oatpp::web::client::HttpRequestExecutor::executeAsync::ExecutorCoroutine	typeref:typename:std::shared_ptr<oatpp::data::buffer::IOBuffer>	file:
m_ioBuffer	../oatpp/src/oatpp/web/server/HttpProcessor.hpp	/^    std::shared_ptr<oatpp::data::buffer::IOBuffer> m_ioBuffer;$/;"	m	class:oatpp::web::server::HttpProcessor::Coroutine	typeref:typename:std::shared_ptr<oatpp::data::buffer::IOBuffer>
m_ioMode	../oatpp/src/oatpp/core/data/stream/ChunkedBuffer.hpp	/^  IOMode m_ioMode;$/;"	m	class:oatpp::data::stream::ChunkedBuffer	typeref:typename:IOMode
m_ioMode	../oatpp/src/oatpp/network/virtual_/Pipe.hpp	/^    oatpp::data::stream::IOMode m_ioMode;$/;"	m	class:oatpp::network::virtual_::Pipe::Reader	typeref:typename:oatpp::data::stream::IOMode
m_ioMode	../oatpp/src/oatpp/network/virtual_/Pipe.hpp	/^    oatpp::data::stream::IOMode m_ioMode;$/;"	m	class:oatpp::network::virtual_::Pipe::Writer	typeref:typename:oatpp::data::stream::IOMode
m_ioPopQueues	../oatpp/src/oatpp/core/async/Processor.hpp	/^  std::vector<oatpp::collection::FastQueue<AbstractCoroutine>> m_ioPopQueues;$/;"	m	class:oatpp::async::Processor	typeref:typename:std::vector<oatpp::collection::FastQueue<AbstractCoroutine>>
m_ioStatus	../oatpp/src/oatpp/web/protocol/CommunicationError.hpp	/^  oatpp::data::v_io_size m_ioStatus;$/;"	m	class:oatpp::web::protocol::CommunicationError	typeref:typename:oatpp::data::v_io_size
m_ioWorkers	../oatpp/src/oatpp/core/async/Processor.hpp	/^  std::vector<std::shared_ptr<worker::Worker>> m_ioWorkers;$/;"	m	class:oatpp::async::Processor	typeref:typename:std::vector<std::shared_ptr<worker::Worker>>
m_isRunning	../oatpp/src/oatpp/core/async/Executor.hpp	/^    bool m_isRunning;$/;"	m	class:oatpp::async::Executor::SubmissionProcessor	typeref:typename:bool
m_itemMemoryPool	../oatpp/src/oatpp/core/collection/LinkedList.hpp	/^  oatpp::base::memory::MemoryPool& m_itemMemoryPool;$/;"	m	class:oatpp::collection::LinkedList	typeref:typename:oatpp::base::memory::MemoryPool &
m_itemMemoryPool	../oatpp/src/oatpp/core/collection/ListMap.hpp	/^  oatpp::base::memory::MemoryPool& m_itemMemoryPool;$/;"	m	class:oatpp::collection::ListMap	typeref:typename:oatpp::base::memory::MemoryPool &
m_iterationsPerStep	../oatpp/test/oatpp/web/FullAsyncTest.hpp	/^  v_int32 m_iterationsPerStep;$/;"	m	class:oatpp::test::web::FullAsyncTest	typeref:typename:v_int32
m_iterationsPerStep	../oatpp/test/oatpp/web/FullTest.hpp	/^  v_int32 m_iterationsPerStep;$/;"	m	class:oatpp::test::web::FullTest	typeref:typename:v_int32
m_last	../oatpp/src/oatpp/core/async/Coroutine.hpp	/^  AbstractCoroutine* m_last;$/;"	m	class:oatpp::async::CoroutineStarter	typeref:typename:AbstractCoroutine *
m_last	../oatpp/src/oatpp/core/collection/LinkedList.hpp	/^  LinkedListNode* m_last;$/;"	m	class:oatpp::collection::LinkedList	typeref:typename:LinkedListNode *
m_last	../oatpp/src/oatpp/core/collection/ListMap.hpp	/^  Entry* m_last;$/;"	m	class:oatpp::collection::ListMap	typeref:typename:Entry *
m_lastEntry	../oatpp/src/oatpp/core/data/stream/ChunkedBuffer.hpp	/^  ChunkEntry* m_lastEntry;$/;"	m	class:oatpp::data::stream::ChunkedBuffer	typeref:typename:ChunkEntry *
m_lineBuffer	../oatpp/src/oatpp/web/protocol/http/incoming/SimpleBodyDecoder.cpp	/^    v_char8 m_lineBuffer [16]; \/\/ used max 8$/;"	m	class:oatpp::web::protocol::http::incoming::SimpleBodyDecoder::doChunkedDecodingAsync::ChunkedDecoder	typeref:typename:v_char8[16]	file:
m_lineChar	../oatpp/src/oatpp/web/protocol/http/incoming/SimpleBodyDecoder.cpp	/^    v_char8 m_lineChar;$/;"	m	class:oatpp::web::protocol::http::incoming::SimpleBodyDecoder::doChunkedDecodingAsync::ChunkedDecoder	typeref:typename:v_char8	file:
m_lineEnding	../oatpp/src/oatpp/web/protocol/http/incoming/SimpleBodyDecoder.cpp	/^    bool m_lineEnding;$/;"	m	class:oatpp::web::protocol::http::incoming::SimpleBodyDecoder::doChunkedDecodingAsync::ChunkedDecoder	typeref:typename:bool	file:
m_list	../oatpp/src/oatpp/core/async/CoroutineWaitList.hpp	/^  oatpp::collection::FastQueue<AbstractCoroutine> m_list;$/;"	m	class:oatpp::async::CoroutineWaitList	typeref:typename:oatpp::collection::FastQueue<AbstractCoroutine>
m_list	../oatpp/src/oatpp/core/async/Lock.hpp	/^  CoroutineWaitList m_list;$/;"	m	class:oatpp::async::Lock	typeref:typename:CoroutineWaitList
m_list	../oatpp/src/oatpp/core/data/mapping/type/Type.hpp	/^    std::list<Property*> m_list;$/;"	m	class:oatpp::data::mapping::type::Type::Properties	typeref:typename:std::list<Property * >
m_listener	../oatpp/src/oatpp/core/async/CoroutineWaitList.hpp	/^  Listener* m_listener = nullptr;$/;"	m	class:oatpp::async::CoroutineWaitList	typeref:typename:Listener *
m_lock	../oatpp/src/oatpp/core/async/CoroutineWaitList.hpp	/^  oatpp::concurrency::SpinLock m_lock;$/;"	m	class:oatpp::async::CoroutineWaitList	typeref:typename:oatpp::concurrency::SpinLock
m_lock	../oatpp/src/oatpp/core/async/Lock.hpp	/^  Lock* m_lock;$/;"	m	class:oatpp::async::LockGuard	typeref:typename:Lock *
m_lock	../oatpp/src/oatpp/core/base/Environment.hpp	/^  std::mutex m_lock;$/;"	m	class:oatpp::base::DefaultLogger	typeref:typename:std::mutex
m_lock	../oatpp/src/oatpp/core/base/memory/MemoryPool.hpp	/^  oatpp::concurrency::SpinLock m_lock;$/;"	m	class:oatpp::base::memory::MemoryPool	typeref:typename:oatpp::concurrency::SpinLock
m_lock	../oatpp/src/oatpp/core/data/buffer/FIFOBuffer.hpp	/^  oatpp::concurrency::SpinLock m_lock;$/;"	m	class:oatpp::data::buffer::SynchronizedFIFOBuffer	typeref:typename:oatpp::concurrency::SpinLock
m_lock	../oatpp/test/oatpp/core/async/LockTest.cpp	/^  oatpp::async::Lock *m_lock;$/;"	m	class:oatpp::test::async::__anonf33831840110::TestCoroutine2	typeref:typename:oatpp::async::Lock *	file:
m_lock	src/Utils.hpp	/^  oatpp::concurrency::SpinLock m_lock;$/;"	m	class:StaticFilesManager	typeref:typename:oatpp::concurrency::SpinLock
m_lockGuard	../oatpp/src/oatpp/core/async/Lock.cpp	/^    oatpp::async::LockGuard m_lockGuard;$/;"	m	class:oatpp::async::synchronize::Synchronized	typeref:typename:oatpp::async::LockGuard	file:
m_lockGuard	../oatpp/test/oatpp/core/async/LockTest.cpp	/^  oatpp::async::LockGuard m_lockGuard;$/;"	m	class:oatpp::test::async::__anonf33831840110::TestCoroutine	typeref:typename:oatpp::async::LockGuard	file:
m_logger	../oatpp/src/oatpp/core/base/Environment.cpp	/^std::shared_ptr<Logger> Environment::m_logger;$/;"	m	class:oatpp::base::Environment	typeref:typename:std::shared_ptr<Logger>
m_logger	../oatpp/src/oatpp/core/base/Environment.hpp	/^  static std::shared_ptr<Logger> m_logger;$/;"	m	class:oatpp::base::Environment	typeref:typename:std::shared_ptr<Logger>
m_map	../oatpp/src/oatpp/core/data/mapping/type/Type.hpp	/^    std::unordered_map<std::string, Property*> m_map;$/;"	m	class:oatpp::data::mapping::type::Type::Properties	typeref:typename:std::unordered_map<std::string,Property * >
m_maxAvailableToRead	../oatpp/src/oatpp/network/virtual_/Pipe.hpp	/^    data::v_io_size m_maxAvailableToRead;$/;"	m	class:oatpp::network::virtual_::Pipe::Reader	typeref:typename:data::v_io_size
m_maxAvailableToRead	../oatpp/src/oatpp/network/virtual_/client/ConnectionProvider.cpp	/^    data::v_io_size m_maxAvailableToRead;$/;"	m	class:oatpp::network::virtual_::client::ConnectionProvider::getConnectionAsync::ConnectCoroutine	typeref:typename:data::v_io_size	file:
m_maxAvailableToRead	../oatpp/src/oatpp/network/virtual_/client/ConnectionProvider.hpp	/^  data::v_io_size m_maxAvailableToRead;$/;"	m	class:oatpp::network::virtual_::client::ConnectionProvider	typeref:typename:data::v_io_size
m_maxAvailableToRead	../oatpp/src/oatpp/network/virtual_/server/ConnectionProvider.hpp	/^  data::v_io_size m_maxAvailableToRead;$/;"	m	class:oatpp::network::virtual_::server::ConnectionProvider	typeref:typename:data::v_io_size
m_maxAvailableToWrite	../oatpp/src/oatpp/network/virtual_/client/ConnectionProvider.cpp	/^    data::v_io_size m_maxAvailableToWrite;$/;"	m	class:oatpp::network::virtual_::client::ConnectionProvider::getConnectionAsync::ConnectCoroutine	typeref:typename:data::v_io_size	file:
m_maxAvailableToWrite	../oatpp/src/oatpp/network/virtual_/client/ConnectionProvider.hpp	/^  data::v_io_size m_maxAvailableToWrite;$/;"	m	class:oatpp::network::virtual_::client::ConnectionProvider	typeref:typename:data::v_io_size
m_maxAvailableToWrite	../oatpp/src/oatpp/network/virtual_/server/ConnectionProvider.hpp	/^  data::v_io_size m_maxAvailableToWrite;$/;"	m	class:oatpp::network::virtual_::server::ConnectionProvider	typeref:typename:data::v_io_size
m_maxAvailableToWrtie	../oatpp/src/oatpp/network/virtual_/Pipe.hpp	/^    data::v_io_size m_maxAvailableToWrtie;$/;"	m	class:oatpp::network::virtual_::Pipe::Writer	typeref:typename:data::v_io_size
m_maxHeadersSize	../oatpp/src/oatpp/web/protocol/http/incoming/RequestHeadersReader.cpp	/^    v_int32 m_maxHeadersSize;$/;"	m	class:oatpp::web::protocol::http::incoming::RequestHeadersReader::readHeadersAsync::ReaderCoroutine	typeref:typename:v_int32	file:
m_maxHeadersSize	../oatpp/src/oatpp/web/protocol/http/incoming/RequestHeadersReader.hpp	/^  v_int32 m_maxHeadersSize;$/;"	m	class:oatpp::web::protocol::http::incoming::RequestHeadersReader	typeref:typename:v_int32
m_maxHeadersSize	../oatpp/src/oatpp/web/protocol/http/incoming/ResponseHeadersReader.cpp	/^    v_int32 m_maxHeadersSize;$/;"	m	class:oatpp::web::protocol::http::incoming::ResponseHeadersReader::readHeadersAsync::ReaderCoroutine	typeref:typename:v_int32	file:
m_maxHeadersSize	../oatpp/src/oatpp/web/protocol/http/incoming/ResponseHeadersReader.hpp	/^  v_int32 m_maxHeadersSize;$/;"	m	class:oatpp::web::protocol::http::incoming::ResponseHeadersReader	typeref:typename:v_int32
m_memoryHandle	../oatpp/src/oatpp/core/data/share/MemoryLabel.hpp	/^  std::shared_ptr<base::StrBuffer> m_memoryHandle;$/;"	m	class:oatpp::data::share::MemoryLabel	typeref:typename:std::shared_ptr<base::StrBuffer>
m_message	../oatpp/src/oatpp/core/parser/ParsingError.hpp	/^  oatpp::String m_message;$/;"	m	class:oatpp::parser::ParsingError	typeref:typename:oatpp::String
m_message	../oatpp/src/oatpp/web/client/RequestExecutor.hpp	/^    const char* m_message;$/;"	m	class:oatpp::web::client::RequestExecutor::RequestExecutionError	typeref:typename:const char *
m_message	../oatpp/src/oatpp/web/protocol/CommunicationError.hpp	/^  oatpp::String m_message;$/;"	m	class:oatpp::web::protocol::AsyncProtocolError	typeref:typename:oatpp::String
m_message	../oatpp/src/oatpp/web/protocol/CommunicationError.hpp	/^  oatpp::String m_message;$/;"	m	class:oatpp::web::protocol::CommunicationError	typeref:typename:oatpp::String
m_method	../oatpp/src/oatpp/web/client/HttpRequestExecutor.cpp	/^    String m_method;$/;"	m	class:oatpp::web::client::HttpRequestExecutor::executeAsync::ExecutorCoroutine	typeref:typename:String	file:
m_method	../oatpp/src/oatpp/web/protocol/http/outgoing/Request.hpp	/^  oatpp::data::share::StringKeyLabel m_method;$/;"	m	class:oatpp::web::protocol::http::outgoing::Request	typeref:typename:oatpp::data::share::StringKeyLabel
m_method	../oatpp/src/oatpp/web/server/api/ApiController.hpp	/^    Method m_method;$/;"	m	class:oatpp::web::server::api::ApiController::Handler	typeref:typename:Method
m_methodAsync	../oatpp/src/oatpp/web/server/api/ApiController.hpp	/^    MethodAsync m_methodAsync;$/;"	m	class:oatpp::web::server::api::ApiController::Handler	typeref:typename:MethodAsync
m_mutex	../oatpp/src/oatpp/core/async/Lock.hpp	/^  std::mutex m_mutex;$/;"	m	class:oatpp::async::Lock	typeref:typename:std::mutex
m_mutex	../oatpp/src/oatpp/network/virtual_/Interface.hpp	/^    std::mutex m_mutex;$/;"	m	class:oatpp::network::virtual_::Interface::ConnectionSubmission	typeref:typename:std::mutex
m_mutex	../oatpp/src/oatpp/network/virtual_/Interface.hpp	/^  std::mutex m_mutex;$/;"	m	class:oatpp::network::virtual_::Interface	typeref:typename:std::mutex
m_mutex	../oatpp/src/oatpp/network/virtual_/Pipe.hpp	/^  std::mutex m_mutex;$/;"	m	class:oatpp::network::virtual_::Pipe	typeref:typename:std::mutex
m_mutex	../oatpp/test/oatpp/core/async/LockTest.cpp	/^  std::mutex m_mutex;$/;"	m	class:oatpp::test::async::__anonf33831840110::Buff	typeref:typename:std::mutex	file:
m_name	../oatpp/src/oatpp/core/base/Environment.hpp	/^    std::string m_name;$/;"	m	class:oatpp::base::Environment::Component	typeref:typename:std::string
m_name	../oatpp/src/oatpp/core/base/memory/MemoryPool.hpp	/^  std::string m_name;$/;"	m	class:oatpp::base::memory::MemoryPool	typeref:typename:std::string
m_name	../oatpp/src/oatpp/network/virtual_/Interface.hpp	/^  oatpp::String m_name;$/;"	m	class:oatpp::network::virtual_::Interface	typeref:typename:oatpp::String
m_nextAction	../oatpp/src/oatpp/core/data/stream/ChunkedBuffer.cpp	/^    Action m_nextAction;$/;"	m	class:oatpp::data::stream::ChunkedBuffer::flushToStreamAsync::FlushCoroutine	typeref:typename:Action	file:
m_nextAction	../oatpp/src/oatpp/web/protocol/http/outgoing/ChunkedBufferBody.hpp	/^    Action m_nextAction;$/;"	m	class:oatpp::web::protocol::http::outgoing::ChunkedBufferBody::WriteToStreamCoroutine	typeref:typename:Action
m_numTasks	../oatpp/test/oatpp/network/virtual_/InterfaceTest.cpp	/^    v_int32 m_numTasks;$/;"	m	class:oatpp::test::network::virtual_::__anoncbc809950110::Server	typeref:typename:v_int32	file:
m_object	../oatpp/src/oatpp/core/base/Environment.hpp	/^    T m_object;$/;"	m	class:oatpp::base::Environment::Component	typeref:typename:T
m_objectMapper	../oatpp/src/oatpp/web/client/ApiClient.hpp	/^  std::shared_ptr<oatpp::data::mapping::ObjectMapper> m_objectMapper;$/;"	m	class:oatpp::web::client::ApiClient	typeref:typename:std::shared_ptr<oatpp::data::mapping::ObjectMapper>
m_objectMapper	../oatpp/src/oatpp/web/protocol/http/incoming/BodyDecoder.hpp	/^    std::shared_ptr<oatpp::data::mapping::ObjectMapper> m_objectMapper;$/;"	m	class:oatpp::web::protocol::http::incoming::BodyDecoder::ToDtoDecoder	typeref:typename:std::shared_ptr<oatpp::data::mapping::ObjectMapper>
m_objectMapper	../oatpp/src/oatpp/web/protocol/http/outgoing/DtoBody.hpp	/^  oatpp::data::mapping::ObjectMapper* m_objectMapper;$/;"	m	class:oatpp::web::protocol::http::outgoing::DtoBody	typeref:typename:oatpp::data::mapping::ObjectMapper *
m_objectPtr	../oatpp/src/oatpp/core/async/Coroutine.hpp	/^    void* m_objectPtr;$/;"	m	class:oatpp::async::AbstractCoroutine::MemberCaller	typeref:typename:void *
m_objectsCount	../oatpp/src/oatpp-test/Checker.hpp	/^  v_counter m_objectsCount;$/;"	m	class:oatpp::test::ThreadLocalObjectsChecker	typeref:typename:v_counter
m_objectsCount	../oatpp/src/oatpp/core/base/Environment.cpp	/^v_atomicCounter Environment::m_objectsCount(0);$/;"	m	class:oatpp::base::Environment	typeref:typename:v_atomicCounter
m_objectsCount	../oatpp/src/oatpp/core/base/Environment.hpp	/^  static v_atomicCounter m_objectsCount;$/;"	m	class:oatpp::base::Environment	typeref:typename:v_atomicCounter
m_objectsCount	../oatpp/src/oatpp/core/base/memory/MemoryPool.hpp	/^  v_int32 m_objectsCount;$/;"	m	class:oatpp::base::memory::MemoryPool	typeref:typename:v_int32
m_objectsCreated	../oatpp/src/oatpp-test/Checker.hpp	/^  v_counter m_objectsCreated;$/;"	m	class:oatpp::test::ThreadLocalObjectsChecker	typeref:typename:v_counter
m_objectsCreated	../oatpp/src/oatpp/core/base/Environment.cpp	/^v_atomicCounter Environment::m_objectsCreated(0);$/;"	m	class:oatpp::base::Environment	typeref:typename:v_atomicCounter
m_objectsCreated	../oatpp/src/oatpp/core/base/Environment.hpp	/^  static v_atomicCounter m_objectsCreated;$/;"	m	class:oatpp::base::Environment	typeref:typename:v_atomicCounter
m_open	../oatpp/src/oatpp/network/virtual_/Pipe.hpp	/^  bool m_open;$/;"	m	class:oatpp::network::virtual_::Pipe	typeref:typename:bool
m_open	../oatpp/src/oatpp/network/virtual_/server/ConnectionProvider.hpp	/^  bool m_open;$/;"	m	class:oatpp::network::virtual_::server::ConnectionProvider	typeref:typename:bool
m_order	../oatpp/src/oatpp/web/server/api/Endpoint.hpp	/^      std::list<oatpp::String> m_order;$/;"	m	class:oatpp::web::server::api::Endpoint::Info::Params	typeref:typename:std::list<oatpp::String>
m_outEvents	../oatpp/src/oatpp/core/async/worker/IOEventWorker.hpp	/^  std::unique_ptr<v_char8[]> m_outEvents;$/;"	m	class:oatpp::async::worker::IOEventWorker	typeref:typename:std::unique_ptr<v_char8[]>
m_outStream	../oatpp/src/oatpp/web/server/HttpProcessor.hpp	/^    std::shared_ptr<oatpp::data::stream::OutputStreamBufferedProxy> m_outStream;$/;"	m	class:oatpp::web::server::HttpProcessor::Coroutine	typeref:typename:std::shared_ptr<oatpp::data::stream::OutputStreamBufferedProxy>
m_outputStream	../oatpp/src/oatpp/core/data/stream/Stream.hpp	/^  std::shared_ptr<OutputStream> m_outputStream;$/;"	m	class:oatpp::data::stream::CompoundIOStream	typeref:typename:std::shared_ptr<OutputStream>
m_outputStream	../oatpp/src/oatpp/core/data/stream/StreamBufferedProxy.hpp	/^  std::shared_ptr<OutputStream> m_outputStream;$/;"	m	class:oatpp::data::stream::OutputStreamBufferedProxy	typeref:typename:std::shared_ptr<OutputStream>
m_ownsLock	../oatpp/src/oatpp/core/async/Lock.hpp	/^  bool m_ownsLock;$/;"	m	class:oatpp::async::LockGuard	typeref:typename:bool
m_params	../oatpp/src/oatpp/core/async/Processor.hpp	/^    std::tuple<Args...> m_params;$/;"	m	class:oatpp::async::Processor::SubmissionTemplate	typeref:typename:std::tuple<Args...>
m_params	../oatpp/src/oatpp/web/server/api/Endpoint.hpp	/^      std::unordered_map<oatpp::String, Param> m_params;$/;"	m	class:oatpp::web::server::api::Endpoint::Info::Params	typeref:typename:std::unordered_map<oatpp::String,Param>
m_parent	../oatpp/src/oatpp/core/async/Coroutine.hpp	/^  AbstractCoroutine* m_parent;$/;"	m	class:oatpp::async::AbstractCoroutine	typeref:typename:AbstractCoroutine *
m_parentReturnAction	../oatpp/src/oatpp/core/async/Coroutine.hpp	/^  oatpp::async::Action m_parentReturnAction;$/;"	m	class:oatpp::async::AbstractCoroutine	typeref:typename:oatpp::async::Action
m_parts	../oatpp/src/oatpp/web/url/mapping/Pattern.hpp	/^  std::shared_ptr<oatpp::collection::LinkedList<std::shared_ptr<Part>>> m_parts;$/;"	m	class:oatpp::web::url::mapping::Pattern	typeref:typename:std::shared_ptr<oatpp::collection::LinkedList<std::shared_ptr<Part>>>
m_path	../oatpp/src/oatpp/web/client/HttpRequestExecutor.cpp	/^    String m_path;$/;"	m	class:oatpp::web::client::HttpRequestExecutor::executeAsync::ExecutorCoroutine	typeref:typename:String	file:
m_path	../oatpp/src/oatpp/web/protocol/http/outgoing/Request.hpp	/^  oatpp::data::share::StringKeyLabel m_path;$/;"	m	class:oatpp::web::protocol::http::outgoing::Request	typeref:typename:oatpp::data::share::StringKeyLabel
m_pathVariables	../oatpp/src/oatpp/web/protocol/http/incoming/Request.hpp	/^  url::mapping::Pattern::MatchMap m_pathVariables;$/;"	m	class:oatpp::web::protocol::http::incoming::Request	typeref:typename:url::mapping::Pattern::MatchMap
m_pipe	../oatpp/src/oatpp/network/virtual_/Pipe.hpp	/^      Pipe* m_pipe;$/;"	m	class:oatpp::network::virtual_::Pipe::Reader::WaitListListener	typeref:typename:Pipe *
m_pipe	../oatpp/src/oatpp/network/virtual_/Pipe.hpp	/^      Pipe* m_pipe;$/;"	m	class:oatpp::network::virtual_::Pipe::Writer::WaitListListener	typeref:typename:Pipe *
m_pipe	../oatpp/src/oatpp/network/virtual_/Pipe.hpp	/^    Pipe* m_pipe;$/;"	m	class:oatpp::network::virtual_::Pipe::Reader	typeref:typename:Pipe *
m_pipe	../oatpp/src/oatpp/network/virtual_/Pipe.hpp	/^    Pipe* m_pipe;$/;"	m	class:oatpp::network::virtual_::Pipe::Writer	typeref:typename:Pipe *
m_pipe	../oatpp/test/oatpp/network/virtual_/PipeTest.cpp	/^    std::shared_ptr<Pipe> m_pipe;$/;"	m	class:oatpp::test::network::virtual_::__anon0e2557b20110::ReaderTask	typeref:typename:std::shared_ptr<Pipe>	file:
m_pipe	../oatpp/test/oatpp/network/virtual_/PipeTest.cpp	/^    std::shared_ptr<Pipe> m_pipe;$/;"	m	class:oatpp::test::network::virtual_::__anon0e2557b20110::WriterTask	typeref:typename:std::shared_ptr<Pipe>	file:
m_pipeIn	../oatpp/src/oatpp/network/virtual_/Socket.hpp	/^  std::shared_ptr<Pipe> m_pipeIn;$/;"	m	class:oatpp::network::virtual_::Socket	typeref:typename:std::shared_ptr<Pipe>
m_pipeOut	../oatpp/src/oatpp/network/virtual_/Socket.hpp	/^  std::shared_ptr<Pipe> m_pipeOut;$/;"	m	class:oatpp::network::virtual_::Socket	typeref:typename:std::shared_ptr<Pipe>
m_pool	../oatpp/src/oatpp/core/base/memory/Allocator.hpp	/^  P& m_pool;$/;"	m	class:oatpp::base::memory::CustomPoolSharedObjectAllocator	typeref:typename:P &
m_poolInfo	../oatpp/src/oatpp/core/base/memory/Allocator.hpp	/^  const AllocatorPoolInfo& m_poolInfo;$/;"	m	class:oatpp::base::memory::PoolSharedObjectAllocator	typeref:typename:const AllocatorPoolInfo &
m_poolInfo	../oatpp/src/oatpp/core/base/memory/Allocator.hpp	/^  const AllocatorPoolInfo& m_poolInfo;$/;"	m	class:oatpp::base::memory::ThreadLocalPoolSharedObjectAllocator	typeref:typename:const AllocatorPoolInfo &
m_port	../oatpp/src/oatpp/network/client/SimpleTCPConnectionProvider.cpp	/^    v_int32 m_port;$/;"	m	class:oatpp::network::client::SimpleTCPConnectionProvider::getConnectionAsync::ConnectCoroutine	typeref:typename:v_int32	file:
m_port	../oatpp/src/oatpp/network/client/SimpleTCPConnectionProvider.hpp	/^  v_word16 m_port;$/;"	m	class:oatpp::network::client::SimpleTCPConnectionProvider	typeref:typename:v_word16
m_port	../oatpp/src/oatpp/network/server/Server.hpp	/^  oatpp::String m_port;$/;"	m	class:oatpp::network::server::Server	typeref:typename:oatpp::String
m_port	../oatpp/src/oatpp/network/server/SimpleTCPConnectionProvider.hpp	/^  v_word16 m_port;$/;"	m	class:oatpp::network::server::SimpleTCPConnectionProvider	typeref:typename:v_word16
m_port	../oatpp/test/oatpp/web/FullAsyncClientTest.cpp	/^  v_int32 m_port;$/;"	m	class:oatpp::test::web::__anonb368a9f30110::TestComponent	typeref:typename:v_int32	file:
m_port	../oatpp/test/oatpp/web/FullAsyncClientTest.hpp	/^  v_int32 m_port;$/;"	m	class:oatpp::test::web::FullAsyncClientTest	typeref:typename:v_int32
m_port	../oatpp/test/oatpp/web/FullAsyncTest.cpp	/^  v_int32 m_port;$/;"	m	class:oatpp::test::web::__anonc5d494140110::TestComponent	typeref:typename:v_int32	file:
m_port	../oatpp/test/oatpp/web/FullAsyncTest.hpp	/^  v_int32 m_port;$/;"	m	class:oatpp::test::web::FullAsyncTest	typeref:typename:v_int32
m_port	../oatpp/test/oatpp/web/FullTest.cpp	/^  v_int32 m_port;$/;"	m	class:oatpp::test::web::__anon0c37bd560110::TestComponent	typeref:typename:v_int32	file:
m_port	../oatpp/test/oatpp/web/FullTest.hpp	/^  v_int32 m_port;$/;"	m	class:oatpp::test::web::FullTest	typeref:typename:v_int32
m_pos	../oatpp/src/oatpp/core/parser/Caret.hpp	/^  v_int32 m_pos;$/;"	m	class:oatpp::parser::Caret	typeref:typename:v_int32
m_position	../oatpp/src/oatpp/core/parser/ParsingError.hpp	/^  v_int32 m_position;$/;"	m	class:oatpp::parser::ParsingError	typeref:typename:v_int32
m_position	../oatpp/test/oatpp/network/virtual_/PipeTest.cpp	/^    data::v_io_size m_position = 0;$/;"	m	class:oatpp::test::network::virtual_::__anon0e2557b20110::WriterTask	typeref:typename:data::v_io_size	file:
m_processor	../oatpp/src/oatpp/core/async/Executor.hpp	/^    oatpp::async::Processor m_processor;$/;"	m	class:oatpp::async::Executor::SubmissionProcessor	typeref:typename:oatpp::async::Processor
m_processorWorkers	../oatpp/src/oatpp/core/async/Executor.hpp	/^  std::vector<std::shared_ptr<SubmissionProcessor>> m_processorWorkers;$/;"	m	class:oatpp::async::Executor	typeref:typename:std::vector<std::shared_ptr<SubmissionProcessor>>
m_progress	../oatpp/src/oatpp/core/data/stream/Stream.cpp	/^    oatpp::data::v_io_size m_progress;$/;"	m	class:oatpp::data::stream::transferAsync::TransferCoroutine	typeref:typename:oatpp::data::v_io_size	file:
m_progress	../oatpp/src/oatpp/web/protocol/http/incoming/RequestHeadersReader.cpp	/^    v_int32 m_progress;$/;"	m	class:oatpp::web::protocol::http::incoming::RequestHeadersReader::readHeadersAsync::ReaderCoroutine	typeref:typename:v_int32	file:
m_progress	../oatpp/src/oatpp/web/protocol/http/incoming/ResponseHeadersReader.cpp	/^    v_int32 m_progress;$/;"	m	class:oatpp::web::protocol::http::incoming::ResponseHeadersReader::readHeadersAsync::ReaderCoroutine	typeref:typename:v_int32	file:
m_propagatedError	../oatpp/src/oatpp/core/async/Coroutine.hpp	/^  std::shared_ptr<const Error>* m_propagatedError;$/;"	m	class:oatpp::async::AbstractCoroutine	typeref:typename:std::shared_ptr<const Error> *
m_properties	../oatpp/src/oatpp/network/ConnectionProvider.hpp	/^  std::unordered_map<oatpp::data::share::StringKeyLabelCI, oatpp::data::share::StringKeyLabel> m/;"	m	class:oatpp::network::ConnectionProvider	typeref:typename:std::unordered_map<oatpp::data::share::StringKeyLabelCI,oatpp::data::share::StringKeyLabel>
m_ptr	../oatpp/src/oatpp/core/data/mapping/type/Type.hpp	/^  std::shared_ptr<T> m_ptr;$/;"	m	class:oatpp::data::mapping::type::PolymorphicWrapper	typeref:typename:std::shared_ptr<T>
m_pushList	../oatpp/src/oatpp/core/async/Processor.hpp	/^  oatpp::collection::FastQueue<AbstractCoroutine> m_pushList;$/;"	m	class:oatpp::async::Processor	typeref:typename:oatpp::collection::FastQueue<AbstractCoroutine>
m_queryParams	../oatpp/src/oatpp/web/protocol/http/incoming/Request.hpp	/^  mutable http::QueryParams m_queryParams;$/;"	m	class:oatpp::web::protocol::http::incoming::Request	typeref:typename:http::QueryParams
m_queryParamsParsed	../oatpp/src/oatpp/web/protocol/http/incoming/Request.hpp	/^  mutable bool m_queryParamsParsed; \/\/ used for lazy parsing of QueryParams$/;"	m	class:oatpp::web::protocol::http::incoming::Request	typeref:typename:bool
m_queue	../oatpp/src/oatpp/core/async/Processor.hpp	/^  oatpp::collection::FastQueue<AbstractCoroutine> m_queue;$/;"	m	class:oatpp::async::Processor	typeref:typename:oatpp::collection::FastQueue<AbstractCoroutine>
m_queue	../oatpp/src/oatpp/core/async/worker/IOWorker.hpp	/^  oatpp::collection::FastQueue<AbstractCoroutine> m_queue;$/;"	m	class:oatpp::async::worker::IOWorker	typeref:typename:oatpp::collection::FastQueue<AbstractCoroutine>
m_queue	../oatpp/src/oatpp/core/async/worker/TimerWorker.hpp	/^  oatpp::collection::FastQueue<AbstractCoroutine> m_queue;$/;"	m	class:oatpp::async::worker::TimerWorker	typeref:typename:oatpp::collection::FastQueue<AbstractCoroutine>
m_readBufferPtr	../oatpp/src/oatpp/core/data/stream/Stream.cpp	/^    void* m_readBufferPtr;$/;"	m	class:oatpp::data::stream::transferAsync::TransferCoroutine	typeref:typename:void *	file:
m_readErrorCode	../oatpp/src/oatpp/web/client/RequestExecutor.hpp	/^    v_int32 m_readErrorCode;$/;"	m	class:oatpp::web::client::RequestExecutor::RequestExecutionError	typeref:typename:v_int32
m_readPosition	../oatpp/src/oatpp/core/data/buffer/FIFOBuffer.hpp	/^  data::v_io_size m_readPosition;$/;"	m	class:oatpp::data::buffer::FIFOBuffer	typeref:typename:data::v_io_size
m_reader	../oatpp/src/oatpp/core/async/worker/IOEventWorker.hpp	/^  IOEventWorker m_reader;$/;"	m	class:oatpp::async::worker::IOEventWorkerForeman	typeref:typename:IOEventWorker
m_reader	../oatpp/src/oatpp/network/virtual_/Pipe.hpp	/^  Reader m_reader;$/;"	m	class:oatpp::network::virtual_::Pipe	typeref:typename:Reader
m_records	src/hls/Playlist.hpp	/^  std::shared_ptr<RecordMarkerList> m_records;$/;"	m	class:Playlist	typeref:typename:std::shared_ptr<RecordMarkerList>
m_request	../oatpp/src/oatpp/web/protocol/http/outgoing/Request.cpp	/^    std::shared_ptr<Request> m_request;$/;"	m	class:oatpp::web::protocol::http::outgoing::Request::sendAsync::SendAsyncCoroutine	typeref:typename:std::shared_ptr<Request>	file:
m_requestExecutor	../oatpp/src/oatpp/web/client/ApiClient.hpp	/^  std::shared_ptr<RequestExecutor> m_requestExecutor;$/;"	m	class:oatpp::web::client::ApiClient	typeref:typename:std::shared_ptr<RequestExecutor>
m_requestInterceptors	../oatpp/src/oatpp/web/server/AsyncHttpConnectionHandler.hpp	/^  HttpProcessor::RequestInterceptors m_requestInterceptors;$/;"	m	class:oatpp::web::server::AsyncHttpConnectionHandler	typeref:typename:HttpProcessor::RequestInterceptors
m_requestInterceptors	../oatpp/src/oatpp/web/server/HttpConnectionHandler.hpp	/^    HttpProcessor::RequestInterceptors* m_requestInterceptors;$/;"	m	class:oatpp::web::server::HttpConnectionHandler::Task	typeref:typename:HttpProcessor::RequestInterceptors *
m_requestInterceptors	../oatpp/src/oatpp/web/server/HttpConnectionHandler.hpp	/^  HttpProcessor::RequestInterceptors m_requestInterceptors;$/;"	m	class:oatpp::web::server::HttpConnectionHandler	typeref:typename:HttpProcessor::RequestInterceptors
m_requestInterceptors	../oatpp/src/oatpp/web/server/HttpProcessor.hpp	/^    RequestInterceptors* m_requestInterceptors;$/;"	m	class:oatpp::web::server::HttpProcessor::Coroutine	typeref:typename:RequestInterceptors *
m_response	../oatpp/src/oatpp/web/protocol/http/outgoing/Response.cpp	/^    std::shared_ptr<Response> m_response;$/;"	m	class:oatpp::web::protocol::http::outgoing::Response::sendAsync::SendAsyncCoroutine	typeref:typename:std::shared_ptr<Response>	file:
m_result	../oatpp/src/oatpp/network/client/SimpleTCPConnectionProvider.cpp	/^    struct addrinfo* m_result;$/;"	m	class:oatpp::network::client::SimpleTCPConnectionProvider::getConnectionAsync::ConnectCoroutine	typeref:struct:addrinfo *	file:
m_result	../oatpp/src/oatpp/web/protocol/http/incoming/RequestHeadersReader.cpp	/^    RequestHeadersReader::Result m_result;$/;"	m	class:oatpp::web::protocol::http::incoming::RequestHeadersReader::readHeadersAsync::ReaderCoroutine	typeref:typename:RequestHeadersReader::Result	file:
m_result	../oatpp/src/oatpp/web/protocol/http/incoming/ResponseHeadersReader.cpp	/^    ResponseHeadersReader::Result m_result;$/;"	m	class:oatpp::web::protocol::http::incoming::ResponseHeadersReader::readHeadersAsync::ReaderCoroutine	typeref:typename:ResponseHeadersReader::Result	file:
m_rootEntry	../oatpp/src/oatpp/core/base/memory/MemoryPool.hpp	/^  EntryHeader* m_rootEntry;$/;"	m	class:oatpp::base::memory::MemoryPool	typeref:typename:EntryHeader *
m_router	../oatpp/src/oatpp/web/server/AsyncHttpConnectionHandler.hpp	/^  std::shared_ptr<HttpRouter> m_router;$/;"	m	class:oatpp::web::server::AsyncHttpConnectionHandler	typeref:typename:std::shared_ptr<HttpRouter>
m_router	../oatpp/src/oatpp/web/server/HttpConnectionHandler.hpp	/^    HttpRouter* m_router;$/;"	m	class:oatpp::web::server::HttpConnectionHandler::Task	typeref:typename:HttpRouter *
m_router	../oatpp/src/oatpp/web/server/HttpConnectionHandler.hpp	/^  std::shared_ptr<HttpRouter> m_router;$/;"	m	class:oatpp::web::server::HttpConnectionHandler	typeref:typename:std::shared_ptr<HttpRouter>
m_router	../oatpp/src/oatpp/web/server/HttpProcessor.hpp	/^    HttpRouter* m_router;$/;"	m	class:oatpp::web::server::HttpProcessor::Coroutine	typeref:typename:HttpRouter *
m_running	../oatpp/src/oatpp/core/async/Processor.hpp	/^  bool m_running = true;$/;"	m	class:oatpp::async::Processor	typeref:typename:bool
m_running	../oatpp/src/oatpp/core/async/worker/IOEventWorker.hpp	/^  bool m_running;$/;"	m	class:oatpp::async::worker::IOEventWorker	typeref:typename:bool
m_running	../oatpp/src/oatpp/core/async/worker/IOWorker.hpp	/^  bool m_running;$/;"	m	class:oatpp::async::worker::IOWorker	typeref:typename:bool
m_running	../oatpp/src/oatpp/core/async/worker/TimerWorker.hpp	/^  bool m_running;$/;"	m	class:oatpp::async::worker::TimerWorker	typeref:typename:bool
m_savedErrorCode	../oatpp/src/oatpp/core/parser/Caret.hpp	/^    v_int32 m_savedErrorCode;$/;"	m	class:oatpp::parser::Caret::StateSaveGuard	typeref:typename:v_int32
m_savedErrorMessage	../oatpp/src/oatpp/core/parser/Caret.hpp	/^    const char* m_savedErrorMessage;$/;"	m	class:oatpp::parser::Caret::StateSaveGuard	typeref:typename:const char *
m_savedPosition	../oatpp/src/oatpp/core/parser/Caret.hpp	/^    v_int32 m_savedPosition;$/;"	m	class:oatpp::parser::Caret::StateSaveGuard	typeref:typename:v_int32
m_server	../oatpp/src/oatpp-test/web/ClientServerTestRunner.hpp	/^  std::shared_ptr<oatpp::network::server::Server> m_server;$/;"	m	class:oatpp::test::web::ClientServerTestRunner	typeref:typename:std::shared_ptr<oatpp::network::server::Server>
m_serverHandle	../oatpp/src/oatpp/network/server/SimpleTCPConnectionProvider.hpp	/^  oatpp::data::v_io_handle m_serverHandle;$/;"	m	class:oatpp::network::server::SimpleTCPConnectionProvider	typeref:typename:oatpp::data::v_io_handle
m_shards	../oatpp/src/oatpp/core/base/memory/MemoryPool.hpp	/^  MemoryPool** m_shards;$/;"	m	class:oatpp::base::memory::ThreadDistributedMemoryPool	typeref:typename:MemoryPool **
m_shardsCount	../oatpp/src/oatpp/core/base/memory/MemoryPool.hpp	/^  v_int32 m_shardsCount;$/;"	m	class:oatpp::base::memory::ThreadDistributedMemoryPool	typeref:typename:v_int32
m_shared	../oatpp/test/oatpp/core/base/memory/PerfTest.cpp	/^    std::shared_ptr<TestBase> m_shared;$/;"	m	class:oatpp::test::memory::__anon75c3e6ad0110::Task	typeref:typename:std::shared_ptr<TestBase>	file:
m_size	../oatpp/src/oatpp/core/base/StrBuffer.hpp	/^  v_int32 m_size;$/;"	m	class:oatpp::base::StrBuffer	typeref:typename:v_int32
m_size	../oatpp/src/oatpp/core/base/memory/MemoryPool.hpp	/^  v_int32 m_size;$/;"	m	class:oatpp::base::memory::Bench	typeref:typename:v_int32
m_size	../oatpp/src/oatpp/core/data/share/MemoryLabel.hpp	/^  v_int32 m_size;$/;"	m	class:oatpp::data::share::MemoryLabel	typeref:typename:v_int32
m_size	../oatpp/src/oatpp/core/data/stream/ChunkedBuffer.hpp	/^  data::v_io_size m_size;$/;"	m	class:oatpp::data::stream::ChunkedBuffer	typeref:typename:data::v_io_size
m_size	../oatpp/src/oatpp/core/parser/Caret.hpp	/^  v_int32 m_size;$/;"	m	class:oatpp::parser::Caret	typeref:typename:v_int32
m_size1	../oatpp/src/oatpp/core/data/buffer/FIFOBuffer.cpp	/^    data::v_io_size m_size1;$/;"	m	class:oatpp::data::buffer::FIFOBuffer::flushToStreamAsync::FlushCoroutine	typeref:typename:data::v_io_size	file:
m_size2	../oatpp/src/oatpp/core/data/buffer/FIFOBuffer.cpp	/^    data::v_io_size m_size2;$/;"	m	class:oatpp::data::buffer::FIFOBuffer::flushToStreamAsync::FlushCoroutine	typeref:typename:data::v_io_size	file:
m_skipData	../oatpp/src/oatpp/web/protocol/http/incoming/SimpleBodyDecoder.cpp	/^    void* m_skipData;$/;"	m	class:oatpp::web::protocol::http::incoming::SimpleBodyDecoder::doChunkedDecodingAsync::ChunkedDecoder	typeref:typename:void *	file:
m_skipSize	../oatpp/src/oatpp/web/protocol/http/incoming/SimpleBodyDecoder.cpp	/^    data::v_io_size m_skipSize;$/;"	m	class:oatpp::web::protocol::http::incoming::SimpleBodyDecoder::doChunkedDecodingAsync::ChunkedDecoder	typeref:typename:data::v_io_size	file:
m_socket	../oatpp/src/oatpp/network/virtual_/Interface.hpp	/^    std::shared_ptr<Socket> m_socket;$/;"	m	class:oatpp::network::virtual_::Interface::ConnectionSubmission	typeref:typename:std::shared_ptr<Socket>
m_socket	../oatpp/test/oatpp/network/virtual_/InterfaceTest.cpp	/^    std::shared_ptr<Socket> m_socket;$/;"	m	class:oatpp::test::network::virtual_::__anoncbc809950110::ServerTask	typeref:typename:std::shared_ptr<Socket>	file:
m_specialization	../oatpp/src/oatpp/core/async/worker/IOEventWorker.hpp	/^  Action::IOEventType m_specialization;$/;"	m	class:oatpp::async::worker::IOEventWorker	typeref:typename:Action::IOEventType
m_start	../oatpp/src/oatpp/core/parser/Caret.hpp	/^    v_int32 m_start;$/;"	m	class:oatpp::parser::Caret::Label	typeref:typename:v_int32
m_starter	../oatpp/src/oatpp/core/async/Lock.cpp	/^    CoroutineStarter m_starter;$/;"	m	class:oatpp::async::synchronize::Synchronized	typeref:typename:CoroutineStarter	file:
m_startingLine	../oatpp/src/oatpp/web/protocol/http/incoming/Request.hpp	/^  http::RequestStartingLine m_startingLine;$/;"	m	class:oatpp::web::protocol::http::incoming::Request	typeref:typename:http::RequestStartingLine
m_status	../oatpp/src/oatpp/network/server/Server.hpp	/^  std::atomic<v_int32> m_status;$/;"	m	class:oatpp::network::server::Server	typeref:typename:std::atomic<v_int32>
m_status	../oatpp/src/oatpp/web/protocol/http/outgoing/Response.hpp	/^  Status m_status;$/;"	m	class:oatpp::web::protocol::http::outgoing::Response	typeref:typename:Status
m_statusCode	../oatpp/src/oatpp/web/protocol/http/incoming/Response.hpp	/^  v_int32 m_statusCode;$/;"	m	class:oatpp::web::protocol::http::incoming::Response	typeref:typename:v_int32
m_statusDescription	../oatpp/src/oatpp/web/protocol/http/incoming/Response.hpp	/^  oatpp::String m_statusDescription;$/;"	m	class:oatpp::web::protocol::http::incoming::Response	typeref:typename:oatpp::String
m_stream	../oatpp/src/oatpp/core/data/buffer/FIFOBuffer.cpp	/^    std::shared_ptr<data::stream::OutputStream> m_stream;$/;"	m	class:oatpp::data::buffer::FIFOBuffer::flushToStreamAsync::FlushCoroutine	typeref:typename:std::shared_ptr<data::stream::OutputStream>	file:
m_stream	../oatpp/src/oatpp/core/data/stream/ChunkedBuffer.cpp	/^    std::shared_ptr<OutputStream> m_stream;$/;"	m	class:oatpp::data::stream::ChunkedBuffer::flushToStreamAsync::FlushCoroutine	typeref:typename:std::shared_ptr<OutputStream>	file:
m_stream	../oatpp/src/oatpp/web/protocol/http/outgoing/BufferBody.hpp	/^    std::shared_ptr<OutputStream> m_stream;$/;"	m	class:oatpp::web::protocol::http::outgoing::BufferBody::WriteToStreamCoroutine	typeref:typename:std::shared_ptr<OutputStream>
m_stream	../oatpp/src/oatpp/web/protocol/http/outgoing/ChunkedBufferBody.hpp	/^    std::shared_ptr<OutputStream> m_stream;$/;"	m	class:oatpp::web::protocol::http::outgoing::ChunkedBufferBody::WriteToStreamCoroutine	typeref:typename:std::shared_ptr<OutputStream>
m_stream	../oatpp/src/oatpp/web/protocol/http/outgoing/Request.cpp	/^    std::shared_ptr<data::stream::OutputStream> m_stream;$/;"	m	class:oatpp::web::protocol::http::outgoing::Request::sendAsync::SendAsyncCoroutine	typeref:typename:std::shared_ptr<data::stream::OutputStream>	file:
m_stream	../oatpp/src/oatpp/web/protocol/http/outgoing/Response.cpp	/^    std::shared_ptr<data::stream::OutputStream> m_stream;$/;"	m	class:oatpp::web::protocol::http::outgoing::Response::sendAsync::SendAsyncCoroutine	typeref:typename:std::shared_ptr<data::stream::OutputStream>	file:
m_submission	../oatpp/src/oatpp/network/virtual_/client/ConnectionProvider.cpp	/^    std::shared_ptr<virtual_::Interface::ConnectionSubmission> m_submission;$/;"	m	class:oatpp::network::virtual_::client::ConnectionProvider::getConnectionAsync::ConnectCoroutine	typeref:typename:std::shared_ptr<virtual_::Interface::ConnectionSubmission>	file:
m_submissions	../oatpp/src/oatpp/network/virtual_/Interface.hpp	/^  oatpp::collection::LinkedList<std::shared_ptr<ConnectionSubmission>> m_submissions;$/;"	m	class:oatpp::network::virtual_::Interface	typeref:typename:oatpp::collection::LinkedList<std::shared_ptr<ConnectionSubmission>>
m_symbol	../oatpp/test/oatpp/core/async/LockTest.cpp	/^  char m_symbol;$/;"	m	class:oatpp::test::async::__anonf33831840110::NotSynchronizedCoroutine	typeref:typename:char	file:
m_symbol	../oatpp/test/oatpp/core/async/LockTest.cpp	/^  char m_symbol;$/;"	m	class:oatpp::test::async::__anonf33831840110::TestCoroutine	typeref:typename:char	file:
m_symbol	../oatpp/test/oatpp/core/async/LockTest.cpp	/^  char m_symbol;$/;"	m	class:oatpp::test::async::__anonf33831840110::TestCoroutine2	typeref:typename:char	file:
m_tag	../oatpp/src/oatpp-test/Checker.hpp	/^  const char* m_tag;$/;"	m	class:oatpp::test::PerformanceChecker	typeref:typename:const char *
m_tag	../oatpp/src/oatpp-test/Checker.hpp	/^  const char* m_tag;$/;"	m	class:oatpp::test::ThreadLocalObjectsChecker	typeref:typename:const char *
m_tail	../oatpp/src/oatpp/web/url/mapping/Pattern.hpp	/^    StringKeyLabel m_tail;$/;"	m	class:oatpp::web::url::mapping::Pattern::MatchMap	typeref:typename:StringKeyLabel
m_taskCondition	../oatpp/src/oatpp/core/async/Processor.hpp	/^  std::condition_variable_any m_taskCondition;$/;"	m	class:oatpp::async::Processor	typeref:typename:std::condition_variable_any
m_taskList	../oatpp/src/oatpp/core/async/Processor.hpp	/^  std::list<std::shared_ptr<TaskSubmission>> m_taskList;$/;"	m	class:oatpp::async::Processor	typeref:typename:std::list<std::shared_ptr<TaskSubmission>>
m_taskLock	../oatpp/src/oatpp/core/async/Processor.hpp	/^  oatpp::concurrency::SpinLock m_taskLock;$/;"	m	class:oatpp::async::Processor	typeref:typename:oatpp::concurrency::SpinLock
m_tasksCounter	../oatpp/src/oatpp/core/async/Processor.hpp	/^  std::atomic<v_int32> m_tasksCounter;$/;"	m	class:oatpp::async::Processor	typeref:typename:std::atomic<v_int32>
m_thread	../oatpp/src/oatpp/core/async/Executor.hpp	/^    std::thread m_thread;$/;"	m	class:oatpp::async::Executor::SubmissionProcessor	typeref:typename:std::thread
m_thread	../oatpp/src/oatpp/core/async/worker/IOEventWorker.hpp	/^  std::thread m_thread;$/;"	m	class:oatpp::async::worker::IOEventWorker	typeref:typename:std::thread
m_thread	../oatpp/src/oatpp/core/async/worker/IOWorker.hpp	/^  std::thread m_thread;$/;"	m	class:oatpp::async::worker::IOWorker	typeref:typename:std::thread
m_thread	../oatpp/src/oatpp/core/async/worker/TimerWorker.hpp	/^  std::thread m_thread;$/;"	m	class:oatpp::async::worker::TimerWorker	typeref:typename:std::thread
m_threadLocalObjectsCount	../oatpp/src/oatpp/core/base/Environment.cpp	/^thread_local v_counter Environment::m_threadLocalObjectsCount = 0;$/;"	m	class:oatpp::base::Environment	typeref:typename:thread_local v_counter
m_threadLocalObjectsCount	../oatpp/src/oatpp/core/base/Environment.hpp	/^  static thread_local v_counter m_threadLocalObjectsCount;$/;"	m	class:oatpp::base::Environment	typeref:typename:thread_local v_counter
m_threadLocalObjectsCreated	../oatpp/src/oatpp/core/base/Environment.cpp	/^thread_local v_counter Environment::m_threadLocalObjectsCreated = 0;$/;"	m	class:oatpp::base::Environment	typeref:typename:thread_local v_counter
m_threadLocalObjectsCreated	../oatpp/src/oatpp/core/base/Environment.hpp	/^  static thread_local v_counter m_threadLocalObjectsCreated;$/;"	m	class:oatpp::base::Environment	typeref:typename:thread_local v_counter
m_ticks	../oatpp/src/oatpp-test/Checker.hpp	/^  v_int64 m_ticks;$/;"	m	class:oatpp::test::PerformanceChecker	typeref:typename:v_int64
m_timerBalancer	../oatpp/src/oatpp/core/async/Processor.hpp	/^  v_word32 m_timerBalancer = 0;$/;"	m	class:oatpp::async::Processor	typeref:typename:v_word32
m_timerPopQueues	../oatpp/src/oatpp/core/async/Processor.hpp	/^  std::vector<oatpp::collection::FastQueue<AbstractCoroutine>> m_timerPopQueues;$/;"	m	class:oatpp::async::Processor	typeref:typename:std::vector<oatpp::collection::FastQueue<AbstractCoroutine>>
m_timerWorkers	../oatpp/src/oatpp/core/async/Processor.hpp	/^  std::vector<std::shared_ptr<worker::Worker>> m_timerWorkers;$/;"	m	class:oatpp::async::Processor	typeref:typename:std::vector<std::shared_ptr<worker::Worker>>
m_toStream	../oatpp/src/oatpp/core/data/stream/Stream.cpp	/^    std::shared_ptr<OutputStream> m_toStream;$/;"	m	class:oatpp::data::stream::transferAsync::TransferCoroutine	typeref:typename:std::shared_ptr<OutputStream>	file:
m_toStream	../oatpp/src/oatpp/web/protocol/http/incoming/SimpleBodyDecoder.cpp	/^    std::shared_ptr<oatpp::data::stream::OutputStream> m_toStream;$/;"	m	class:oatpp::web::protocol::http::incoming::SimpleBodyDecoder::doChunkedDecodingAsync::ChunkedDecoder	typeref:typename:std::shared_ptr<oatpp::data::stream::OutputStream>	file:
m_totalDuration	src/hls/Playlist.hpp	/^  v_float64 m_totalDuration;$/;"	m	class:Playlist	typeref:typename:v_float64
m_transferSize	../oatpp/src/oatpp/core/data/stream/Stream.cpp	/^    oatpp::data::v_io_size m_transferSize;$/;"	m	class:oatpp::data::stream::transferAsync::TransferCoroutine	typeref:typename:oatpp::data::v_io_size	file:
m_transferedBytes	../oatpp/test/oatpp/network/virtual_/PipeTest.cpp	/^    data::v_io_size m_transferedBytes = 0;$/;"	m	class:oatpp::test::network::virtual_::__anon0e2557b20110::WriterTask	typeref:typename:data::v_io_size	file:
m_type	../oatpp/src/oatpp/core/async/Coroutine.hpp	/^  mutable v_int32 m_type;$/;"	m	class:oatpp::async::Action	typeref:typename:v_int32
m_type	../oatpp/src/oatpp/core/async/worker/Worker.hpp	/^  Type m_type;$/;"	m	class:oatpp::async::worker::Worker	typeref:typename:Type
m_type	../oatpp/src/oatpp/core/base/Environment.hpp	/^    std::string m_type;$/;"	m	class:oatpp::base::Environment::Component	typeref:typename:std::string
m_upstream	../oatpp/src/oatpp/web/client/HttpRequestExecutor.cpp	/^    std::shared_ptr<oatpp::data::stream::OutputStreamBufferedProxy> m_upstream;$/;"	m	class:oatpp::web::client::HttpRequestExecutor::executeAsync::ExecutorCoroutine	typeref:typename:std::shared_ptr<oatpp::data::stream::OutputStreamBufferedProxy>	file:
m_valid	../oatpp/src/oatpp/network/virtual_/Interface.hpp	/^    bool m_valid;$/;"	m	class:oatpp::network::virtual_::Interface::ConnectionSubmission	typeref:typename:bool
m_value	../oatpp/src/oatpp/core/data/mapping/type/Primitive.hpp	/^  ValueType m_value;$/;"	m	class:oatpp::data::mapping::type::Primitive	typeref:typename:ValueType
m_variables	../oatpp/src/oatpp/web/url/mapping/Pattern.hpp	/^    Variables m_variables;$/;"	m	class:oatpp::web::url::mapping::Pattern::MatchMap	typeref:typename:Variables
m_waitList	../oatpp/src/oatpp/network/virtual_/Pipe.hpp	/^    oatpp::async::CoroutineWaitList m_waitList;$/;"	m	class:oatpp::network::virtual_::Pipe::Reader	typeref:typename:oatpp::async::CoroutineWaitList
m_waitList	../oatpp/src/oatpp/network/virtual_/Pipe.hpp	/^    oatpp::async::CoroutineWaitList m_waitList;$/;"	m	class:oatpp::network::virtual_::Pipe::Writer	typeref:typename:oatpp::async::CoroutineWaitList
m_waitListListener	../oatpp/src/oatpp/network/virtual_/Pipe.hpp	/^    WaitListListener m_waitListListener;$/;"	m	class:oatpp::network::virtual_::Pipe::Reader	typeref:typename:WaitListListener
m_waitListListener	../oatpp/src/oatpp/network/virtual_/Pipe.hpp	/^    WaitListListener m_waitListListener;$/;"	m	class:oatpp::network::virtual_::Pipe::Writer	typeref:typename:WaitListListener
m_wakeupTrigger	../oatpp/src/oatpp/core/async/worker/IOEventWorker.hpp	/^  oatpp::data::v_io_handle m_wakeupTrigger;$/;"	m	class:oatpp::async::worker::IOEventWorker	typeref:typename:oatpp::data::v_io_handle
m_what	../oatpp/src/oatpp/core/async/Error.hpp	/^  const char* m_what;$/;"	m	class:oatpp::async::Error	typeref:typename:const char *
m_writeBufferPtr	../oatpp/src/oatpp/core/data/stream/Stream.cpp	/^    const void* m_writeBufferPtr;$/;"	m	class:oatpp::data::stream::transferAsync::TransferCoroutine	typeref:typename:const void *	file:
m_writePosition	../oatpp/src/oatpp/core/data/buffer/FIFOBuffer.hpp	/^  data::v_io_size m_writePosition;$/;"	m	class:oatpp::data::buffer::FIFOBuffer	typeref:typename:data::v_io_size
m_writer	../oatpp/src/oatpp/core/async/worker/IOEventWorker.hpp	/^  IOEventWorker m_writer;$/;"	m	class:oatpp::async::worker::IOEventWorkerForeman	typeref:typename:IOEventWorker
m_writer	../oatpp/src/oatpp/network/virtual_/Pipe.hpp	/^  Writer m_writer;$/;"	m	class:oatpp::network::virtual_::Pipe	typeref:typename:Writer
main	../oatpp/build/CMakeFiles/3.14.5/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^int main(int argc, char* argv[])$/;"	f	typeref:typename:int
main	../oatpp/build/CMakeFiles/CheckLibraryExists/CheckFunctionExists.cxx	/^int main()$/;"	f	typeref:typename:int
main	../oatpp/build/CMakeFiles/feature_tests.cxx	/^int main(int argc, char** argv) { (void)argv; return features[argc]; }$/;"	f	typeref:typename:int
main	../oatpp/test/oatpp/AllTestsMain.cpp	/^int main() {$/;"	f	typeref:typename:int
main	src/App.cpp	/^int main(int argc, const char * argv[]) {$/;"	f	typeref:typename:int
main	test/tests.cpp	/^int main() {$/;"	f	typeref:typename:int
mainLoop	../oatpp/src/oatpp/network/server/Server.cpp	/^void Server::mainLoop(){$/;"	f	class:oatpp::network::server::Server	typeref:typename:void
mapping	../oatpp/src/oatpp/core/data/mapping/ObjectMapper.cpp	/^namespace oatpp { namespace data { namespace mapping {$/;"	n	namespace:oatpp::data	file:
mapping	../oatpp/src/oatpp/core/data/mapping/ObjectMapper.hpp	/^namespace oatpp { namespace data { namespace mapping {$/;"	n	namespace:oatpp::data
mapping	../oatpp/src/oatpp/core/data/mapping/type/List.cpp	/^namespace oatpp { namespace data { namespace mapping { namespace type {$/;"	n	namespace:oatpp::data	file:
mapping	../oatpp/src/oatpp/core/data/mapping/type/List.hpp	/^namespace oatpp { namespace data { namespace mapping { namespace type {$/;"	n	namespace:oatpp::data
mapping	../oatpp/src/oatpp/core/data/mapping/type/ListMap.cpp	/^namespace oatpp { namespace data { namespace mapping { namespace type {$/;"	n	namespace:oatpp::data	file:
mapping	../oatpp/src/oatpp/core/data/mapping/type/ListMap.hpp	/^namespace oatpp { namespace data { namespace mapping { namespace type {$/;"	n	namespace:oatpp::data
mapping	../oatpp/src/oatpp/core/data/mapping/type/Object.cpp	/^namespace oatpp { namespace data { namespace mapping { namespace type {$/;"	n	namespace:oatpp::data	file:
mapping	../oatpp/src/oatpp/core/data/mapping/type/Object.hpp	/^namespace oatpp { namespace data { namespace mapping { namespace type {$/;"	n	namespace:oatpp::data
mapping	../oatpp/src/oatpp/core/data/mapping/type/Primitive.cpp	/^namespace oatpp { namespace data { namespace mapping { namespace type {$/;"	n	namespace:oatpp::data	file:
mapping	../oatpp/src/oatpp/core/data/mapping/type/Primitive.hpp	/^namespace oatpp { namespace data { namespace mapping { namespace type {$/;"	n	namespace:oatpp::data
mapping	../oatpp/src/oatpp/core/data/mapping/type/Type.cpp	/^namespace oatpp { namespace data { namespace mapping { namespace type {$/;"	n	namespace:oatpp::data	file:
mapping	../oatpp/src/oatpp/core/data/mapping/type/Type.hpp	/^namespace oatpp { namespace data { namespace mapping { namespace type {$/;"	n	namespace:oatpp::data
mapping	../oatpp/src/oatpp/parser/json/mapping/Deserializer.cpp	/^namespace oatpp { namespace parser { namespace json { namespace mapping {$/;"	n	namespace:oatpp::parser::json	file:
mapping	../oatpp/src/oatpp/parser/json/mapping/Deserializer.hpp	/^namespace oatpp { namespace parser { namespace json { namespace mapping {$/;"	n	namespace:oatpp::parser::json
mapping	../oatpp/src/oatpp/parser/json/mapping/ObjectMapper.cpp	/^namespace oatpp { namespace parser { namespace json { namespace mapping {$/;"	n	namespace:oatpp::parser::json	file:
mapping	../oatpp/src/oatpp/parser/json/mapping/ObjectMapper.hpp	/^namespace oatpp { namespace parser { namespace json { namespace mapping {$/;"	n	namespace:oatpp::parser::json
mapping	../oatpp/src/oatpp/parser/json/mapping/Serializer.cpp	/^namespace oatpp { namespace parser { namespace json { namespace mapping {$/;"	n	namespace:oatpp::parser::json	file:
mapping	../oatpp/src/oatpp/parser/json/mapping/Serializer.hpp	/^namespace oatpp { namespace parser { namespace json { namespace mapping {$/;"	n	namespace:oatpp::parser::json
mapping	../oatpp/src/oatpp/web/url/mapping/Pattern.cpp	/^namespace oatpp { namespace web { namespace url { namespace mapping {$/;"	n	namespace:oatpp::web::url	file:
mapping	../oatpp/src/oatpp/web/url/mapping/Pattern.hpp	/^namespace oatpp { namespace web { namespace url { namespace mapping {$/;"	n	namespace:oatpp::web::url
mapping	../oatpp/src/oatpp/web/url/mapping/Router.hpp	/^namespace oatpp { namespace web { namespace url { namespace mapping {$/;"	n	namespace:oatpp::web::url
mapping	../oatpp/test/oatpp/core/data/mapping/type/TypeTest.cpp	/^namespace oatpp { namespace test { namespace core { namespace data { namespace mapping { namespa/;"	n	namespace:oatpp::test::core::data	file:
mapping	../oatpp/test/oatpp/core/data/mapping/type/TypeTest.hpp	/^namespace oatpp { namespace test { namespace core { namespace data { namespace mapping { namespa/;"	n	namespace:oatpp::test::core::data
mapping	../oatpp/test/oatpp/parser/json/mapping/DTOMapperPerfTest.cpp	/^namespace oatpp { namespace test { namespace parser { namespace json { namespace mapping {$/;"	n	namespace:oatpp::test::parser::json	file:
mapping	../oatpp/test/oatpp/parser/json/mapping/DTOMapperPerfTest.hpp	/^namespace oatpp { namespace test { namespace parser { namespace json { namespace mapping {$/;"	n	namespace:oatpp::test::parser::json
mapping	../oatpp/test/oatpp/parser/json/mapping/DTOMapperTest.cpp	/^namespace oatpp { namespace test { namespace parser { namespace json { namespace mapping {$/;"	n	namespace:oatpp::test::parser::json	file:
mapping	../oatpp/test/oatpp/parser/json/mapping/DTOMapperTest.hpp	/^namespace oatpp { namespace test { namespace parser { namespace json { namespace mapping {$/;"	n	namespace:oatpp::test::parser::json
mapping	../oatpp/test/oatpp/parser/json/mapping/DeserializerTest.cpp	/^namespace oatpp { namespace test { namespace parser { namespace json { namespace mapping {$/;"	n	namespace:oatpp::test::parser::json	file:
mapping	../oatpp/test/oatpp/parser/json/mapping/DeserializerTest.hpp	/^namespace oatpp { namespace test { namespace parser { namespace json { namespace mapping {$/;"	n	namespace:oatpp::test::parser::json
match	../oatpp/src/oatpp/web/url/mapping/Pattern.cpp	/^bool Pattern::match(const StringKeyLabel& url, MatchMap& matchMap) {$/;"	f	class:oatpp::web::url::mapping::Pattern	typeref:typename:bool
matchMap	../oatpp/src/oatpp/web/url/mapping/Router.hpp	/^    Pattern::MatchMap matchMap;$/;"	m	class:oatpp::web::url::mapping::Router::Route	typeref:typename:Pattern::MatchMap
memory	../oatpp/src/oatpp/core/base/memory/Allocator.cpp	/^namespace oatpp { namespace base { namespace memory {$/;"	n	namespace:oatpp::base	file:
memory	../oatpp/src/oatpp/core/base/memory/Allocator.hpp	/^namespace oatpp { namespace base { namespace memory {$/;"	n	namespace:oatpp::base
memory	../oatpp/src/oatpp/core/base/memory/MemoryPool.cpp	/^namespace oatpp { namespace base { namespace  memory {$/;"	n	namespace:oatpp::base	file:
memory	../oatpp/src/oatpp/core/base/memory/MemoryPool.hpp	/^    p_char8 memory;$/;"	m	class:oatpp::base::memory::Bench::Block	typeref:typename:p_char8
memory	../oatpp/src/oatpp/core/base/memory/MemoryPool.hpp	/^namespace oatpp { namespace base { namespace  memory {$/;"	n	namespace:oatpp::base
memory	../oatpp/src/oatpp/core/base/memory/ObjectPool.hpp	/^namespace oatpp { namespace base { namespace memory {$/;"	n	namespace:oatpp::base
memory	../oatpp/test/oatpp/core/base/memory/MemoryPoolTest.cpp	/^namespace oatpp { namespace test { namespace memory {$/;"	n	namespace:oatpp::test	file:
memory	../oatpp/test/oatpp/core/base/memory/MemoryPoolTest.hpp	/^namespace oatpp { namespace test { namespace memory {$/;"	n	namespace:oatpp::test
memory	../oatpp/test/oatpp/core/base/memory/PerfTest.cpp	/^namespace oatpp { namespace test { namespace memory {$/;"	n	namespace:oatpp::test	file:
memory	../oatpp/test/oatpp/core/base/memory/PerfTest.hpp	/^namespace oatpp { namespace test { namespace memory {$/;"	n	namespace:oatpp::test
method	../oatpp/src/oatpp/web/protocol/http/Http.hpp	/^  oatpp::data::share::StringKeyLabel method; \/\/ GET, POST ...$/;"	m	struct:oatpp::web::protocol::http::RequestStartingLine	typeref:typename:oatpp::data::share::StringKeyLabel
method	../oatpp/src/oatpp/web/server/api/Endpoint.hpp	/^    oatpp::String method;$/;"	m	class:oatpp::web::server::api::Endpoint::Info	typeref:typename:oatpp::String
moveAll	../oatpp/src/oatpp/core/collection/FastQueue.hpp	/^  static void moveAll(FastQueue& fromQueue, FastQueue& toQueue) {$/;"	f	class:oatpp::collection::FastQueue	typeref:typename:void
name	../oatpp/src/oatpp-test/Checker.hpp	/^    const char* name;$/;"	m	class:oatpp::test::ThreadLocalObjectsChecker::MemoryPoolData	typeref:typename:const char *
name	../oatpp/src/oatpp/core/data/mapping/type/Type.hpp	/^    const char* const name;$/;"	m	class:oatpp::data::mapping::type::Type::Property	typeref:typename:const char * const
name	../oatpp/src/oatpp/core/data/mapping/type/Type.hpp	/^  const char* const name;$/;"	m	class:oatpp::data::mapping::type::Type	typeref:typename:const char * const
name	../oatpp/src/oatpp/web/server/api/Endpoint.hpp	/^      oatpp::String name;$/;"	m	struct:oatpp::web::server::api::Endpoint::Info::Param	typeref:typename:oatpp::String
name	../oatpp/src/oatpp/web/server/api/Endpoint.hpp	/^    oatpp::String name;$/;"	m	class:oatpp::web::server::api::Endpoint::Info	typeref:typename:oatpp::String
nameQualifier	../oatpp/src/oatpp/core/data/mapping/type/Type.hpp	/^  const char* const nameQualifier;$/;"	m	class:oatpp::data::mapping::type::Type	typeref:typename:const char * const
network	../oatpp/src/oatpp/network/Connection.cpp	/^namespace oatpp { namespace network {$/;"	n	namespace:oatpp	file:
network	../oatpp/src/oatpp/network/Connection.hpp	/^namespace oatpp { namespace network {$/;"	n	namespace:oatpp
network	../oatpp/src/oatpp/network/ConnectionProvider.cpp	/^namespace oatpp { namespace network {$/;"	n	namespace:oatpp	file:
network	../oatpp/src/oatpp/network/ConnectionProvider.hpp	/^namespace oatpp { namespace network {$/;"	n	namespace:oatpp
network	../oatpp/src/oatpp/network/Url.cpp	/^namespace oatpp { namespace network {$/;"	n	namespace:oatpp	file:
network	../oatpp/src/oatpp/network/Url.hpp	/^namespace oatpp { namespace network {$/;"	n	namespace:oatpp
network	../oatpp/src/oatpp/network/client/SimpleTCPConnectionProvider.cpp	/^namespace oatpp { namespace network { namespace client {$/;"	n	namespace:oatpp	file:
network	../oatpp/src/oatpp/network/client/SimpleTCPConnectionProvider.hpp	/^namespace oatpp { namespace network { namespace client {$/;"	n	namespace:oatpp
network	../oatpp/src/oatpp/network/server/ConnectionHandler.hpp	/^namespace oatpp { namespace network { namespace server {$/;"	n	namespace:oatpp
network	../oatpp/src/oatpp/network/server/Server.cpp	/^namespace oatpp { namespace network { namespace server {$/;"	n	namespace:oatpp	file:
network	../oatpp/src/oatpp/network/server/Server.hpp	/^namespace oatpp { namespace network { namespace server {$/;"	n	namespace:oatpp
network	../oatpp/src/oatpp/network/server/SimpleTCPConnectionProvider.cpp	/^namespace oatpp { namespace network { namespace server {$/;"	n	namespace:oatpp	file:
network	../oatpp/src/oatpp/network/server/SimpleTCPConnectionProvider.hpp	/^namespace oatpp { namespace network { namespace server {$/;"	n	namespace:oatpp
network	../oatpp/src/oatpp/network/virtual_/Interface.cpp	/^namespace oatpp { namespace network { namespace virtual_ {$/;"	n	namespace:oatpp	file:
network	../oatpp/src/oatpp/network/virtual_/Interface.hpp	/^namespace oatpp { namespace network { namespace virtual_ {$/;"	n	namespace:oatpp
network	../oatpp/src/oatpp/network/virtual_/Pipe.cpp	/^namespace oatpp { namespace network { namespace virtual_ {$/;"	n	namespace:oatpp	file:
network	../oatpp/src/oatpp/network/virtual_/Pipe.hpp	/^namespace oatpp { namespace network { namespace virtual_ {$/;"	n	namespace:oatpp
network	../oatpp/src/oatpp/network/virtual_/Socket.cpp	/^namespace oatpp { namespace network { namespace virtual_ {$/;"	n	namespace:oatpp	file:
network	../oatpp/src/oatpp/network/virtual_/Socket.hpp	/^namespace oatpp { namespace network { namespace virtual_ {$/;"	n	namespace:oatpp
network	../oatpp/src/oatpp/network/virtual_/client/ConnectionProvider.cpp	/^namespace oatpp { namespace network { namespace virtual_ { namespace client {$/;"	n	namespace:oatpp	file:
network	../oatpp/src/oatpp/network/virtual_/client/ConnectionProvider.hpp	/^namespace oatpp { namespace network { namespace virtual_ { namespace client {$/;"	n	namespace:oatpp
network	../oatpp/src/oatpp/network/virtual_/server/ConnectionProvider.cpp	/^namespace oatpp { namespace network { namespace virtual_ { namespace server {$/;"	n	namespace:oatpp	file:
network	../oatpp/src/oatpp/network/virtual_/server/ConnectionProvider.hpp	/^namespace oatpp { namespace network { namespace virtual_ { namespace server {$/;"	n	namespace:oatpp
network	../oatpp/test/oatpp/network/UrlTest.cpp	/^namespace oatpp { namespace test { namespace network {$/;"	n	namespace:oatpp::test	file:
network	../oatpp/test/oatpp/network/UrlTest.hpp	/^namespace oatpp { namespace test { namespace network {$/;"	n	namespace:oatpp::test
network	../oatpp/test/oatpp/network/virtual_/InterfaceTest.cpp	/^namespace oatpp { namespace test { namespace network { namespace virtual_ {$/;"	n	namespace:oatpp::test	file:
network	../oatpp/test/oatpp/network/virtual_/InterfaceTest.hpp	/^namespace oatpp { namespace test { namespace network { namespace virtual_ {$/;"	n	namespace:oatpp::test
network	../oatpp/test/oatpp/network/virtual_/PipeTest.cpp	/^namespace oatpp { namespace test { namespace network { namespace virtual_ {$/;"	n	namespace:oatpp::test	file:
network	../oatpp/test/oatpp/network/virtual_/PipeTest.hpp	/^namespace oatpp { namespace test { namespace network { namespace virtual_ {$/;"	n	namespace:oatpp::test
network_server_ConnectionHandler_hpp	../oatpp/src/oatpp/network/server/ConnectionHandler.hpp	/^#define network_server_ConnectionHandler_hpp$/;"	d
network_server_Server_hpp	../oatpp/src/oatpp/network/server/Server.hpp	/^#define network_server_Server_hpp$/;"	d
next	../oatpp/src/oatpp/core/async/Coroutine.cpp	/^Action CoroutineStarter::next(Action&& action) {$/;"	f	class:oatpp::async::CoroutineStarter	typeref:typename:Action
next	../oatpp/src/oatpp/core/async/Coroutine.cpp	/^CoroutineStarter& CoroutineStarter::next(CoroutineStarter&& starter) {$/;"	f	class:oatpp::async::CoroutineStarter	typeref:typename:CoroutineStarter &
next	../oatpp/src/oatpp/core/base/memory/MemoryPool.hpp	/^    Block* next;$/;"	m	class:oatpp::base::memory::Bench::Block	typeref:typename:Block *
next	../oatpp/src/oatpp/core/base/memory/MemoryPool.hpp	/^    EntryHeader* next;$/;"	m	class:oatpp::base::memory::MemoryPool::EntryHeader	typeref:typename:EntryHeader *
next	../oatpp/src/oatpp/core/collection/LinkedList.hpp	/^    LinkedListNode*   next;$/;"	m	class:oatpp::collection::LinkedList::LinkedListNode	typeref:typename:LinkedListNode *
next	../oatpp/src/oatpp/core/collection/ListMap.hpp	/^    Entry*      next;$/;"	m	class:oatpp::collection::ListMap::Entry	typeref:typename:Entry *
next	../oatpp/src/oatpp/core/data/stream/ChunkedBuffer.hpp	/^    ChunkEntry* next;$/;"	m	class:oatpp::data::stream::ChunkedBuffer::ChunkEntry	typeref:typename:ChunkEntry *
nextCoroutine	../oatpp/src/oatpp/core/async/worker/Worker.cpp	/^AbstractCoroutine* Worker::nextCoroutine(AbstractCoroutine* CP) {$/;"	f	class:oatpp::async::worker::Worker	typeref:typename:AbstractCoroutine *
notifyAcceptors	../oatpp/src/oatpp/network/virtual_/Interface.cpp	/^void Interface::notifyAcceptors() {$/;"	f	class:oatpp::network::virtual_::Interface	typeref:typename:void
notifyAll	../oatpp/src/oatpp/core/async/CoroutineWaitList.cpp	/^void CoroutineWaitList::notifyAll() {$/;"	f	class:oatpp::async::CoroutineWaitList	typeref:typename:void
notifyFirst	../oatpp/src/oatpp/core/async/CoroutineWaitList.cpp	/^void CoroutineWaitList::notifyFirst() {$/;"	f	class:oatpp::async::CoroutineWaitList	typeref:typename:void
notifyWaitList	../oatpp/src/oatpp/network/virtual_/Pipe.cpp	/^void Pipe::Reader::notifyWaitList() {$/;"	f	class:oatpp::network::virtual_::Pipe::Reader	typeref:typename:void
notifyWaitList	../oatpp/src/oatpp/network/virtual_/Pipe.cpp	/^void Pipe::Writer::notifyWaitList() {$/;"	f	class:oatpp::network::virtual_::Pipe::Writer	typeref:typename:void
oat++ [![oatpp build status](https://dev.azure.com/lganzzzo/lganzzzo/_apis/build/status/oatpp.oatpp)](https://dev.azure.com/lganzzzo/lganzzzo/_build?definitionId=1) [![Language grade: C/C++](https://img.shields.io/lgtm/grade/cpp/g/oatpp/oatpp.svg?logo=lgtm&logoWidth=18)](https://lgtm.com/projects/g/oatpp/oatpp/context:cpp) [![Join the chat at https://gitter.im/oatpp-framework/Lobby](https://badges.gitter.im/oatpp-framework/Lobby.svg)](https://gitter.im/oatpp-framework/Lobby?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)	../oatpp/README.md	/^# oat++ [![oatpp build status](https:\/\/dev.azure.com\/lganzzzo\/lganzzzo\/_apis\/build\/status/;"	c
oatpp	../oatpp/CMakeLists.txt	/^project(oatpp VERSION ${OATPP_THIS_MODULE_VERSION} LANGUAGES CXX)$/;"	p
oatpp	../oatpp/build/Makefile	/^oatpp: cmake_check_build_system$/;"	t
oatpp	../oatpp/build/src/Makefile	/^oatpp: src\/CMakeFiles\/oatpp.dir\/rule$/;"	t
oatpp	../oatpp/src/CMakeLists.txt	/^add_library(oatpp$/;"	t
oatpp	../oatpp/src/oatpp-test/Checker.cpp	/^namespace oatpp { namespace test {$/;"	n	file:
oatpp	../oatpp/src/oatpp-test/Checker.hpp	/^namespace oatpp { namespace test {$/;"	n
oatpp	../oatpp/src/oatpp-test/UnitTest.cpp	/^namespace oatpp { namespace test {$/;"	n	file:
oatpp	../oatpp/src/oatpp-test/UnitTest.hpp	/^namespace oatpp { namespace test {$/;"	n
oatpp	../oatpp/src/oatpp-test/web/ClientServerTestRunner.hpp	/^namespace oatpp { namespace test { namespace web {$/;"	n
oatpp	../oatpp/src/oatpp/algorithm/CRC.cpp	/^namespace oatpp { namespace algorithm {$/;"	n	file:
oatpp	../oatpp/src/oatpp/algorithm/CRC.hpp	/^namespace oatpp { namespace algorithm {$/;"	n
oatpp	../oatpp/src/oatpp/core/Types.hpp	/^namespace oatpp {$/;"	n
oatpp	../oatpp/src/oatpp/core/async/Coroutine.cpp	/^namespace oatpp { namespace async {$/;"	n	file:
oatpp	../oatpp/src/oatpp/core/async/Coroutine.hpp	/^namespace oatpp { namespace async {$/;"	n
oatpp	../oatpp/src/oatpp/core/async/CoroutineWaitList.cpp	/^namespace oatpp { namespace async {$/;"	n	file:
oatpp	../oatpp/src/oatpp/core/async/CoroutineWaitList.hpp	/^namespace oatpp { namespace async {$/;"	n
oatpp	../oatpp/src/oatpp/core/async/Error.cpp	/^namespace oatpp { namespace async {$/;"	n	file:
oatpp	../oatpp/src/oatpp/core/async/Error.hpp	/^namespace oatpp { namespace async {$/;"	n
oatpp	../oatpp/src/oatpp/core/async/Executor.cpp	/^namespace oatpp { namespace async {$/;"	n	file:
oatpp	../oatpp/src/oatpp/core/async/Executor.hpp	/^namespace oatpp { namespace async {$/;"	n
oatpp	../oatpp/src/oatpp/core/async/Lock.cpp	/^namespace oatpp { namespace async {$/;"	n	file:
oatpp	../oatpp/src/oatpp/core/async/Lock.hpp	/^namespace oatpp { namespace async {$/;"	n
oatpp	../oatpp/src/oatpp/core/async/Processor.cpp	/^namespace oatpp { namespace async {$/;"	n	file:
oatpp	../oatpp/src/oatpp/core/async/Processor.hpp	/^namespace oatpp { namespace async {$/;"	n
oatpp	../oatpp/src/oatpp/core/async/worker/IOEventWorker.hpp	/^namespace oatpp { namespace async { namespace worker {$/;"	n
oatpp	../oatpp/src/oatpp/core/async/worker/IOEventWorker_common.cpp	/^namespace oatpp { namespace async { namespace worker {$/;"	n	file:
oatpp	../oatpp/src/oatpp/core/async/worker/IOEventWorker_epoll.cpp	/^namespace oatpp { namespace async { namespace worker {$/;"	n	file:
oatpp	../oatpp/src/oatpp/core/async/worker/IOEventWorker_kqueue.cpp	/^namespace oatpp { namespace async { namespace worker {$/;"	n	file:
oatpp	../oatpp/src/oatpp/core/async/worker/IOWorker.cpp	/^namespace oatpp { namespace async { namespace worker {$/;"	n	file:
oatpp	../oatpp/src/oatpp/core/async/worker/IOWorker.hpp	/^namespace oatpp { namespace async { namespace worker {$/;"	n
oatpp	../oatpp/src/oatpp/core/async/worker/TimerWorker.cpp	/^namespace oatpp { namespace async { namespace worker {$/;"	n	file:
oatpp	../oatpp/src/oatpp/core/async/worker/TimerWorker.hpp	/^namespace oatpp { namespace async { namespace worker {$/;"	n
oatpp	../oatpp/src/oatpp/core/async/worker/Worker.cpp	/^namespace oatpp { namespace async { namespace worker {$/;"	n	file:
oatpp	../oatpp/src/oatpp/core/async/worker/Worker.hpp	/^namespace oatpp { namespace async { namespace worker {$/;"	n
oatpp	../oatpp/src/oatpp/core/base/CommandLineArguments.cpp	/^namespace oatpp { namespace base {$/;"	n	file:
oatpp	../oatpp/src/oatpp/core/base/CommandLineArguments.hpp	/^namespace oatpp { namespace base {$/;"	n
oatpp	../oatpp/src/oatpp/core/base/Countable.cpp	/^namespace oatpp { namespace base{$/;"	n	file:
oatpp	../oatpp/src/oatpp/core/base/Countable.hpp	/^namespace oatpp { namespace base{$/;"	n
oatpp	../oatpp/src/oatpp/core/base/Environment.cpp	/^namespace oatpp { namespace base {$/;"	n	file:
oatpp	../oatpp/src/oatpp/core/base/Environment.hpp	/^namespace oatpp { namespace base{$/;"	n
oatpp	../oatpp/src/oatpp/core/base/StrBuffer.cpp	/^namespace oatpp { namespace base {$/;"	n	file:
oatpp	../oatpp/src/oatpp/core/base/StrBuffer.hpp	/^namespace oatpp { namespace base {$/;"	n
oatpp	../oatpp/src/oatpp/core/base/memory/Allocator.cpp	/^namespace oatpp { namespace base { namespace memory {$/;"	n	file:
oatpp	../oatpp/src/oatpp/core/base/memory/Allocator.hpp	/^namespace oatpp { namespace base { namespace memory {$/;"	n
oatpp	../oatpp/src/oatpp/core/base/memory/MemoryPool.cpp	/^namespace oatpp { namespace base { namespace  memory {$/;"	n	file:
oatpp	../oatpp/src/oatpp/core/base/memory/MemoryPool.hpp	/^namespace oatpp { namespace base { namespace  memory {$/;"	n
oatpp	../oatpp/src/oatpp/core/base/memory/ObjectPool.hpp	/^namespace oatpp { namespace base { namespace memory {$/;"	n
oatpp	../oatpp/src/oatpp/core/collection/FastQueue.hpp	/^namespace oatpp { namespace collection {$/;"	n
oatpp	../oatpp/src/oatpp/core/collection/LinkedList.hpp	/^namespace oatpp { namespace collection {$/;"	n
oatpp	../oatpp/src/oatpp/core/collection/ListMap.hpp	/^namespace oatpp { namespace collection {$/;"	n
oatpp	../oatpp/src/oatpp/core/concurrency/SpinLock.cpp	/^namespace oatpp { namespace concurrency {$/;"	n	file:
oatpp	../oatpp/src/oatpp/core/concurrency/SpinLock.hpp	/^namespace oatpp { namespace concurrency {$/;"	n
oatpp	../oatpp/src/oatpp/core/concurrency/Thread.cpp	/^namespace oatpp { namespace concurrency {$/;"	n	file:
oatpp	../oatpp/src/oatpp/core/concurrency/Thread.hpp	/^namespace oatpp { namespace concurrency {$/;"	n
oatpp	../oatpp/src/oatpp/core/data/IODefinitions.cpp	/^namespace oatpp { namespace data {$/;"	n	file:
oatpp	../oatpp/src/oatpp/core/data/IODefinitions.hpp	/^namespace oatpp { namespace data {$/;"	n
oatpp	../oatpp/src/oatpp/core/data/buffer/FIFOBuffer.cpp	/^namespace oatpp { namespace data{ namespace buffer {$/;"	n	file:
oatpp	../oatpp/src/oatpp/core/data/buffer/FIFOBuffer.hpp	/^namespace oatpp { namespace data { namespace buffer {$/;"	n
oatpp	../oatpp/src/oatpp/core/data/buffer/IOBuffer.cpp	/^namespace oatpp { namespace data{ namespace buffer {$/;"	n	file:
oatpp	../oatpp/src/oatpp/core/data/buffer/IOBuffer.hpp	/^namespace oatpp { namespace data{ namespace buffer {$/;"	n
oatpp	../oatpp/src/oatpp/core/data/mapping/ObjectMapper.cpp	/^namespace oatpp { namespace data { namespace mapping {$/;"	n	file:
oatpp	../oatpp/src/oatpp/core/data/mapping/ObjectMapper.hpp	/^namespace oatpp { namespace data { namespace mapping {$/;"	n
oatpp	../oatpp/src/oatpp/core/data/mapping/type/List.cpp	/^namespace oatpp { namespace data { namespace mapping { namespace type {$/;"	n	file:
oatpp	../oatpp/src/oatpp/core/data/mapping/type/List.hpp	/^namespace oatpp { namespace data { namespace mapping { namespace type {$/;"	n
oatpp	../oatpp/src/oatpp/core/data/mapping/type/ListMap.cpp	/^namespace oatpp { namespace data { namespace mapping { namespace type {$/;"	n	file:
oatpp	../oatpp/src/oatpp/core/data/mapping/type/ListMap.hpp	/^namespace oatpp { namespace data { namespace mapping { namespace type {$/;"	n
oatpp	../oatpp/src/oatpp/core/data/mapping/type/Object.cpp	/^namespace oatpp { namespace data { namespace mapping { namespace type {$/;"	n	file:
oatpp	../oatpp/src/oatpp/core/data/mapping/type/Object.hpp	/^namespace oatpp { namespace data { namespace mapping { namespace type {$/;"	n
oatpp	../oatpp/src/oatpp/core/data/mapping/type/Primitive.cpp	/^namespace oatpp { namespace data { namespace mapping { namespace type {$/;"	n	file:
oatpp	../oatpp/src/oatpp/core/data/mapping/type/Primitive.hpp	/^namespace oatpp { namespace data { namespace mapping { namespace type {$/;"	n
oatpp	../oatpp/src/oatpp/core/data/mapping/type/Type.cpp	/^namespace oatpp { namespace data { namespace mapping { namespace type {$/;"	n	file:
oatpp	../oatpp/src/oatpp/core/data/mapping/type/Type.hpp	/^namespace oatpp { namespace data { namespace mapping { namespace type {$/;"	n
oatpp	../oatpp/src/oatpp/core/data/share/MemoryLabel.cpp	/^namespace oatpp { namespace data { namespace share {$/;"	n	file:
oatpp	../oatpp/src/oatpp/core/data/share/MemoryLabel.hpp	/^namespace oatpp { namespace data { namespace share {$/;"	n
oatpp	../oatpp/src/oatpp/core/data/stream/ChunkedBuffer.cpp	/^namespace oatpp { namespace data{ namespace stream {$/;"	n	file:
oatpp	../oatpp/src/oatpp/core/data/stream/ChunkedBuffer.hpp	/^namespace oatpp { namespace data{ namespace stream {$/;"	n
oatpp	../oatpp/src/oatpp/core/data/stream/Delegate.hpp	/^namespace oatpp { namespace data{ namespace stream {$/;"	n
oatpp	../oatpp/src/oatpp/core/data/stream/Stream.cpp	/^namespace oatpp { namespace data{ namespace stream {$/;"	n	file:
oatpp	../oatpp/src/oatpp/core/data/stream/Stream.hpp	/^namespace oatpp { namespace data{ namespace stream {$/;"	n
oatpp	../oatpp/src/oatpp/core/data/stream/StreamBufferedProxy.cpp	/^namespace oatpp { namespace data{ namespace stream {$/;"	n	file:
oatpp	../oatpp/src/oatpp/core/data/stream/StreamBufferedProxy.hpp	/^namespace oatpp { namespace data{ namespace stream {$/;"	n
oatpp	../oatpp/src/oatpp/core/parser/Caret.cpp	/^namespace oatpp { namespace parser {$/;"	n	file:
oatpp	../oatpp/src/oatpp/core/parser/Caret.hpp	/^namespace oatpp { namespace parser {$/;"	n
oatpp	../oatpp/src/oatpp/core/parser/ParsingError.cpp	/^namespace oatpp { namespace parser {$/;"	n	file:
oatpp	../oatpp/src/oatpp/core/parser/ParsingError.hpp	/^namespace oatpp { namespace parser {$/;"	n
oatpp	../oatpp/src/oatpp/core/utils/ConversionUtils.cpp	/^namespace oatpp { namespace utils { namespace conversion {$/;"	n	file:
oatpp	../oatpp/src/oatpp/core/utils/ConversionUtils.hpp	/^namespace oatpp { namespace utils { namespace conversion {$/;"	n
oatpp	../oatpp/src/oatpp/encoding/Base64.cpp	/^namespace oatpp { namespace encoding {$/;"	n	file:
oatpp	../oatpp/src/oatpp/encoding/Base64.hpp	/^namespace oatpp { namespace encoding {$/;"	n
oatpp	../oatpp/src/oatpp/encoding/Hex.cpp	/^namespace oatpp { namespace encoding {$/;"	n	file:
oatpp	../oatpp/src/oatpp/encoding/Hex.hpp	/^namespace oatpp { namespace encoding {$/;"	n
oatpp	../oatpp/src/oatpp/encoding/Unicode.cpp	/^namespace oatpp { namespace encoding {$/;"	n	file:
oatpp	../oatpp/src/oatpp/encoding/Unicode.hpp	/^namespace oatpp { namespace encoding {$/;"	n
oatpp	../oatpp/src/oatpp/network/Connection.cpp	/^namespace oatpp { namespace network {$/;"	n	file:
oatpp	../oatpp/src/oatpp/network/Connection.hpp	/^namespace oatpp { namespace network {$/;"	n
oatpp	../oatpp/src/oatpp/network/ConnectionProvider.cpp	/^namespace oatpp { namespace network {$/;"	n	file:
oatpp	../oatpp/src/oatpp/network/ConnectionProvider.hpp	/^namespace oatpp { namespace network {$/;"	n
oatpp	../oatpp/src/oatpp/network/Url.cpp	/^namespace oatpp { namespace network {$/;"	n	file:
oatpp	../oatpp/src/oatpp/network/Url.hpp	/^namespace oatpp { namespace network {$/;"	n
oatpp	../oatpp/src/oatpp/network/client/SimpleTCPConnectionProvider.cpp	/^namespace oatpp { namespace network { namespace client {$/;"	n	file:
oatpp	../oatpp/src/oatpp/network/client/SimpleTCPConnectionProvider.hpp	/^namespace oatpp { namespace network { namespace client {$/;"	n
oatpp	../oatpp/src/oatpp/network/server/ConnectionHandler.hpp	/^namespace oatpp { namespace network { namespace server {$/;"	n
oatpp	../oatpp/src/oatpp/network/server/Server.cpp	/^namespace oatpp { namespace network { namespace server {$/;"	n	file:
oatpp	../oatpp/src/oatpp/network/server/Server.hpp	/^namespace oatpp { namespace network { namespace server {$/;"	n
oatpp	../oatpp/src/oatpp/network/server/SimpleTCPConnectionProvider.cpp	/^namespace oatpp { namespace network { namespace server {$/;"	n	file:
oatpp	../oatpp/src/oatpp/network/server/SimpleTCPConnectionProvider.hpp	/^namespace oatpp { namespace network { namespace server {$/;"	n
oatpp	../oatpp/src/oatpp/network/virtual_/Interface.cpp	/^namespace oatpp { namespace network { namespace virtual_ {$/;"	n	file:
oatpp	../oatpp/src/oatpp/network/virtual_/Interface.hpp	/^namespace oatpp { namespace network { namespace virtual_ {$/;"	n
oatpp	../oatpp/src/oatpp/network/virtual_/Pipe.cpp	/^namespace oatpp { namespace network { namespace virtual_ {$/;"	n	file:
oatpp	../oatpp/src/oatpp/network/virtual_/Pipe.hpp	/^namespace oatpp { namespace network { namespace virtual_ {$/;"	n
oatpp	../oatpp/src/oatpp/network/virtual_/Socket.cpp	/^namespace oatpp { namespace network { namespace virtual_ {$/;"	n	file:
oatpp	../oatpp/src/oatpp/network/virtual_/Socket.hpp	/^namespace oatpp { namespace network { namespace virtual_ {$/;"	n
oatpp	../oatpp/src/oatpp/network/virtual_/client/ConnectionProvider.cpp	/^namespace oatpp { namespace network { namespace virtual_ { namespace client {$/;"	n	file:
oatpp	../oatpp/src/oatpp/network/virtual_/client/ConnectionProvider.hpp	/^namespace oatpp { namespace network { namespace virtual_ { namespace client {$/;"	n
oatpp	../oatpp/src/oatpp/network/virtual_/server/ConnectionProvider.cpp	/^namespace oatpp { namespace network { namespace virtual_ { namespace server {$/;"	n	file:
oatpp	../oatpp/src/oatpp/network/virtual_/server/ConnectionProvider.hpp	/^namespace oatpp { namespace network { namespace virtual_ { namespace server {$/;"	n
oatpp	../oatpp/src/oatpp/parser/json/Utils.cpp	/^namespace oatpp { namespace parser { namespace json{$/;"	n	file:
oatpp	../oatpp/src/oatpp/parser/json/Utils.hpp	/^namespace oatpp { namespace parser { namespace json{$/;"	n
oatpp	../oatpp/src/oatpp/parser/json/mapping/Deserializer.cpp	/^namespace oatpp { namespace parser { namespace json { namespace mapping {$/;"	n	file:
oatpp	../oatpp/src/oatpp/parser/json/mapping/Deserializer.hpp	/^namespace oatpp { namespace parser { namespace json { namespace mapping {$/;"	n
oatpp	../oatpp/src/oatpp/parser/json/mapping/ObjectMapper.cpp	/^namespace oatpp { namespace parser { namespace json { namespace mapping {$/;"	n	file:
oatpp	../oatpp/src/oatpp/parser/json/mapping/ObjectMapper.hpp	/^namespace oatpp { namespace parser { namespace json { namespace mapping {$/;"	n
oatpp	../oatpp/src/oatpp/parser/json/mapping/Serializer.cpp	/^namespace oatpp { namespace parser { namespace json { namespace mapping {$/;"	n	file:
oatpp	../oatpp/src/oatpp/parser/json/mapping/Serializer.hpp	/^namespace oatpp { namespace parser { namespace json { namespace mapping {$/;"	n
oatpp	../oatpp/src/oatpp/web/client/ApiClient.cpp	/^namespace oatpp { namespace web { namespace client {$/;"	n	file:
oatpp	../oatpp/src/oatpp/web/client/ApiClient.hpp	/^namespace oatpp { namespace web { namespace client {$/;"	n
oatpp	../oatpp/src/oatpp/web/client/HttpRequestExecutor.cpp	/^namespace oatpp { namespace web { namespace client {$/;"	n	file:
oatpp	../oatpp/src/oatpp/web/client/HttpRequestExecutor.hpp	/^namespace oatpp { namespace web { namespace client {$/;"	n
oatpp	../oatpp/src/oatpp/web/client/RequestExecutor.cpp	/^namespace oatpp { namespace web { namespace client {$/;"	n	file:
oatpp	../oatpp/src/oatpp/web/client/RequestExecutor.hpp	/^namespace oatpp { namespace web { namespace client {$/;"	n
oatpp	../oatpp/src/oatpp/web/protocol/CommunicationError.cpp	/^namespace oatpp { namespace web { namespace protocol {$/;"	n	file:
oatpp	../oatpp/src/oatpp/web/protocol/CommunicationError.hpp	/^namespace oatpp { namespace web { namespace protocol {$/;"	n
oatpp	../oatpp/src/oatpp/web/protocol/http/Http.cpp	/^namespace oatpp { namespace web { namespace protocol { namespace http {$/;"	n	file:
oatpp	../oatpp/src/oatpp/web/protocol/http/Http.hpp	/^namespace oatpp { namespace web { namespace protocol { namespace http {$/;"	n
oatpp	../oatpp/src/oatpp/web/protocol/http/incoming/BodyDecoder.cpp	/^namespace oatpp { namespace web { namespace protocol { namespace http { namespace incoming {$/;"	n	file:
oatpp	../oatpp/src/oatpp/web/protocol/http/incoming/BodyDecoder.hpp	/^namespace oatpp { namespace web { namespace protocol { namespace http { namespace incoming {$/;"	n
oatpp	../oatpp/src/oatpp/web/protocol/http/incoming/Request.cpp	/^namespace oatpp { namespace web { namespace protocol { namespace http { namespace incoming {$/;"	n	file:
oatpp	../oatpp/src/oatpp/web/protocol/http/incoming/Request.hpp	/^namespace oatpp { namespace web { namespace protocol { namespace http { namespace incoming {$/;"	n
oatpp	../oatpp/src/oatpp/web/protocol/http/incoming/RequestHeadersReader.cpp	/^namespace oatpp { namespace web { namespace protocol { namespace http { namespace incoming {$/;"	n	file:
oatpp	../oatpp/src/oatpp/web/protocol/http/incoming/RequestHeadersReader.hpp	/^namespace oatpp { namespace web { namespace protocol { namespace http { namespace incoming {$/;"	n
oatpp	../oatpp/src/oatpp/web/protocol/http/incoming/Response.cpp	/^namespace oatpp { namespace web { namespace protocol { namespace http { namespace incoming {$/;"	n	file:
oatpp	../oatpp/src/oatpp/web/protocol/http/incoming/Response.hpp	/^namespace oatpp { namespace web { namespace protocol { namespace http { namespace incoming {$/;"	n
oatpp	../oatpp/src/oatpp/web/protocol/http/incoming/ResponseHeadersReader.cpp	/^namespace oatpp { namespace web { namespace protocol { namespace http { namespace incoming {$/;"	n	file:
oatpp	../oatpp/src/oatpp/web/protocol/http/incoming/ResponseHeadersReader.hpp	/^namespace oatpp { namespace web { namespace protocol { namespace http { namespace incoming {$/;"	n
oatpp	../oatpp/src/oatpp/web/protocol/http/incoming/SimpleBodyDecoder.cpp	/^namespace oatpp { namespace web { namespace protocol { namespace http { namespace incoming {$/;"	n	file:
oatpp	../oatpp/src/oatpp/web/protocol/http/incoming/SimpleBodyDecoder.hpp	/^namespace oatpp { namespace web { namespace protocol { namespace http { namespace incoming {$/;"	n
oatpp	../oatpp/src/oatpp/web/protocol/http/outgoing/Body.hpp	/^namespace oatpp { namespace web { namespace protocol { namespace http { namespace outgoing {$/;"	n
oatpp	../oatpp/src/oatpp/web/protocol/http/outgoing/BufferBody.cpp	/^namespace oatpp { namespace web { namespace protocol { namespace http { namespace outgoing {$/;"	n	file:
oatpp	../oatpp/src/oatpp/web/protocol/http/outgoing/BufferBody.hpp	/^namespace oatpp { namespace web { namespace protocol { namespace http { namespace outgoing {$/;"	n
oatpp	../oatpp/src/oatpp/web/protocol/http/outgoing/ChunkedBufferBody.cpp	/^namespace oatpp { namespace web { namespace protocol { namespace http { namespace outgoing {$/;"	n	file:
oatpp	../oatpp/src/oatpp/web/protocol/http/outgoing/ChunkedBufferBody.hpp	/^namespace oatpp { namespace web { namespace protocol { namespace http { namespace outgoing {$/;"	n
oatpp	../oatpp/src/oatpp/web/protocol/http/outgoing/CommunicationUtils.cpp	/^namespace oatpp { namespace web { namespace protocol { namespace http { namespace outgoing {$/;"	n	file:
oatpp	../oatpp/src/oatpp/web/protocol/http/outgoing/CommunicationUtils.hpp	/^namespace oatpp { namespace web { namespace protocol { namespace http { namespace outgoing {$/;"	n
oatpp	../oatpp/src/oatpp/web/protocol/http/outgoing/DtoBody.cpp	/^namespace oatpp { namespace web { namespace protocol { namespace http { namespace outgoing {$/;"	n	file:
oatpp	../oatpp/src/oatpp/web/protocol/http/outgoing/DtoBody.hpp	/^namespace oatpp { namespace web { namespace protocol { namespace http { namespace outgoing {$/;"	n
oatpp	../oatpp/src/oatpp/web/protocol/http/outgoing/Request.cpp	/^namespace oatpp { namespace web { namespace protocol { namespace http { namespace outgoing {$/;"	n	file:
oatpp	../oatpp/src/oatpp/web/protocol/http/outgoing/Request.hpp	/^namespace oatpp { namespace web { namespace protocol { namespace http { namespace outgoing {$/;"	n
oatpp	../oatpp/src/oatpp/web/protocol/http/outgoing/Response.cpp	/^namespace oatpp { namespace web { namespace protocol { namespace http { namespace outgoing {$/;"	n	file:
oatpp	../oatpp/src/oatpp/web/protocol/http/outgoing/Response.hpp	/^namespace oatpp { namespace web { namespace protocol { namespace http { namespace outgoing {$/;"	n
oatpp	../oatpp/src/oatpp/web/protocol/http/outgoing/ResponseFactory.cpp	/^namespace oatpp { namespace web { namespace protocol { namespace http { namespace outgoing {$/;"	n	file:
oatpp	../oatpp/src/oatpp/web/protocol/http/outgoing/ResponseFactory.hpp	/^namespace oatpp { namespace web { namespace protocol { namespace http { namespace outgoing {$/;"	n
oatpp	../oatpp/src/oatpp/web/server/AsyncHttpConnectionHandler.cpp	/^namespace oatpp { namespace web { namespace server {$/;"	n	file:
oatpp	../oatpp/src/oatpp/web/server/AsyncHttpConnectionHandler.hpp	/^namespace oatpp { namespace web { namespace server {$/;"	n
oatpp	../oatpp/src/oatpp/web/server/HttpConnectionHandler.cpp	/^namespace oatpp { namespace web { namespace server {$/;"	n	file:
oatpp	../oatpp/src/oatpp/web/server/HttpConnectionHandler.hpp	/^namespace oatpp { namespace web { namespace server {$/;"	n
oatpp	../oatpp/src/oatpp/web/server/HttpProcessor.cpp	/^namespace oatpp { namespace web { namespace server {$/;"	n	file:
oatpp	../oatpp/src/oatpp/web/server/HttpProcessor.hpp	/^namespace oatpp { namespace web { namespace server {$/;"	n
oatpp	../oatpp/src/oatpp/web/server/HttpRequestHandler.hpp	/^namespace oatpp { namespace web { namespace server {$/;"	n
oatpp	../oatpp/src/oatpp/web/server/HttpRouter.cpp	/^namespace oatpp { namespace web { namespace server {$/;"	n	file:
oatpp	../oatpp/src/oatpp/web/server/HttpRouter.hpp	/^namespace oatpp { namespace web { namespace server {$/;"	n
oatpp	../oatpp/src/oatpp/web/server/api/ApiController.cpp	/^namespace oatpp { namespace web { namespace server { namespace api {$/;"	n	file:
oatpp	../oatpp/src/oatpp/web/server/api/ApiController.hpp	/^namespace oatpp { namespace web { namespace server { namespace api {$/;"	n
oatpp	../oatpp/src/oatpp/web/server/api/Endpoint.cpp	/^namespace oatpp { namespace web { namespace server { namespace api {$/;"	n	file:
oatpp	../oatpp/src/oatpp/web/server/api/Endpoint.hpp	/^namespace oatpp { namespace web { namespace server { namespace api {$/;"	n
oatpp	../oatpp/src/oatpp/web/server/handler/ErrorHandler.cpp	/^namespace oatpp { namespace web { namespace server { namespace handler {$/;"	n	file:
oatpp	../oatpp/src/oatpp/web/server/handler/ErrorHandler.hpp	/^namespace oatpp { namespace web { namespace server { namespace handler {$/;"	n
oatpp	../oatpp/src/oatpp/web/server/handler/Interceptor.hpp	/^namespace oatpp { namespace web { namespace server { namespace handler {$/;"	n
oatpp	../oatpp/src/oatpp/web/url/mapping/Pattern.cpp	/^namespace oatpp { namespace web { namespace url { namespace mapping {$/;"	n	file:
oatpp	../oatpp/src/oatpp/web/url/mapping/Pattern.hpp	/^namespace oatpp { namespace web { namespace url { namespace mapping {$/;"	n
oatpp	../oatpp/src/oatpp/web/url/mapping/Router.hpp	/^namespace oatpp { namespace web { namespace url { namespace mapping {$/;"	n
oatpp	../oatpp/test/oatpp/core/async/LockTest.cpp	/^namespace oatpp { namespace test { namespace async {$/;"	n	file:
oatpp	../oatpp/test/oatpp/core/async/LockTest.hpp	/^namespace oatpp { namespace test { namespace async {$/;"	n
oatpp	../oatpp/test/oatpp/core/base/CommandLineArgumentsTest.cpp	/^namespace oatpp { namespace test { namespace base {$/;"	n	file:
oatpp	../oatpp/test/oatpp/core/base/CommandLineArgumentsTest.hpp	/^namespace oatpp { namespace test { namespace base {$/;"	n
oatpp	../oatpp/test/oatpp/core/base/RegRuleTest.cpp	/^namespace oatpp { namespace test { namespace base {$/;"	n	file:
oatpp	../oatpp/test/oatpp/core/base/RegRuleTest.hpp	/^namespace oatpp { namespace test { namespace base {$/;"	n
oatpp	../oatpp/test/oatpp/core/base/collection/LinkedListTest.cpp	/^namespace oatpp { namespace test { namespace collection {$/;"	n	file:
oatpp	../oatpp/test/oatpp/core/base/collection/LinkedListTest.hpp	/^namespace oatpp { namespace test { namespace collection {$/;"	n
oatpp	../oatpp/test/oatpp/core/base/memory/MemoryPoolTest.cpp	/^namespace oatpp { namespace test { namespace memory {$/;"	n	file:
oatpp	../oatpp/test/oatpp/core/base/memory/MemoryPoolTest.hpp	/^namespace oatpp { namespace test { namespace memory {$/;"	n
oatpp	../oatpp/test/oatpp/core/base/memory/PerfTest.cpp	/^namespace oatpp { namespace test { namespace memory {$/;"	n	file:
oatpp	../oatpp/test/oatpp/core/base/memory/PerfTest.hpp	/^namespace oatpp { namespace test { namespace memory {$/;"	n
oatpp	../oatpp/test/oatpp/core/data/mapping/type/TypeTest.cpp	/^namespace oatpp { namespace test { namespace core { namespace data { namespace mapping { namespa/;"	n	file:
oatpp	../oatpp/test/oatpp/core/data/mapping/type/TypeTest.hpp	/^namespace oatpp { namespace test { namespace core { namespace data { namespace mapping { namespa/;"	n
oatpp	../oatpp/test/oatpp/core/data/share/MemoryLabelTest.cpp	/^namespace oatpp { namespace test { namespace core { namespace data { namespace share {$/;"	n	file:
oatpp	../oatpp/test/oatpp/core/data/share/MemoryLabelTest.hpp	/^namespace oatpp { namespace test { namespace core { namespace data { namespace share {$/;"	n
oatpp	../oatpp/test/oatpp/core/data/stream/ChunkedBufferTest.cpp	/^namespace oatpp { namespace test { namespace core { namespace data { namespace stream {$/;"	n	file:
oatpp	../oatpp/test/oatpp/core/data/stream/ChunkedBufferTest.hpp	/^namespace oatpp { namespace test { namespace core { namespace data { namespace stream {$/;"	n
oatpp	../oatpp/test/oatpp/core/parser/CaretTest.cpp	/^namespace oatpp { namespace test { namespace parser {$/;"	n	file:
oatpp	../oatpp/test/oatpp/core/parser/CaretTest.hpp	/^namespace oatpp { namespace test { namespace parser {$/;"	n
oatpp	../oatpp/test/oatpp/encoding/Base64Test.cpp	/^namespace oatpp { namespace test { namespace encoding {$/;"	n	file:
oatpp	../oatpp/test/oatpp/encoding/Base64Test.hpp	/^namespace oatpp { namespace test { namespace encoding {$/;"	n
oatpp	../oatpp/test/oatpp/encoding/UnicodeTest.cpp	/^namespace oatpp { namespace test { namespace encoding {$/;"	n	file:
oatpp	../oatpp/test/oatpp/encoding/UnicodeTest.hpp	/^namespace oatpp { namespace test { namespace encoding {$/;"	n
oatpp	../oatpp/test/oatpp/network/UrlTest.cpp	/^namespace oatpp { namespace test { namespace network {$/;"	n	file:
oatpp	../oatpp/test/oatpp/network/UrlTest.hpp	/^namespace oatpp { namespace test { namespace network {$/;"	n
oatpp	../oatpp/test/oatpp/network/virtual_/InterfaceTest.cpp	/^namespace oatpp { namespace test { namespace network { namespace virtual_ {$/;"	n	file:
oatpp	../oatpp/test/oatpp/network/virtual_/InterfaceTest.hpp	/^namespace oatpp { namespace test { namespace network { namespace virtual_ {$/;"	n
oatpp	../oatpp/test/oatpp/network/virtual_/PipeTest.cpp	/^namespace oatpp { namespace test { namespace network { namespace virtual_ {$/;"	n	file:
oatpp	../oatpp/test/oatpp/network/virtual_/PipeTest.hpp	/^namespace oatpp { namespace test { namespace network { namespace virtual_ {$/;"	n
oatpp	../oatpp/test/oatpp/parser/json/mapping/DTOMapperPerfTest.cpp	/^namespace oatpp { namespace test { namespace parser { namespace json { namespace mapping {$/;"	n	file:
oatpp	../oatpp/test/oatpp/parser/json/mapping/DTOMapperPerfTest.hpp	/^namespace oatpp { namespace test { namespace parser { namespace json { namespace mapping {$/;"	n
oatpp	../oatpp/test/oatpp/parser/json/mapping/DTOMapperTest.cpp	/^namespace oatpp { namespace test { namespace parser { namespace json { namespace mapping {$/;"	n	file:
oatpp	../oatpp/test/oatpp/parser/json/mapping/DTOMapperTest.hpp	/^namespace oatpp { namespace test { namespace parser { namespace json { namespace mapping {$/;"	n
oatpp	../oatpp/test/oatpp/parser/json/mapping/DeserializerTest.cpp	/^namespace oatpp { namespace test { namespace parser { namespace json { namespace mapping {$/;"	n	file:
oatpp	../oatpp/test/oatpp/parser/json/mapping/DeserializerTest.hpp	/^namespace oatpp { namespace test { namespace parser { namespace json { namespace mapping {$/;"	n
oatpp	../oatpp/test/oatpp/web/FullAsyncClientTest.cpp	/^namespace oatpp { namespace test { namespace web {$/;"	n	file:
oatpp	../oatpp/test/oatpp/web/FullAsyncClientTest.hpp	/^namespace oatpp { namespace test { namespace web {$/;"	n
oatpp	../oatpp/test/oatpp/web/FullAsyncTest.cpp	/^namespace oatpp { namespace test { namespace web {$/;"	n	file:
oatpp	../oatpp/test/oatpp/web/FullAsyncTest.hpp	/^namespace oatpp { namespace test { namespace web {$/;"	n
oatpp	../oatpp/test/oatpp/web/FullTest.cpp	/^namespace oatpp { namespace test { namespace web {$/;"	n	file:
oatpp	../oatpp/test/oatpp/web/FullTest.hpp	/^namespace oatpp { namespace test { namespace web {$/;"	n
oatpp	../oatpp/test/oatpp/web/app/Client.hpp	/^namespace oatpp { namespace test { namespace web { namespace app {$/;"	n
oatpp	../oatpp/test/oatpp/web/app/Controller.hpp	/^namespace oatpp { namespace test { namespace web { namespace app {$/;"	n
oatpp	../oatpp/test/oatpp/web/app/ControllerAsync.hpp	/^namespace oatpp { namespace test { namespace web { namespace app {$/;"	n
oatpp	../oatpp/test/oatpp/web/app/DTOs.hpp	/^namespace oatpp { namespace test { namespace web { namespace app {$/;"	n
oatpp	../oatpp/test/oatpp/web/server/api/ApiControllerTest.cpp	/^namespace oatpp { namespace test { namespace web { namespace server { namespace api {$/;"	n	file:
oatpp	../oatpp/test/oatpp/web/server/api/ApiControllerTest.hpp	/^namespace oatpp { namespace test { namespace web { namespace server { namespace api {$/;"	n
oatpp-test	../oatpp/build/Makefile	/^oatpp-test: cmake_check_build_system$/;"	t
oatpp-test	../oatpp/build/src/Makefile	/^oatpp-test: src\/CMakeFiles\/oatpp-test.dir\/rule$/;"	t
oatpp-test	../oatpp/src/CMakeLists.txt	/^add_library(oatpp-test$/;"	t
oatpp-test/Checker.cpp.i	../oatpp/build/src/Makefile	/^oatpp-test\/Checker.cpp.i:$/;"	t
oatpp-test/Checker.cpp.o	../oatpp/build/src/Makefile	/^oatpp-test\/Checker.cpp.o:$/;"	t
oatpp-test/Checker.cpp.s	../oatpp/build/src/Makefile	/^oatpp-test\/Checker.cpp.s:$/;"	t
oatpp-test/Checker.i	../oatpp/build/src/Makefile	/^oatpp-test\/Checker.i: oatpp-test\/Checker.cpp.i$/;"	t
oatpp-test/Checker.o	../oatpp/build/src/Makefile	/^oatpp-test\/Checker.o: oatpp-test\/Checker.cpp.o$/;"	t
oatpp-test/Checker.s	../oatpp/build/src/Makefile	/^oatpp-test\/Checker.s: oatpp-test\/Checker.cpp.s$/;"	t
oatpp-test/UnitTest.cpp.i	../oatpp/build/src/Makefile	/^oatpp-test\/UnitTest.cpp.i:$/;"	t
oatpp-test/UnitTest.cpp.o	../oatpp/build/src/Makefile	/^oatpp-test\/UnitTest.cpp.o:$/;"	t
oatpp-test/UnitTest.cpp.s	../oatpp/build/src/Makefile	/^oatpp-test\/UnitTest.cpp.s:$/;"	t
oatpp-test/UnitTest.i	../oatpp/build/src/Makefile	/^oatpp-test\/UnitTest.i: oatpp-test\/UnitTest.cpp.i$/;"	t
oatpp-test/UnitTest.o	../oatpp/build/src/Makefile	/^oatpp-test\/UnitTest.o: oatpp-test\/UnitTest.cpp.o$/;"	t
oatpp-test/UnitTest.s	../oatpp/build/src/Makefile	/^oatpp-test\/UnitTest.s: oatpp-test\/UnitTest.cpp.s$/;"	t
oatpp-test/fast	../oatpp/build/Makefile	/^oatpp-test\/fast:$/;"	t
oatpp-test/fast	../oatpp/build/src/Makefile	/^oatpp-test\/fast:$/;"	t
oatpp/AllTestsMain.cpp.i	../oatpp/build/test/Makefile	/^oatpp\/AllTestsMain.cpp.i:$/;"	t
oatpp/AllTestsMain.cpp.o	../oatpp/build/test/Makefile	/^oatpp\/AllTestsMain.cpp.o:$/;"	t
oatpp/AllTestsMain.cpp.s	../oatpp/build/test/Makefile	/^oatpp\/AllTestsMain.cpp.s:$/;"	t
oatpp/AllTestsMain.i	../oatpp/build/test/Makefile	/^oatpp\/AllTestsMain.i: oatpp\/AllTestsMain.cpp.i$/;"	t
oatpp/AllTestsMain.o	../oatpp/build/test/Makefile	/^oatpp\/AllTestsMain.o: oatpp\/AllTestsMain.cpp.o$/;"	t
oatpp/AllTestsMain.s	../oatpp/build/test/Makefile	/^oatpp\/AllTestsMain.s: oatpp\/AllTestsMain.cpp.s$/;"	t
oatpp/algorithm/CRC.cpp.i	../oatpp/build/src/Makefile	/^oatpp\/algorithm\/CRC.cpp.i:$/;"	t
oatpp/algorithm/CRC.cpp.o	../oatpp/build/src/Makefile	/^oatpp\/algorithm\/CRC.cpp.o:$/;"	t
oatpp/algorithm/CRC.cpp.s	../oatpp/build/src/Makefile	/^oatpp\/algorithm\/CRC.cpp.s:$/;"	t
oatpp/algorithm/CRC.i	../oatpp/build/src/Makefile	/^oatpp\/algorithm\/CRC.i: oatpp\/algorithm\/CRC.cpp.i$/;"	t
oatpp/algorithm/CRC.o	../oatpp/build/src/Makefile	/^oatpp\/algorithm\/CRC.o: oatpp\/algorithm\/CRC.cpp.o$/;"	t
oatpp/algorithm/CRC.s	../oatpp/build/src/Makefile	/^oatpp\/algorithm\/CRC.s: oatpp\/algorithm\/CRC.cpp.s$/;"	t
oatpp/core/Types.cpp.i	../oatpp/build/src/Makefile	/^oatpp\/core\/Types.cpp.i:$/;"	t
oatpp/core/Types.cpp.o	../oatpp/build/src/Makefile	/^oatpp\/core\/Types.cpp.o:$/;"	t
oatpp/core/Types.cpp.s	../oatpp/build/src/Makefile	/^oatpp\/core\/Types.cpp.s:$/;"	t
oatpp/core/Types.i	../oatpp/build/src/Makefile	/^oatpp\/core\/Types.i: oatpp\/core\/Types.cpp.i$/;"	t
oatpp/core/Types.o	../oatpp/build/src/Makefile	/^oatpp\/core\/Types.o: oatpp\/core\/Types.cpp.o$/;"	t
oatpp/core/Types.s	../oatpp/build/src/Makefile	/^oatpp\/core\/Types.s: oatpp\/core\/Types.cpp.s$/;"	t
oatpp/core/async/Coroutine.cpp.i	../oatpp/build/src/Makefile	/^oatpp\/core\/async\/Coroutine.cpp.i:$/;"	t
oatpp/core/async/Coroutine.cpp.o	../oatpp/build/src/Makefile	/^oatpp\/core\/async\/Coroutine.cpp.o:$/;"	t
oatpp/core/async/Coroutine.cpp.s	../oatpp/build/src/Makefile	/^oatpp\/core\/async\/Coroutine.cpp.s:$/;"	t
oatpp/core/async/Coroutine.i	../oatpp/build/src/Makefile	/^oatpp\/core\/async\/Coroutine.i: oatpp\/core\/async\/Coroutine.cpp.i$/;"	t
oatpp/core/async/Coroutine.o	../oatpp/build/src/Makefile	/^oatpp\/core\/async\/Coroutine.o: oatpp\/core\/async\/Coroutine.cpp.o$/;"	t
oatpp/core/async/Coroutine.s	../oatpp/build/src/Makefile	/^oatpp\/core\/async\/Coroutine.s: oatpp\/core\/async\/Coroutine.cpp.s$/;"	t
oatpp/core/async/CoroutineWaitList.cpp.i	../oatpp/build/src/Makefile	/^oatpp\/core\/async\/CoroutineWaitList.cpp.i:$/;"	t
oatpp/core/async/CoroutineWaitList.cpp.o	../oatpp/build/src/Makefile	/^oatpp\/core\/async\/CoroutineWaitList.cpp.o:$/;"	t
oatpp/core/async/CoroutineWaitList.cpp.s	../oatpp/build/src/Makefile	/^oatpp\/core\/async\/CoroutineWaitList.cpp.s:$/;"	t
oatpp/core/async/CoroutineWaitList.i	../oatpp/build/src/Makefile	/^oatpp\/core\/async\/CoroutineWaitList.i: oatpp\/core\/async\/CoroutineWaitList.cpp.i$/;"	t
oatpp/core/async/CoroutineWaitList.o	../oatpp/build/src/Makefile	/^oatpp\/core\/async\/CoroutineWaitList.o: oatpp\/core\/async\/CoroutineWaitList.cpp.o$/;"	t
oatpp/core/async/CoroutineWaitList.s	../oatpp/build/src/Makefile	/^oatpp\/core\/async\/CoroutineWaitList.s: oatpp\/core\/async\/CoroutineWaitList.cpp.s$/;"	t
oatpp/core/async/Error.cpp.i	../oatpp/build/src/Makefile	/^oatpp\/core\/async\/Error.cpp.i:$/;"	t
oatpp/core/async/Error.cpp.o	../oatpp/build/src/Makefile	/^oatpp\/core\/async\/Error.cpp.o:$/;"	t
oatpp/core/async/Error.cpp.s	../oatpp/build/src/Makefile	/^oatpp\/core\/async\/Error.cpp.s:$/;"	t
oatpp/core/async/Error.i	../oatpp/build/src/Makefile	/^oatpp\/core\/async\/Error.i: oatpp\/core\/async\/Error.cpp.i$/;"	t
oatpp/core/async/Error.o	../oatpp/build/src/Makefile	/^oatpp\/core\/async\/Error.o: oatpp\/core\/async\/Error.cpp.o$/;"	t
oatpp/core/async/Error.s	../oatpp/build/src/Makefile	/^oatpp\/core\/async\/Error.s: oatpp\/core\/async\/Error.cpp.s$/;"	t
oatpp/core/async/Executor.cpp.i	../oatpp/build/src/Makefile	/^oatpp\/core\/async\/Executor.cpp.i:$/;"	t
oatpp/core/async/Executor.cpp.o	../oatpp/build/src/Makefile	/^oatpp\/core\/async\/Executor.cpp.o:$/;"	t
oatpp/core/async/Executor.cpp.s	../oatpp/build/src/Makefile	/^oatpp\/core\/async\/Executor.cpp.s:$/;"	t
oatpp/core/async/Executor.i	../oatpp/build/src/Makefile	/^oatpp\/core\/async\/Executor.i: oatpp\/core\/async\/Executor.cpp.i$/;"	t
oatpp/core/async/Executor.o	../oatpp/build/src/Makefile	/^oatpp\/core\/async\/Executor.o: oatpp\/core\/async\/Executor.cpp.o$/;"	t
oatpp/core/async/Executor.s	../oatpp/build/src/Makefile	/^oatpp\/core\/async\/Executor.s: oatpp\/core\/async\/Executor.cpp.s$/;"	t
oatpp/core/async/Lock.cpp.i	../oatpp/build/src/Makefile	/^oatpp\/core\/async\/Lock.cpp.i:$/;"	t
oatpp/core/async/Lock.cpp.o	../oatpp/build/src/Makefile	/^oatpp\/core\/async\/Lock.cpp.o:$/;"	t
oatpp/core/async/Lock.cpp.s	../oatpp/build/src/Makefile	/^oatpp\/core\/async\/Lock.cpp.s:$/;"	t
oatpp/core/async/Lock.i	../oatpp/build/src/Makefile	/^oatpp\/core\/async\/Lock.i: oatpp\/core\/async\/Lock.cpp.i$/;"	t
oatpp/core/async/Lock.o	../oatpp/build/src/Makefile	/^oatpp\/core\/async\/Lock.o: oatpp\/core\/async\/Lock.cpp.o$/;"	t
oatpp/core/async/Lock.s	../oatpp/build/src/Makefile	/^oatpp\/core\/async\/Lock.s: oatpp\/core\/async\/Lock.cpp.s$/;"	t
oatpp/core/async/LockTest.cpp.i	../oatpp/build/test/Makefile	/^oatpp\/core\/async\/LockTest.cpp.i:$/;"	t
oatpp/core/async/LockTest.cpp.o	../oatpp/build/test/Makefile	/^oatpp\/core\/async\/LockTest.cpp.o:$/;"	t
oatpp/core/async/LockTest.cpp.s	../oatpp/build/test/Makefile	/^oatpp\/core\/async\/LockTest.cpp.s:$/;"	t
oatpp/core/async/LockTest.i	../oatpp/build/test/Makefile	/^oatpp\/core\/async\/LockTest.i: oatpp\/core\/async\/LockTest.cpp.i$/;"	t
oatpp/core/async/LockTest.o	../oatpp/build/test/Makefile	/^oatpp\/core\/async\/LockTest.o: oatpp\/core\/async\/LockTest.cpp.o$/;"	t
oatpp/core/async/LockTest.s	../oatpp/build/test/Makefile	/^oatpp\/core\/async\/LockTest.s: oatpp\/core\/async\/LockTest.cpp.s$/;"	t
oatpp/core/async/Processor.cpp.i	../oatpp/build/src/Makefile	/^oatpp\/core\/async\/Processor.cpp.i:$/;"	t
oatpp/core/async/Processor.cpp.o	../oatpp/build/src/Makefile	/^oatpp\/core\/async\/Processor.cpp.o:$/;"	t
oatpp/core/async/Processor.cpp.s	../oatpp/build/src/Makefile	/^oatpp\/core\/async\/Processor.cpp.s:$/;"	t
oatpp/core/async/Processor.i	../oatpp/build/src/Makefile	/^oatpp\/core\/async\/Processor.i: oatpp\/core\/async\/Processor.cpp.i$/;"	t
oatpp/core/async/Processor.o	../oatpp/build/src/Makefile	/^oatpp\/core\/async\/Processor.o: oatpp\/core\/async\/Processor.cpp.o$/;"	t
oatpp/core/async/Processor.s	../oatpp/build/src/Makefile	/^oatpp\/core\/async\/Processor.s: oatpp\/core\/async\/Processor.cpp.s$/;"	t
oatpp/core/async/worker/IOEventWorker_common.cpp.i	../oatpp/build/src/Makefile	/^oatpp\/core\/async\/worker\/IOEventWorker_common.cpp.i:$/;"	t
oatpp/core/async/worker/IOEventWorker_common.cpp.o	../oatpp/build/src/Makefile	/^oatpp\/core\/async\/worker\/IOEventWorker_common.cpp.o:$/;"	t
oatpp/core/async/worker/IOEventWorker_common.cpp.s	../oatpp/build/src/Makefile	/^oatpp\/core\/async\/worker\/IOEventWorker_common.cpp.s:$/;"	t
oatpp/core/async/worker/IOEventWorker_common.i	../oatpp/build/src/Makefile	/^oatpp\/core\/async\/worker\/IOEventWorker_common.i: oatpp\/core\/async\/worker\/IOEventWorker_co/;"	t
oatpp/core/async/worker/IOEventWorker_common.o	../oatpp/build/src/Makefile	/^oatpp\/core\/async\/worker\/IOEventWorker_common.o: oatpp\/core\/async\/worker\/IOEventWorker_co/;"	t
oatpp/core/async/worker/IOEventWorker_common.s	../oatpp/build/src/Makefile	/^oatpp\/core\/async\/worker\/IOEventWorker_common.s: oatpp\/core\/async\/worker\/IOEventWorker_co/;"	t
oatpp/core/async/worker/IOEventWorker_epoll.cpp.i	../oatpp/build/src/Makefile	/^oatpp\/core\/async\/worker\/IOEventWorker_epoll.cpp.i:$/;"	t
oatpp/core/async/worker/IOEventWorker_epoll.cpp.o	../oatpp/build/src/Makefile	/^oatpp\/core\/async\/worker\/IOEventWorker_epoll.cpp.o:$/;"	t
oatpp/core/async/worker/IOEventWorker_epoll.cpp.s	../oatpp/build/src/Makefile	/^oatpp\/core\/async\/worker\/IOEventWorker_epoll.cpp.s:$/;"	t
oatpp/core/async/worker/IOEventWorker_epoll.i	../oatpp/build/src/Makefile	/^oatpp\/core\/async\/worker\/IOEventWorker_epoll.i: oatpp\/core\/async\/worker\/IOEventWorker_epo/;"	t
oatpp/core/async/worker/IOEventWorker_epoll.o	../oatpp/build/src/Makefile	/^oatpp\/core\/async\/worker\/IOEventWorker_epoll.o: oatpp\/core\/async\/worker\/IOEventWorker_epo/;"	t
oatpp/core/async/worker/IOEventWorker_epoll.s	../oatpp/build/src/Makefile	/^oatpp\/core\/async\/worker\/IOEventWorker_epoll.s: oatpp\/core\/async\/worker\/IOEventWorker_epo/;"	t
oatpp/core/async/worker/IOEventWorker_kqueue.cpp.i	../oatpp/build/src/Makefile	/^oatpp\/core\/async\/worker\/IOEventWorker_kqueue.cpp.i:$/;"	t
oatpp/core/async/worker/IOEventWorker_kqueue.cpp.o	../oatpp/build/src/Makefile	/^oatpp\/core\/async\/worker\/IOEventWorker_kqueue.cpp.o:$/;"	t
oatpp/core/async/worker/IOEventWorker_kqueue.cpp.s	../oatpp/build/src/Makefile	/^oatpp\/core\/async\/worker\/IOEventWorker_kqueue.cpp.s:$/;"	t
oatpp/core/async/worker/IOEventWorker_kqueue.i	../oatpp/build/src/Makefile	/^oatpp\/core\/async\/worker\/IOEventWorker_kqueue.i: oatpp\/core\/async\/worker\/IOEventWorker_kq/;"	t
oatpp/core/async/worker/IOEventWorker_kqueue.o	../oatpp/build/src/Makefile	/^oatpp\/core\/async\/worker\/IOEventWorker_kqueue.o: oatpp\/core\/async\/worker\/IOEventWorker_kq/;"	t
oatpp/core/async/worker/IOEventWorker_kqueue.s	../oatpp/build/src/Makefile	/^oatpp\/core\/async\/worker\/IOEventWorker_kqueue.s: oatpp\/core\/async\/worker\/IOEventWorker_kq/;"	t
oatpp/core/async/worker/IOWorker.cpp.i	../oatpp/build/src/Makefile	/^oatpp\/core\/async\/worker\/IOWorker.cpp.i:$/;"	t
oatpp/core/async/worker/IOWorker.cpp.o	../oatpp/build/src/Makefile	/^oatpp\/core\/async\/worker\/IOWorker.cpp.o:$/;"	t
oatpp/core/async/worker/IOWorker.cpp.s	../oatpp/build/src/Makefile	/^oatpp\/core\/async\/worker\/IOWorker.cpp.s:$/;"	t
oatpp/core/async/worker/IOWorker.i	../oatpp/build/src/Makefile	/^oatpp\/core\/async\/worker\/IOWorker.i: oatpp\/core\/async\/worker\/IOWorker.cpp.i$/;"	t
oatpp/core/async/worker/IOWorker.o	../oatpp/build/src/Makefile	/^oatpp\/core\/async\/worker\/IOWorker.o: oatpp\/core\/async\/worker\/IOWorker.cpp.o$/;"	t
oatpp/core/async/worker/IOWorker.s	../oatpp/build/src/Makefile	/^oatpp\/core\/async\/worker\/IOWorker.s: oatpp\/core\/async\/worker\/IOWorker.cpp.s$/;"	t
oatpp/core/async/worker/TimerWorker.cpp.i	../oatpp/build/src/Makefile	/^oatpp\/core\/async\/worker\/TimerWorker.cpp.i:$/;"	t
oatpp/core/async/worker/TimerWorker.cpp.o	../oatpp/build/src/Makefile	/^oatpp\/core\/async\/worker\/TimerWorker.cpp.o:$/;"	t
oatpp/core/async/worker/TimerWorker.cpp.s	../oatpp/build/src/Makefile	/^oatpp\/core\/async\/worker\/TimerWorker.cpp.s:$/;"	t
oatpp/core/async/worker/TimerWorker.i	../oatpp/build/src/Makefile	/^oatpp\/core\/async\/worker\/TimerWorker.i: oatpp\/core\/async\/worker\/TimerWorker.cpp.i$/;"	t
oatpp/core/async/worker/TimerWorker.o	../oatpp/build/src/Makefile	/^oatpp\/core\/async\/worker\/TimerWorker.o: oatpp\/core\/async\/worker\/TimerWorker.cpp.o$/;"	t
oatpp/core/async/worker/TimerWorker.s	../oatpp/build/src/Makefile	/^oatpp\/core\/async\/worker\/TimerWorker.s: oatpp\/core\/async\/worker\/TimerWorker.cpp.s$/;"	t
oatpp/core/async/worker/Worker.cpp.i	../oatpp/build/src/Makefile	/^oatpp\/core\/async\/worker\/Worker.cpp.i:$/;"	t
oatpp/core/async/worker/Worker.cpp.o	../oatpp/build/src/Makefile	/^oatpp\/core\/async\/worker\/Worker.cpp.o:$/;"	t
oatpp/core/async/worker/Worker.cpp.s	../oatpp/build/src/Makefile	/^oatpp\/core\/async\/worker\/Worker.cpp.s:$/;"	t
oatpp/core/async/worker/Worker.i	../oatpp/build/src/Makefile	/^oatpp\/core\/async\/worker\/Worker.i: oatpp\/core\/async\/worker\/Worker.cpp.i$/;"	t
oatpp/core/async/worker/Worker.o	../oatpp/build/src/Makefile	/^oatpp\/core\/async\/worker\/Worker.o: oatpp\/core\/async\/worker\/Worker.cpp.o$/;"	t
oatpp/core/async/worker/Worker.s	../oatpp/build/src/Makefile	/^oatpp\/core\/async\/worker\/Worker.s: oatpp\/core\/async\/worker\/Worker.cpp.s$/;"	t
oatpp/core/base/CommandLineArguments.cpp.i	../oatpp/build/src/Makefile	/^oatpp\/core\/base\/CommandLineArguments.cpp.i:$/;"	t
oatpp/core/base/CommandLineArguments.cpp.o	../oatpp/build/src/Makefile	/^oatpp\/core\/base\/CommandLineArguments.cpp.o:$/;"	t
oatpp/core/base/CommandLineArguments.cpp.s	../oatpp/build/src/Makefile	/^oatpp\/core\/base\/CommandLineArguments.cpp.s:$/;"	t
oatpp/core/base/CommandLineArguments.i	../oatpp/build/src/Makefile	/^oatpp\/core\/base\/CommandLineArguments.i: oatpp\/core\/base\/CommandLineArguments.cpp.i$/;"	t
oatpp/core/base/CommandLineArguments.o	../oatpp/build/src/Makefile	/^oatpp\/core\/base\/CommandLineArguments.o: oatpp\/core\/base\/CommandLineArguments.cpp.o$/;"	t
oatpp/core/base/CommandLineArguments.s	../oatpp/build/src/Makefile	/^oatpp\/core\/base\/CommandLineArguments.s: oatpp\/core\/base\/CommandLineArguments.cpp.s$/;"	t
oatpp/core/base/CommandLineArgumentsTest.cpp.i	../oatpp/build/test/Makefile	/^oatpp\/core\/base\/CommandLineArgumentsTest.cpp.i:$/;"	t
oatpp/core/base/CommandLineArgumentsTest.cpp.o	../oatpp/build/test/Makefile	/^oatpp\/core\/base\/CommandLineArgumentsTest.cpp.o:$/;"	t
oatpp/core/base/CommandLineArgumentsTest.cpp.s	../oatpp/build/test/Makefile	/^oatpp\/core\/base\/CommandLineArgumentsTest.cpp.s:$/;"	t
oatpp/core/base/CommandLineArgumentsTest.i	../oatpp/build/test/Makefile	/^oatpp\/core\/base\/CommandLineArgumentsTest.i: oatpp\/core\/base\/CommandLineArgumentsTest.cpp.i$/;"	t
oatpp/core/base/CommandLineArgumentsTest.o	../oatpp/build/test/Makefile	/^oatpp\/core\/base\/CommandLineArgumentsTest.o: oatpp\/core\/base\/CommandLineArgumentsTest.cpp.o$/;"	t
oatpp/core/base/CommandLineArgumentsTest.s	../oatpp/build/test/Makefile	/^oatpp\/core\/base\/CommandLineArgumentsTest.s: oatpp\/core\/base\/CommandLineArgumentsTest.cpp.s$/;"	t
oatpp/core/base/Countable.cpp.i	../oatpp/build/src/Makefile	/^oatpp\/core\/base\/Countable.cpp.i:$/;"	t
oatpp/core/base/Countable.cpp.o	../oatpp/build/src/Makefile	/^oatpp\/core\/base\/Countable.cpp.o:$/;"	t
oatpp/core/base/Countable.cpp.s	../oatpp/build/src/Makefile	/^oatpp\/core\/base\/Countable.cpp.s:$/;"	t
oatpp/core/base/Countable.i	../oatpp/build/src/Makefile	/^oatpp\/core\/base\/Countable.i: oatpp\/core\/base\/Countable.cpp.i$/;"	t
oatpp/core/base/Countable.o	../oatpp/build/src/Makefile	/^oatpp\/core\/base\/Countable.o: oatpp\/core\/base\/Countable.cpp.o$/;"	t
oatpp/core/base/Countable.s	../oatpp/build/src/Makefile	/^oatpp\/core\/base\/Countable.s: oatpp\/core\/base\/Countable.cpp.s$/;"	t
oatpp/core/base/Environment.cpp.i	../oatpp/build/src/Makefile	/^oatpp\/core\/base\/Environment.cpp.i:$/;"	t
oatpp/core/base/Environment.cpp.o	../oatpp/build/src/Makefile	/^oatpp\/core\/base\/Environment.cpp.o:$/;"	t
oatpp/core/base/Environment.cpp.s	../oatpp/build/src/Makefile	/^oatpp\/core\/base\/Environment.cpp.s:$/;"	t
oatpp/core/base/Environment.i	../oatpp/build/src/Makefile	/^oatpp\/core\/base\/Environment.i: oatpp\/core\/base\/Environment.cpp.i$/;"	t
oatpp/core/base/Environment.o	../oatpp/build/src/Makefile	/^oatpp\/core\/base\/Environment.o: oatpp\/core\/base\/Environment.cpp.o$/;"	t
oatpp/core/base/Environment.s	../oatpp/build/src/Makefile	/^oatpp\/core\/base\/Environment.s: oatpp\/core\/base\/Environment.cpp.s$/;"	t
oatpp/core/base/RegRuleTest.cpp.i	../oatpp/build/test/Makefile	/^oatpp\/core\/base\/RegRuleTest.cpp.i:$/;"	t
oatpp/core/base/RegRuleTest.cpp.o	../oatpp/build/test/Makefile	/^oatpp\/core\/base\/RegRuleTest.cpp.o:$/;"	t
oatpp/core/base/RegRuleTest.cpp.s	../oatpp/build/test/Makefile	/^oatpp\/core\/base\/RegRuleTest.cpp.s:$/;"	t
oatpp/core/base/RegRuleTest.i	../oatpp/build/test/Makefile	/^oatpp\/core\/base\/RegRuleTest.i: oatpp\/core\/base\/RegRuleTest.cpp.i$/;"	t
oatpp/core/base/RegRuleTest.o	../oatpp/build/test/Makefile	/^oatpp\/core\/base\/RegRuleTest.o: oatpp\/core\/base\/RegRuleTest.cpp.o$/;"	t
oatpp/core/base/RegRuleTest.s	../oatpp/build/test/Makefile	/^oatpp\/core\/base\/RegRuleTest.s: oatpp\/core\/base\/RegRuleTest.cpp.s$/;"	t
oatpp/core/base/StrBuffer.cpp.i	../oatpp/build/src/Makefile	/^oatpp\/core\/base\/StrBuffer.cpp.i:$/;"	t
oatpp/core/base/StrBuffer.cpp.o	../oatpp/build/src/Makefile	/^oatpp\/core\/base\/StrBuffer.cpp.o:$/;"	t
oatpp/core/base/StrBuffer.cpp.s	../oatpp/build/src/Makefile	/^oatpp\/core\/base\/StrBuffer.cpp.s:$/;"	t
oatpp/core/base/StrBuffer.i	../oatpp/build/src/Makefile	/^oatpp\/core\/base\/StrBuffer.i: oatpp\/core\/base\/StrBuffer.cpp.i$/;"	t
oatpp/core/base/StrBuffer.o	../oatpp/build/src/Makefile	/^oatpp\/core\/base\/StrBuffer.o: oatpp\/core\/base\/StrBuffer.cpp.o$/;"	t
oatpp/core/base/StrBuffer.s	../oatpp/build/src/Makefile	/^oatpp\/core\/base\/StrBuffer.s: oatpp\/core\/base\/StrBuffer.cpp.s$/;"	t
oatpp/core/base/collection/LinkedListTest.cpp.i	../oatpp/build/test/Makefile	/^oatpp\/core\/base\/collection\/LinkedListTest.cpp.i:$/;"	t
oatpp/core/base/collection/LinkedListTest.cpp.o	../oatpp/build/test/Makefile	/^oatpp\/core\/base\/collection\/LinkedListTest.cpp.o:$/;"	t
oatpp/core/base/collection/LinkedListTest.cpp.s	../oatpp/build/test/Makefile	/^oatpp\/core\/base\/collection\/LinkedListTest.cpp.s:$/;"	t
oatpp/core/base/collection/LinkedListTest.i	../oatpp/build/test/Makefile	/^oatpp\/core\/base\/collection\/LinkedListTest.i: oatpp\/core\/base\/collection\/LinkedListTest.c/;"	t
oatpp/core/base/collection/LinkedListTest.o	../oatpp/build/test/Makefile	/^oatpp\/core\/base\/collection\/LinkedListTest.o: oatpp\/core\/base\/collection\/LinkedListTest.c/;"	t
oatpp/core/base/collection/LinkedListTest.s	../oatpp/build/test/Makefile	/^oatpp\/core\/base\/collection\/LinkedListTest.s: oatpp\/core\/base\/collection\/LinkedListTest.c/;"	t
oatpp/core/base/memory/Allocator.cpp.i	../oatpp/build/src/Makefile	/^oatpp\/core\/base\/memory\/Allocator.cpp.i:$/;"	t
oatpp/core/base/memory/Allocator.cpp.o	../oatpp/build/src/Makefile	/^oatpp\/core\/base\/memory\/Allocator.cpp.o:$/;"	t
oatpp/core/base/memory/Allocator.cpp.s	../oatpp/build/src/Makefile	/^oatpp\/core\/base\/memory\/Allocator.cpp.s:$/;"	t
oatpp/core/base/memory/Allocator.i	../oatpp/build/src/Makefile	/^oatpp\/core\/base\/memory\/Allocator.i: oatpp\/core\/base\/memory\/Allocator.cpp.i$/;"	t
oatpp/core/base/memory/Allocator.o	../oatpp/build/src/Makefile	/^oatpp\/core\/base\/memory\/Allocator.o: oatpp\/core\/base\/memory\/Allocator.cpp.o$/;"	t
oatpp/core/base/memory/Allocator.s	../oatpp/build/src/Makefile	/^oatpp\/core\/base\/memory\/Allocator.s: oatpp\/core\/base\/memory\/Allocator.cpp.s$/;"	t
oatpp/core/base/memory/MemoryPool.cpp.i	../oatpp/build/src/Makefile	/^oatpp\/core\/base\/memory\/MemoryPool.cpp.i:$/;"	t
oatpp/core/base/memory/MemoryPool.cpp.o	../oatpp/build/src/Makefile	/^oatpp\/core\/base\/memory\/MemoryPool.cpp.o:$/;"	t
oatpp/core/base/memory/MemoryPool.cpp.s	../oatpp/build/src/Makefile	/^oatpp\/core\/base\/memory\/MemoryPool.cpp.s:$/;"	t
oatpp/core/base/memory/MemoryPool.i	../oatpp/build/src/Makefile	/^oatpp\/core\/base\/memory\/MemoryPool.i: oatpp\/core\/base\/memory\/MemoryPool.cpp.i$/;"	t
oatpp/core/base/memory/MemoryPool.o	../oatpp/build/src/Makefile	/^oatpp\/core\/base\/memory\/MemoryPool.o: oatpp\/core\/base\/memory\/MemoryPool.cpp.o$/;"	t
oatpp/core/base/memory/MemoryPool.s	../oatpp/build/src/Makefile	/^oatpp\/core\/base\/memory\/MemoryPool.s: oatpp\/core\/base\/memory\/MemoryPool.cpp.s$/;"	t
oatpp/core/base/memory/MemoryPoolTest.cpp.i	../oatpp/build/test/Makefile	/^oatpp\/core\/base\/memory\/MemoryPoolTest.cpp.i:$/;"	t
oatpp/core/base/memory/MemoryPoolTest.cpp.o	../oatpp/build/test/Makefile	/^oatpp\/core\/base\/memory\/MemoryPoolTest.cpp.o:$/;"	t
oatpp/core/base/memory/MemoryPoolTest.cpp.s	../oatpp/build/test/Makefile	/^oatpp\/core\/base\/memory\/MemoryPoolTest.cpp.s:$/;"	t
oatpp/core/base/memory/MemoryPoolTest.i	../oatpp/build/test/Makefile	/^oatpp\/core\/base\/memory\/MemoryPoolTest.i: oatpp\/core\/base\/memory\/MemoryPoolTest.cpp.i$/;"	t
oatpp/core/base/memory/MemoryPoolTest.o	../oatpp/build/test/Makefile	/^oatpp\/core\/base\/memory\/MemoryPoolTest.o: oatpp\/core\/base\/memory\/MemoryPoolTest.cpp.o$/;"	t
oatpp/core/base/memory/MemoryPoolTest.s	../oatpp/build/test/Makefile	/^oatpp\/core\/base\/memory\/MemoryPoolTest.s: oatpp\/core\/base\/memory\/MemoryPoolTest.cpp.s$/;"	t
oatpp/core/base/memory/ObjectPool.cpp.i	../oatpp/build/src/Makefile	/^oatpp\/core\/base\/memory\/ObjectPool.cpp.i:$/;"	t
oatpp/core/base/memory/ObjectPool.cpp.o	../oatpp/build/src/Makefile	/^oatpp\/core\/base\/memory\/ObjectPool.cpp.o:$/;"	t
oatpp/core/base/memory/ObjectPool.cpp.s	../oatpp/build/src/Makefile	/^oatpp\/core\/base\/memory\/ObjectPool.cpp.s:$/;"	t
oatpp/core/base/memory/ObjectPool.i	../oatpp/build/src/Makefile	/^oatpp\/core\/base\/memory\/ObjectPool.i: oatpp\/core\/base\/memory\/ObjectPool.cpp.i$/;"	t
oatpp/core/base/memory/ObjectPool.o	../oatpp/build/src/Makefile	/^oatpp\/core\/base\/memory\/ObjectPool.o: oatpp\/core\/base\/memory\/ObjectPool.cpp.o$/;"	t
oatpp/core/base/memory/ObjectPool.s	../oatpp/build/src/Makefile	/^oatpp\/core\/base\/memory\/ObjectPool.s: oatpp\/core\/base\/memory\/ObjectPool.cpp.s$/;"	t
oatpp/core/base/memory/PerfTest.cpp.i	../oatpp/build/test/Makefile	/^oatpp\/core\/base\/memory\/PerfTest.cpp.i:$/;"	t
oatpp/core/base/memory/PerfTest.cpp.o	../oatpp/build/test/Makefile	/^oatpp\/core\/base\/memory\/PerfTest.cpp.o:$/;"	t
oatpp/core/base/memory/PerfTest.cpp.s	../oatpp/build/test/Makefile	/^oatpp\/core\/base\/memory\/PerfTest.cpp.s:$/;"	t
oatpp/core/base/memory/PerfTest.i	../oatpp/build/test/Makefile	/^oatpp\/core\/base\/memory\/PerfTest.i: oatpp\/core\/base\/memory\/PerfTest.cpp.i$/;"	t
oatpp/core/base/memory/PerfTest.o	../oatpp/build/test/Makefile	/^oatpp\/core\/base\/memory\/PerfTest.o: oatpp\/core\/base\/memory\/PerfTest.cpp.o$/;"	t
oatpp/core/base/memory/PerfTest.s	../oatpp/build/test/Makefile	/^oatpp\/core\/base\/memory\/PerfTest.s: oatpp\/core\/base\/memory\/PerfTest.cpp.s$/;"	t
oatpp/core/collection/FastQueue.cpp.i	../oatpp/build/src/Makefile	/^oatpp\/core\/collection\/FastQueue.cpp.i:$/;"	t
oatpp/core/collection/FastQueue.cpp.o	../oatpp/build/src/Makefile	/^oatpp\/core\/collection\/FastQueue.cpp.o:$/;"	t
oatpp/core/collection/FastQueue.cpp.s	../oatpp/build/src/Makefile	/^oatpp\/core\/collection\/FastQueue.cpp.s:$/;"	t
oatpp/core/collection/FastQueue.i	../oatpp/build/src/Makefile	/^oatpp\/core\/collection\/FastQueue.i: oatpp\/core\/collection\/FastQueue.cpp.i$/;"	t
oatpp/core/collection/FastQueue.o	../oatpp/build/src/Makefile	/^oatpp\/core\/collection\/FastQueue.o: oatpp\/core\/collection\/FastQueue.cpp.o$/;"	t
oatpp/core/collection/FastQueue.s	../oatpp/build/src/Makefile	/^oatpp\/core\/collection\/FastQueue.s: oatpp\/core\/collection\/FastQueue.cpp.s$/;"	t
oatpp/core/collection/LinkedList.cpp.i	../oatpp/build/src/Makefile	/^oatpp\/core\/collection\/LinkedList.cpp.i:$/;"	t
oatpp/core/collection/LinkedList.cpp.o	../oatpp/build/src/Makefile	/^oatpp\/core\/collection\/LinkedList.cpp.o:$/;"	t
oatpp/core/collection/LinkedList.cpp.s	../oatpp/build/src/Makefile	/^oatpp\/core\/collection\/LinkedList.cpp.s:$/;"	t
oatpp/core/collection/LinkedList.i	../oatpp/build/src/Makefile	/^oatpp\/core\/collection\/LinkedList.i: oatpp\/core\/collection\/LinkedList.cpp.i$/;"	t
oatpp/core/collection/LinkedList.o	../oatpp/build/src/Makefile	/^oatpp\/core\/collection\/LinkedList.o: oatpp\/core\/collection\/LinkedList.cpp.o$/;"	t
oatpp/core/collection/LinkedList.s	../oatpp/build/src/Makefile	/^oatpp\/core\/collection\/LinkedList.s: oatpp\/core\/collection\/LinkedList.cpp.s$/;"	t
oatpp/core/collection/ListMap.cpp.i	../oatpp/build/src/Makefile	/^oatpp\/core\/collection\/ListMap.cpp.i:$/;"	t
oatpp/core/collection/ListMap.cpp.o	../oatpp/build/src/Makefile	/^oatpp\/core\/collection\/ListMap.cpp.o:$/;"	t
oatpp/core/collection/ListMap.cpp.s	../oatpp/build/src/Makefile	/^oatpp\/core\/collection\/ListMap.cpp.s:$/;"	t
oatpp/core/collection/ListMap.i	../oatpp/build/src/Makefile	/^oatpp\/core\/collection\/ListMap.i: oatpp\/core\/collection\/ListMap.cpp.i$/;"	t
oatpp/core/collection/ListMap.o	../oatpp/build/src/Makefile	/^oatpp\/core\/collection\/ListMap.o: oatpp\/core\/collection\/ListMap.cpp.o$/;"	t
oatpp/core/collection/ListMap.s	../oatpp/build/src/Makefile	/^oatpp\/core\/collection\/ListMap.s: oatpp\/core\/collection\/ListMap.cpp.s$/;"	t
oatpp/core/concurrency/SpinLock.cpp.i	../oatpp/build/src/Makefile	/^oatpp\/core\/concurrency\/SpinLock.cpp.i:$/;"	t
oatpp/core/concurrency/SpinLock.cpp.o	../oatpp/build/src/Makefile	/^oatpp\/core\/concurrency\/SpinLock.cpp.o:$/;"	t
oatpp/core/concurrency/SpinLock.cpp.s	../oatpp/build/src/Makefile	/^oatpp\/core\/concurrency\/SpinLock.cpp.s:$/;"	t
oatpp/core/concurrency/SpinLock.i	../oatpp/build/src/Makefile	/^oatpp\/core\/concurrency\/SpinLock.i: oatpp\/core\/concurrency\/SpinLock.cpp.i$/;"	t
oatpp/core/concurrency/SpinLock.o	../oatpp/build/src/Makefile	/^oatpp\/core\/concurrency\/SpinLock.o: oatpp\/core\/concurrency\/SpinLock.cpp.o$/;"	t
oatpp/core/concurrency/SpinLock.s	../oatpp/build/src/Makefile	/^oatpp\/core\/concurrency\/SpinLock.s: oatpp\/core\/concurrency\/SpinLock.cpp.s$/;"	t
oatpp/core/concurrency/Thread.cpp.i	../oatpp/build/src/Makefile	/^oatpp\/core\/concurrency\/Thread.cpp.i:$/;"	t
oatpp/core/concurrency/Thread.cpp.o	../oatpp/build/src/Makefile	/^oatpp\/core\/concurrency\/Thread.cpp.o:$/;"	t
oatpp/core/concurrency/Thread.cpp.s	../oatpp/build/src/Makefile	/^oatpp\/core\/concurrency\/Thread.cpp.s:$/;"	t
oatpp/core/concurrency/Thread.i	../oatpp/build/src/Makefile	/^oatpp\/core\/concurrency\/Thread.i: oatpp\/core\/concurrency\/Thread.cpp.i$/;"	t
oatpp/core/concurrency/Thread.o	../oatpp/build/src/Makefile	/^oatpp\/core\/concurrency\/Thread.o: oatpp\/core\/concurrency\/Thread.cpp.o$/;"	t
oatpp/core/concurrency/Thread.s	../oatpp/build/src/Makefile	/^oatpp\/core\/concurrency\/Thread.s: oatpp\/core\/concurrency\/Thread.cpp.s$/;"	t
oatpp/core/data/IODefinitions.cpp.i	../oatpp/build/src/Makefile	/^oatpp\/core\/data\/IODefinitions.cpp.i:$/;"	t
oatpp/core/data/IODefinitions.cpp.o	../oatpp/build/src/Makefile	/^oatpp\/core\/data\/IODefinitions.cpp.o:$/;"	t
oatpp/core/data/IODefinitions.cpp.s	../oatpp/build/src/Makefile	/^oatpp\/core\/data\/IODefinitions.cpp.s:$/;"	t
oatpp/core/data/IODefinitions.i	../oatpp/build/src/Makefile	/^oatpp\/core\/data\/IODefinitions.i: oatpp\/core\/data\/IODefinitions.cpp.i$/;"	t
oatpp/core/data/IODefinitions.o	../oatpp/build/src/Makefile	/^oatpp\/core\/data\/IODefinitions.o: oatpp\/core\/data\/IODefinitions.cpp.o$/;"	t
oatpp/core/data/IODefinitions.s	../oatpp/build/src/Makefile	/^oatpp\/core\/data\/IODefinitions.s: oatpp\/core\/data\/IODefinitions.cpp.s$/;"	t
oatpp/core/data/buffer/FIFOBuffer.cpp.i	../oatpp/build/src/Makefile	/^oatpp\/core\/data\/buffer\/FIFOBuffer.cpp.i:$/;"	t
oatpp/core/data/buffer/FIFOBuffer.cpp.o	../oatpp/build/src/Makefile	/^oatpp\/core\/data\/buffer\/FIFOBuffer.cpp.o:$/;"	t
oatpp/core/data/buffer/FIFOBuffer.cpp.s	../oatpp/build/src/Makefile	/^oatpp\/core\/data\/buffer\/FIFOBuffer.cpp.s:$/;"	t
oatpp/core/data/buffer/FIFOBuffer.i	../oatpp/build/src/Makefile	/^oatpp\/core\/data\/buffer\/FIFOBuffer.i: oatpp\/core\/data\/buffer\/FIFOBuffer.cpp.i$/;"	t
oatpp/core/data/buffer/FIFOBuffer.o	../oatpp/build/src/Makefile	/^oatpp\/core\/data\/buffer\/FIFOBuffer.o: oatpp\/core\/data\/buffer\/FIFOBuffer.cpp.o$/;"	t
oatpp/core/data/buffer/FIFOBuffer.s	../oatpp/build/src/Makefile	/^oatpp\/core\/data\/buffer\/FIFOBuffer.s: oatpp\/core\/data\/buffer\/FIFOBuffer.cpp.s$/;"	t
oatpp/core/data/buffer/IOBuffer.cpp.i	../oatpp/build/src/Makefile	/^oatpp\/core\/data\/buffer\/IOBuffer.cpp.i:$/;"	t
oatpp/core/data/buffer/IOBuffer.cpp.o	../oatpp/build/src/Makefile	/^oatpp\/core\/data\/buffer\/IOBuffer.cpp.o:$/;"	t
oatpp/core/data/buffer/IOBuffer.cpp.s	../oatpp/build/src/Makefile	/^oatpp\/core\/data\/buffer\/IOBuffer.cpp.s:$/;"	t
oatpp/core/data/buffer/IOBuffer.i	../oatpp/build/src/Makefile	/^oatpp\/core\/data\/buffer\/IOBuffer.i: oatpp\/core\/data\/buffer\/IOBuffer.cpp.i$/;"	t
oatpp/core/data/buffer/IOBuffer.o	../oatpp/build/src/Makefile	/^oatpp\/core\/data\/buffer\/IOBuffer.o: oatpp\/core\/data\/buffer\/IOBuffer.cpp.o$/;"	t
oatpp/core/data/buffer/IOBuffer.s	../oatpp/build/src/Makefile	/^oatpp\/core\/data\/buffer\/IOBuffer.s: oatpp\/core\/data\/buffer\/IOBuffer.cpp.s$/;"	t
oatpp/core/data/mapping/ObjectMapper.cpp.i	../oatpp/build/src/Makefile	/^oatpp\/core\/data\/mapping\/ObjectMapper.cpp.i:$/;"	t
oatpp/core/data/mapping/ObjectMapper.cpp.o	../oatpp/build/src/Makefile	/^oatpp\/core\/data\/mapping\/ObjectMapper.cpp.o:$/;"	t
oatpp/core/data/mapping/ObjectMapper.cpp.s	../oatpp/build/src/Makefile	/^oatpp\/core\/data\/mapping\/ObjectMapper.cpp.s:$/;"	t
oatpp/core/data/mapping/ObjectMapper.i	../oatpp/build/src/Makefile	/^oatpp\/core\/data\/mapping\/ObjectMapper.i: oatpp\/core\/data\/mapping\/ObjectMapper.cpp.i$/;"	t
oatpp/core/data/mapping/ObjectMapper.o	../oatpp/build/src/Makefile	/^oatpp\/core\/data\/mapping\/ObjectMapper.o: oatpp\/core\/data\/mapping\/ObjectMapper.cpp.o$/;"	t
oatpp/core/data/mapping/ObjectMapper.s	../oatpp/build/src/Makefile	/^oatpp\/core\/data\/mapping\/ObjectMapper.s: oatpp\/core\/data\/mapping\/ObjectMapper.cpp.s$/;"	t
oatpp/core/data/mapping/type/List.cpp.i	../oatpp/build/src/Makefile	/^oatpp\/core\/data\/mapping\/type\/List.cpp.i:$/;"	t
oatpp/core/data/mapping/type/List.cpp.o	../oatpp/build/src/Makefile	/^oatpp\/core\/data\/mapping\/type\/List.cpp.o:$/;"	t
oatpp/core/data/mapping/type/List.cpp.s	../oatpp/build/src/Makefile	/^oatpp\/core\/data\/mapping\/type\/List.cpp.s:$/;"	t
oatpp/core/data/mapping/type/List.i	../oatpp/build/src/Makefile	/^oatpp\/core\/data\/mapping\/type\/List.i: oatpp\/core\/data\/mapping\/type\/List.cpp.i$/;"	t
oatpp/core/data/mapping/type/List.o	../oatpp/build/src/Makefile	/^oatpp\/core\/data\/mapping\/type\/List.o: oatpp\/core\/data\/mapping\/type\/List.cpp.o$/;"	t
oatpp/core/data/mapping/type/List.s	../oatpp/build/src/Makefile	/^oatpp\/core\/data\/mapping\/type\/List.s: oatpp\/core\/data\/mapping\/type\/List.cpp.s$/;"	t
oatpp/core/data/mapping/type/ListMap.cpp.i	../oatpp/build/src/Makefile	/^oatpp\/core\/data\/mapping\/type\/ListMap.cpp.i:$/;"	t
oatpp/core/data/mapping/type/ListMap.cpp.o	../oatpp/build/src/Makefile	/^oatpp\/core\/data\/mapping\/type\/ListMap.cpp.o:$/;"	t
oatpp/core/data/mapping/type/ListMap.cpp.s	../oatpp/build/src/Makefile	/^oatpp\/core\/data\/mapping\/type\/ListMap.cpp.s:$/;"	t
oatpp/core/data/mapping/type/ListMap.i	../oatpp/build/src/Makefile	/^oatpp\/core\/data\/mapping\/type\/ListMap.i: oatpp\/core\/data\/mapping\/type\/ListMap.cpp.i$/;"	t
oatpp/core/data/mapping/type/ListMap.o	../oatpp/build/src/Makefile	/^oatpp\/core\/data\/mapping\/type\/ListMap.o: oatpp\/core\/data\/mapping\/type\/ListMap.cpp.o$/;"	t
oatpp/core/data/mapping/type/ListMap.s	../oatpp/build/src/Makefile	/^oatpp\/core\/data\/mapping\/type\/ListMap.s: oatpp\/core\/data\/mapping\/type\/ListMap.cpp.s$/;"	t
oatpp/core/data/mapping/type/Object.cpp.i	../oatpp/build/src/Makefile	/^oatpp\/core\/data\/mapping\/type\/Object.cpp.i:$/;"	t
oatpp/core/data/mapping/type/Object.cpp.o	../oatpp/build/src/Makefile	/^oatpp\/core\/data\/mapping\/type\/Object.cpp.o:$/;"	t
oatpp/core/data/mapping/type/Object.cpp.s	../oatpp/build/src/Makefile	/^oatpp\/core\/data\/mapping\/type\/Object.cpp.s:$/;"	t
oatpp/core/data/mapping/type/Object.i	../oatpp/build/src/Makefile	/^oatpp\/core\/data\/mapping\/type\/Object.i: oatpp\/core\/data\/mapping\/type\/Object.cpp.i$/;"	t
oatpp/core/data/mapping/type/Object.o	../oatpp/build/src/Makefile	/^oatpp\/core\/data\/mapping\/type\/Object.o: oatpp\/core\/data\/mapping\/type\/Object.cpp.o$/;"	t
oatpp/core/data/mapping/type/Object.s	../oatpp/build/src/Makefile	/^oatpp\/core\/data\/mapping\/type\/Object.s: oatpp\/core\/data\/mapping\/type\/Object.cpp.s$/;"	t
oatpp/core/data/mapping/type/Primitive.cpp.i	../oatpp/build/src/Makefile	/^oatpp\/core\/data\/mapping\/type\/Primitive.cpp.i:$/;"	t
oatpp/core/data/mapping/type/Primitive.cpp.o	../oatpp/build/src/Makefile	/^oatpp\/core\/data\/mapping\/type\/Primitive.cpp.o:$/;"	t
oatpp/core/data/mapping/type/Primitive.cpp.s	../oatpp/build/src/Makefile	/^oatpp\/core\/data\/mapping\/type\/Primitive.cpp.s:$/;"	t
oatpp/core/data/mapping/type/Primitive.i	../oatpp/build/src/Makefile	/^oatpp\/core\/data\/mapping\/type\/Primitive.i: oatpp\/core\/data\/mapping\/type\/Primitive.cpp.i$/;"	t
oatpp/core/data/mapping/type/Primitive.o	../oatpp/build/src/Makefile	/^oatpp\/core\/data\/mapping\/type\/Primitive.o: oatpp\/core\/data\/mapping\/type\/Primitive.cpp.o$/;"	t
oatpp/core/data/mapping/type/Primitive.s	../oatpp/build/src/Makefile	/^oatpp\/core\/data\/mapping\/type\/Primitive.s: oatpp\/core\/data\/mapping\/type\/Primitive.cpp.s$/;"	t
oatpp/core/data/mapping/type/Type.cpp.i	../oatpp/build/src/Makefile	/^oatpp\/core\/data\/mapping\/type\/Type.cpp.i:$/;"	t
oatpp/core/data/mapping/type/Type.cpp.o	../oatpp/build/src/Makefile	/^oatpp\/core\/data\/mapping\/type\/Type.cpp.o:$/;"	t
oatpp/core/data/mapping/type/Type.cpp.s	../oatpp/build/src/Makefile	/^oatpp\/core\/data\/mapping\/type\/Type.cpp.s:$/;"	t
oatpp/core/data/mapping/type/Type.i	../oatpp/build/src/Makefile	/^oatpp\/core\/data\/mapping\/type\/Type.i: oatpp\/core\/data\/mapping\/type\/Type.cpp.i$/;"	t
oatpp/core/data/mapping/type/Type.o	../oatpp/build/src/Makefile	/^oatpp\/core\/data\/mapping\/type\/Type.o: oatpp\/core\/data\/mapping\/type\/Type.cpp.o$/;"	t
oatpp/core/data/mapping/type/Type.s	../oatpp/build/src/Makefile	/^oatpp\/core\/data\/mapping\/type\/Type.s: oatpp\/core\/data\/mapping\/type\/Type.cpp.s$/;"	t
oatpp/core/data/mapping/type/TypeTest.cpp.i	../oatpp/build/test/Makefile	/^oatpp\/core\/data\/mapping\/type\/TypeTest.cpp.i:$/;"	t
oatpp/core/data/mapping/type/TypeTest.cpp.o	../oatpp/build/test/Makefile	/^oatpp\/core\/data\/mapping\/type\/TypeTest.cpp.o:$/;"	t
oatpp/core/data/mapping/type/TypeTest.cpp.s	../oatpp/build/test/Makefile	/^oatpp\/core\/data\/mapping\/type\/TypeTest.cpp.s:$/;"	t
oatpp/core/data/mapping/type/TypeTest.i	../oatpp/build/test/Makefile	/^oatpp\/core\/data\/mapping\/type\/TypeTest.i: oatpp\/core\/data\/mapping\/type\/TypeTest.cpp.i$/;"	t
oatpp/core/data/mapping/type/TypeTest.o	../oatpp/build/test/Makefile	/^oatpp\/core\/data\/mapping\/type\/TypeTest.o: oatpp\/core\/data\/mapping\/type\/TypeTest.cpp.o$/;"	t
oatpp/core/data/mapping/type/TypeTest.s	../oatpp/build/test/Makefile	/^oatpp\/core\/data\/mapping\/type\/TypeTest.s: oatpp\/core\/data\/mapping\/type\/TypeTest.cpp.s$/;"	t
oatpp/core/data/share/MemoryLabel.cpp.i	../oatpp/build/src/Makefile	/^oatpp\/core\/data\/share\/MemoryLabel.cpp.i:$/;"	t
oatpp/core/data/share/MemoryLabel.cpp.o	../oatpp/build/src/Makefile	/^oatpp\/core\/data\/share\/MemoryLabel.cpp.o:$/;"	t
oatpp/core/data/share/MemoryLabel.cpp.s	../oatpp/build/src/Makefile	/^oatpp\/core\/data\/share\/MemoryLabel.cpp.s:$/;"	t
oatpp/core/data/share/MemoryLabel.i	../oatpp/build/src/Makefile	/^oatpp\/core\/data\/share\/MemoryLabel.i: oatpp\/core\/data\/share\/MemoryLabel.cpp.i$/;"	t
oatpp/core/data/share/MemoryLabel.o	../oatpp/build/src/Makefile	/^oatpp\/core\/data\/share\/MemoryLabel.o: oatpp\/core\/data\/share\/MemoryLabel.cpp.o$/;"	t
oatpp/core/data/share/MemoryLabel.s	../oatpp/build/src/Makefile	/^oatpp\/core\/data\/share\/MemoryLabel.s: oatpp\/core\/data\/share\/MemoryLabel.cpp.s$/;"	t
oatpp/core/data/share/MemoryLabelTest.cpp.i	../oatpp/build/test/Makefile	/^oatpp\/core\/data\/share\/MemoryLabelTest.cpp.i:$/;"	t
oatpp/core/data/share/MemoryLabelTest.cpp.o	../oatpp/build/test/Makefile	/^oatpp\/core\/data\/share\/MemoryLabelTest.cpp.o:$/;"	t
oatpp/core/data/share/MemoryLabelTest.cpp.s	../oatpp/build/test/Makefile	/^oatpp\/core\/data\/share\/MemoryLabelTest.cpp.s:$/;"	t
oatpp/core/data/share/MemoryLabelTest.i	../oatpp/build/test/Makefile	/^oatpp\/core\/data\/share\/MemoryLabelTest.i: oatpp\/core\/data\/share\/MemoryLabelTest.cpp.i$/;"	t
oatpp/core/data/share/MemoryLabelTest.o	../oatpp/build/test/Makefile	/^oatpp\/core\/data\/share\/MemoryLabelTest.o: oatpp\/core\/data\/share\/MemoryLabelTest.cpp.o$/;"	t
oatpp/core/data/share/MemoryLabelTest.s	../oatpp/build/test/Makefile	/^oatpp\/core\/data\/share\/MemoryLabelTest.s: oatpp\/core\/data\/share\/MemoryLabelTest.cpp.s$/;"	t
oatpp/core/data/stream/ChunkedBuffer.cpp.i	../oatpp/build/src/Makefile	/^oatpp\/core\/data\/stream\/ChunkedBuffer.cpp.i:$/;"	t
oatpp/core/data/stream/ChunkedBuffer.cpp.o	../oatpp/build/src/Makefile	/^oatpp\/core\/data\/stream\/ChunkedBuffer.cpp.o:$/;"	t
oatpp/core/data/stream/ChunkedBuffer.cpp.s	../oatpp/build/src/Makefile	/^oatpp\/core\/data\/stream\/ChunkedBuffer.cpp.s:$/;"	t
oatpp/core/data/stream/ChunkedBuffer.i	../oatpp/build/src/Makefile	/^oatpp\/core\/data\/stream\/ChunkedBuffer.i: oatpp\/core\/data\/stream\/ChunkedBuffer.cpp.i$/;"	t
oatpp/core/data/stream/ChunkedBuffer.o	../oatpp/build/src/Makefile	/^oatpp\/core\/data\/stream\/ChunkedBuffer.o: oatpp\/core\/data\/stream\/ChunkedBuffer.cpp.o$/;"	t
oatpp/core/data/stream/ChunkedBuffer.s	../oatpp/build/src/Makefile	/^oatpp\/core\/data\/stream\/ChunkedBuffer.s: oatpp\/core\/data\/stream\/ChunkedBuffer.cpp.s$/;"	t
oatpp/core/data/stream/ChunkedBufferTest.cpp.i	../oatpp/build/test/Makefile	/^oatpp\/core\/data\/stream\/ChunkedBufferTest.cpp.i:$/;"	t
oatpp/core/data/stream/ChunkedBufferTest.cpp.o	../oatpp/build/test/Makefile	/^oatpp\/core\/data\/stream\/ChunkedBufferTest.cpp.o:$/;"	t
oatpp/core/data/stream/ChunkedBufferTest.cpp.s	../oatpp/build/test/Makefile	/^oatpp\/core\/data\/stream\/ChunkedBufferTest.cpp.s:$/;"	t
oatpp/core/data/stream/ChunkedBufferTest.i	../oatpp/build/test/Makefile	/^oatpp\/core\/data\/stream\/ChunkedBufferTest.i: oatpp\/core\/data\/stream\/ChunkedBufferTest.cpp/;"	t
oatpp/core/data/stream/ChunkedBufferTest.o	../oatpp/build/test/Makefile	/^oatpp\/core\/data\/stream\/ChunkedBufferTest.o: oatpp\/core\/data\/stream\/ChunkedBufferTest.cpp/;"	t
oatpp/core/data/stream/ChunkedBufferTest.s	../oatpp/build/test/Makefile	/^oatpp\/core\/data\/stream\/ChunkedBufferTest.s: oatpp\/core\/data\/stream\/ChunkedBufferTest.cpp/;"	t
oatpp/core/data/stream/Delegate.cpp.i	../oatpp/build/src/Makefile	/^oatpp\/core\/data\/stream\/Delegate.cpp.i:$/;"	t
oatpp/core/data/stream/Delegate.cpp.o	../oatpp/build/src/Makefile	/^oatpp\/core\/data\/stream\/Delegate.cpp.o:$/;"	t
oatpp/core/data/stream/Delegate.cpp.s	../oatpp/build/src/Makefile	/^oatpp\/core\/data\/stream\/Delegate.cpp.s:$/;"	t
oatpp/core/data/stream/Delegate.i	../oatpp/build/src/Makefile	/^oatpp\/core\/data\/stream\/Delegate.i: oatpp\/core\/data\/stream\/Delegate.cpp.i$/;"	t
oatpp/core/data/stream/Delegate.o	../oatpp/build/src/Makefile	/^oatpp\/core\/data\/stream\/Delegate.o: oatpp\/core\/data\/stream\/Delegate.cpp.o$/;"	t
oatpp/core/data/stream/Delegate.s	../oatpp/build/src/Makefile	/^oatpp\/core\/data\/stream\/Delegate.s: oatpp\/core\/data\/stream\/Delegate.cpp.s$/;"	t
oatpp/core/data/stream/Stream.cpp.i	../oatpp/build/src/Makefile	/^oatpp\/core\/data\/stream\/Stream.cpp.i:$/;"	t
oatpp/core/data/stream/Stream.cpp.o	../oatpp/build/src/Makefile	/^oatpp\/core\/data\/stream\/Stream.cpp.o:$/;"	t
oatpp/core/data/stream/Stream.cpp.s	../oatpp/build/src/Makefile	/^oatpp\/core\/data\/stream\/Stream.cpp.s:$/;"	t
oatpp/core/data/stream/Stream.i	../oatpp/build/src/Makefile	/^oatpp\/core\/data\/stream\/Stream.i: oatpp\/core\/data\/stream\/Stream.cpp.i$/;"	t
oatpp/core/data/stream/Stream.o	../oatpp/build/src/Makefile	/^oatpp\/core\/data\/stream\/Stream.o: oatpp\/core\/data\/stream\/Stream.cpp.o$/;"	t
oatpp/core/data/stream/Stream.s	../oatpp/build/src/Makefile	/^oatpp\/core\/data\/stream\/Stream.s: oatpp\/core\/data\/stream\/Stream.cpp.s$/;"	t
oatpp/core/data/stream/StreamBufferedProxy.cpp.i	../oatpp/build/src/Makefile	/^oatpp\/core\/data\/stream\/StreamBufferedProxy.cpp.i:$/;"	t
oatpp/core/data/stream/StreamBufferedProxy.cpp.o	../oatpp/build/src/Makefile	/^oatpp\/core\/data\/stream\/StreamBufferedProxy.cpp.o:$/;"	t
oatpp/core/data/stream/StreamBufferedProxy.cpp.s	../oatpp/build/src/Makefile	/^oatpp\/core\/data\/stream\/StreamBufferedProxy.cpp.s:$/;"	t
oatpp/core/data/stream/StreamBufferedProxy.i	../oatpp/build/src/Makefile	/^oatpp\/core\/data\/stream\/StreamBufferedProxy.i: oatpp\/core\/data\/stream\/StreamBufferedProxy/;"	t
oatpp/core/data/stream/StreamBufferedProxy.o	../oatpp/build/src/Makefile	/^oatpp\/core\/data\/stream\/StreamBufferedProxy.o: oatpp\/core\/data\/stream\/StreamBufferedProxy/;"	t
oatpp/core/data/stream/StreamBufferedProxy.s	../oatpp/build/src/Makefile	/^oatpp\/core\/data\/stream\/StreamBufferedProxy.s: oatpp\/core\/data\/stream\/StreamBufferedProxy/;"	t
oatpp/core/parser/Caret.cpp.i	../oatpp/build/src/Makefile	/^oatpp\/core\/parser\/Caret.cpp.i:$/;"	t
oatpp/core/parser/Caret.cpp.o	../oatpp/build/src/Makefile	/^oatpp\/core\/parser\/Caret.cpp.o:$/;"	t
oatpp/core/parser/Caret.cpp.s	../oatpp/build/src/Makefile	/^oatpp\/core\/parser\/Caret.cpp.s:$/;"	t
oatpp/core/parser/Caret.i	../oatpp/build/src/Makefile	/^oatpp\/core\/parser\/Caret.i: oatpp\/core\/parser\/Caret.cpp.i$/;"	t
oatpp/core/parser/Caret.o	../oatpp/build/src/Makefile	/^oatpp\/core\/parser\/Caret.o: oatpp\/core\/parser\/Caret.cpp.o$/;"	t
oatpp/core/parser/Caret.s	../oatpp/build/src/Makefile	/^oatpp\/core\/parser\/Caret.s: oatpp\/core\/parser\/Caret.cpp.s$/;"	t
oatpp/core/parser/CaretTest.cpp.i	../oatpp/build/test/Makefile	/^oatpp\/core\/parser\/CaretTest.cpp.i:$/;"	t
oatpp/core/parser/CaretTest.cpp.o	../oatpp/build/test/Makefile	/^oatpp\/core\/parser\/CaretTest.cpp.o:$/;"	t
oatpp/core/parser/CaretTest.cpp.s	../oatpp/build/test/Makefile	/^oatpp\/core\/parser\/CaretTest.cpp.s:$/;"	t
oatpp/core/parser/CaretTest.i	../oatpp/build/test/Makefile	/^oatpp\/core\/parser\/CaretTest.i: oatpp\/core\/parser\/CaretTest.cpp.i$/;"	t
oatpp/core/parser/CaretTest.o	../oatpp/build/test/Makefile	/^oatpp\/core\/parser\/CaretTest.o: oatpp\/core\/parser\/CaretTest.cpp.o$/;"	t
oatpp/core/parser/CaretTest.s	../oatpp/build/test/Makefile	/^oatpp\/core\/parser\/CaretTest.s: oatpp\/core\/parser\/CaretTest.cpp.s$/;"	t
oatpp/core/parser/ParsingError.cpp.i	../oatpp/build/src/Makefile	/^oatpp\/core\/parser\/ParsingError.cpp.i:$/;"	t
oatpp/core/parser/ParsingError.cpp.o	../oatpp/build/src/Makefile	/^oatpp\/core\/parser\/ParsingError.cpp.o:$/;"	t
oatpp/core/parser/ParsingError.cpp.s	../oatpp/build/src/Makefile	/^oatpp\/core\/parser\/ParsingError.cpp.s:$/;"	t
oatpp/core/parser/ParsingError.i	../oatpp/build/src/Makefile	/^oatpp\/core\/parser\/ParsingError.i: oatpp\/core\/parser\/ParsingError.cpp.i$/;"	t
oatpp/core/parser/ParsingError.o	../oatpp/build/src/Makefile	/^oatpp\/core\/parser\/ParsingError.o: oatpp\/core\/parser\/ParsingError.cpp.o$/;"	t
oatpp/core/parser/ParsingError.s	../oatpp/build/src/Makefile	/^oatpp\/core\/parser\/ParsingError.s: oatpp\/core\/parser\/ParsingError.cpp.s$/;"	t
oatpp/core/utils/ConversionUtils.cpp.i	../oatpp/build/src/Makefile	/^oatpp\/core\/utils\/ConversionUtils.cpp.i:$/;"	t
oatpp/core/utils/ConversionUtils.cpp.o	../oatpp/build/src/Makefile	/^oatpp\/core\/utils\/ConversionUtils.cpp.o:$/;"	t
oatpp/core/utils/ConversionUtils.cpp.s	../oatpp/build/src/Makefile	/^oatpp\/core\/utils\/ConversionUtils.cpp.s:$/;"	t
oatpp/core/utils/ConversionUtils.i	../oatpp/build/src/Makefile	/^oatpp\/core\/utils\/ConversionUtils.i: oatpp\/core\/utils\/ConversionUtils.cpp.i$/;"	t
oatpp/core/utils/ConversionUtils.o	../oatpp/build/src/Makefile	/^oatpp\/core\/utils\/ConversionUtils.o: oatpp\/core\/utils\/ConversionUtils.cpp.o$/;"	t
oatpp/core/utils/ConversionUtils.s	../oatpp/build/src/Makefile	/^oatpp\/core\/utils\/ConversionUtils.s: oatpp\/core\/utils\/ConversionUtils.cpp.s$/;"	t
oatpp/encoding/Base64.cpp.i	../oatpp/build/src/Makefile	/^oatpp\/encoding\/Base64.cpp.i:$/;"	t
oatpp/encoding/Base64.cpp.o	../oatpp/build/src/Makefile	/^oatpp\/encoding\/Base64.cpp.o:$/;"	t
oatpp/encoding/Base64.cpp.s	../oatpp/build/src/Makefile	/^oatpp\/encoding\/Base64.cpp.s:$/;"	t
oatpp/encoding/Base64.i	../oatpp/build/src/Makefile	/^oatpp\/encoding\/Base64.i: oatpp\/encoding\/Base64.cpp.i$/;"	t
oatpp/encoding/Base64.o	../oatpp/build/src/Makefile	/^oatpp\/encoding\/Base64.o: oatpp\/encoding\/Base64.cpp.o$/;"	t
oatpp/encoding/Base64.s	../oatpp/build/src/Makefile	/^oatpp\/encoding\/Base64.s: oatpp\/encoding\/Base64.cpp.s$/;"	t
oatpp/encoding/Base64Test.cpp.i	../oatpp/build/test/Makefile	/^oatpp\/encoding\/Base64Test.cpp.i:$/;"	t
oatpp/encoding/Base64Test.cpp.o	../oatpp/build/test/Makefile	/^oatpp\/encoding\/Base64Test.cpp.o:$/;"	t
oatpp/encoding/Base64Test.cpp.s	../oatpp/build/test/Makefile	/^oatpp\/encoding\/Base64Test.cpp.s:$/;"	t
oatpp/encoding/Base64Test.i	../oatpp/build/test/Makefile	/^oatpp\/encoding\/Base64Test.i: oatpp\/encoding\/Base64Test.cpp.i$/;"	t
oatpp/encoding/Base64Test.o	../oatpp/build/test/Makefile	/^oatpp\/encoding\/Base64Test.o: oatpp\/encoding\/Base64Test.cpp.o$/;"	t
oatpp/encoding/Base64Test.s	../oatpp/build/test/Makefile	/^oatpp\/encoding\/Base64Test.s: oatpp\/encoding\/Base64Test.cpp.s$/;"	t
oatpp/encoding/Hex.cpp.i	../oatpp/build/src/Makefile	/^oatpp\/encoding\/Hex.cpp.i:$/;"	t
oatpp/encoding/Hex.cpp.o	../oatpp/build/src/Makefile	/^oatpp\/encoding\/Hex.cpp.o:$/;"	t
oatpp/encoding/Hex.cpp.s	../oatpp/build/src/Makefile	/^oatpp\/encoding\/Hex.cpp.s:$/;"	t
oatpp/encoding/Hex.i	../oatpp/build/src/Makefile	/^oatpp\/encoding\/Hex.i: oatpp\/encoding\/Hex.cpp.i$/;"	t
oatpp/encoding/Hex.o	../oatpp/build/src/Makefile	/^oatpp\/encoding\/Hex.o: oatpp\/encoding\/Hex.cpp.o$/;"	t
oatpp/encoding/Hex.s	../oatpp/build/src/Makefile	/^oatpp\/encoding\/Hex.s: oatpp\/encoding\/Hex.cpp.s$/;"	t
oatpp/encoding/Unicode.cpp.i	../oatpp/build/src/Makefile	/^oatpp\/encoding\/Unicode.cpp.i:$/;"	t
oatpp/encoding/Unicode.cpp.o	../oatpp/build/src/Makefile	/^oatpp\/encoding\/Unicode.cpp.o:$/;"	t
oatpp/encoding/Unicode.cpp.s	../oatpp/build/src/Makefile	/^oatpp\/encoding\/Unicode.cpp.s:$/;"	t
oatpp/encoding/Unicode.i	../oatpp/build/src/Makefile	/^oatpp\/encoding\/Unicode.i: oatpp\/encoding\/Unicode.cpp.i$/;"	t
oatpp/encoding/Unicode.o	../oatpp/build/src/Makefile	/^oatpp\/encoding\/Unicode.o: oatpp\/encoding\/Unicode.cpp.o$/;"	t
oatpp/encoding/Unicode.s	../oatpp/build/src/Makefile	/^oatpp\/encoding\/Unicode.s: oatpp\/encoding\/Unicode.cpp.s$/;"	t
oatpp/encoding/UnicodeTest.cpp.i	../oatpp/build/test/Makefile	/^oatpp\/encoding\/UnicodeTest.cpp.i:$/;"	t
oatpp/encoding/UnicodeTest.cpp.o	../oatpp/build/test/Makefile	/^oatpp\/encoding\/UnicodeTest.cpp.o:$/;"	t
oatpp/encoding/UnicodeTest.cpp.s	../oatpp/build/test/Makefile	/^oatpp\/encoding\/UnicodeTest.cpp.s:$/;"	t
oatpp/encoding/UnicodeTest.i	../oatpp/build/test/Makefile	/^oatpp\/encoding\/UnicodeTest.i: oatpp\/encoding\/UnicodeTest.cpp.i$/;"	t
oatpp/encoding/UnicodeTest.o	../oatpp/build/test/Makefile	/^oatpp\/encoding\/UnicodeTest.o: oatpp\/encoding\/UnicodeTest.cpp.o$/;"	t
oatpp/encoding/UnicodeTest.s	../oatpp/build/test/Makefile	/^oatpp\/encoding\/UnicodeTest.s: oatpp\/encoding\/UnicodeTest.cpp.s$/;"	t
oatpp/fast	../oatpp/build/Makefile	/^oatpp\/fast:$/;"	t
oatpp/fast	../oatpp/build/src/Makefile	/^oatpp\/fast:$/;"	t
oatpp/network/Connection.cpp.i	../oatpp/build/src/Makefile	/^oatpp\/network\/Connection.cpp.i:$/;"	t
oatpp/network/Connection.cpp.o	../oatpp/build/src/Makefile	/^oatpp\/network\/Connection.cpp.o:$/;"	t
oatpp/network/Connection.cpp.s	../oatpp/build/src/Makefile	/^oatpp\/network\/Connection.cpp.s:$/;"	t
oatpp/network/Connection.i	../oatpp/build/src/Makefile	/^oatpp\/network\/Connection.i: oatpp\/network\/Connection.cpp.i$/;"	t
oatpp/network/Connection.o	../oatpp/build/src/Makefile	/^oatpp\/network\/Connection.o: oatpp\/network\/Connection.cpp.o$/;"	t
oatpp/network/Connection.s	../oatpp/build/src/Makefile	/^oatpp\/network\/Connection.s: oatpp\/network\/Connection.cpp.s$/;"	t
oatpp/network/ConnectionProvider.cpp.i	../oatpp/build/src/Makefile	/^oatpp\/network\/ConnectionProvider.cpp.i:$/;"	t
oatpp/network/ConnectionProvider.cpp.o	../oatpp/build/src/Makefile	/^oatpp\/network\/ConnectionProvider.cpp.o:$/;"	t
oatpp/network/ConnectionProvider.cpp.s	../oatpp/build/src/Makefile	/^oatpp\/network\/ConnectionProvider.cpp.s:$/;"	t
oatpp/network/ConnectionProvider.i	../oatpp/build/src/Makefile	/^oatpp\/network\/ConnectionProvider.i: oatpp\/network\/ConnectionProvider.cpp.i$/;"	t
oatpp/network/ConnectionProvider.o	../oatpp/build/src/Makefile	/^oatpp\/network\/ConnectionProvider.o: oatpp\/network\/ConnectionProvider.cpp.o$/;"	t
oatpp/network/ConnectionProvider.s	../oatpp/build/src/Makefile	/^oatpp\/network\/ConnectionProvider.s: oatpp\/network\/ConnectionProvider.cpp.s$/;"	t
oatpp/network/Url.cpp.i	../oatpp/build/src/Makefile	/^oatpp\/network\/Url.cpp.i:$/;"	t
oatpp/network/Url.cpp.o	../oatpp/build/src/Makefile	/^oatpp\/network\/Url.cpp.o:$/;"	t
oatpp/network/Url.cpp.s	../oatpp/build/src/Makefile	/^oatpp\/network\/Url.cpp.s:$/;"	t
oatpp/network/Url.i	../oatpp/build/src/Makefile	/^oatpp\/network\/Url.i: oatpp\/network\/Url.cpp.i$/;"	t
oatpp/network/Url.o	../oatpp/build/src/Makefile	/^oatpp\/network\/Url.o: oatpp\/network\/Url.cpp.o$/;"	t
oatpp/network/Url.s	../oatpp/build/src/Makefile	/^oatpp\/network\/Url.s: oatpp\/network\/Url.cpp.s$/;"	t
oatpp/network/UrlTest.cpp.i	../oatpp/build/test/Makefile	/^oatpp\/network\/UrlTest.cpp.i:$/;"	t
oatpp/network/UrlTest.cpp.o	../oatpp/build/test/Makefile	/^oatpp\/network\/UrlTest.cpp.o:$/;"	t
oatpp/network/UrlTest.cpp.s	../oatpp/build/test/Makefile	/^oatpp\/network\/UrlTest.cpp.s:$/;"	t
oatpp/network/UrlTest.i	../oatpp/build/test/Makefile	/^oatpp\/network\/UrlTest.i: oatpp\/network\/UrlTest.cpp.i$/;"	t
oatpp/network/UrlTest.o	../oatpp/build/test/Makefile	/^oatpp\/network\/UrlTest.o: oatpp\/network\/UrlTest.cpp.o$/;"	t
oatpp/network/UrlTest.s	../oatpp/build/test/Makefile	/^oatpp\/network\/UrlTest.s: oatpp\/network\/UrlTest.cpp.s$/;"	t
oatpp/network/client/SimpleTCPConnectionProvider.cpp.i	../oatpp/build/src/Makefile	/^oatpp\/network\/client\/SimpleTCPConnectionProvider.cpp.i:$/;"	t
oatpp/network/client/SimpleTCPConnectionProvider.cpp.o	../oatpp/build/src/Makefile	/^oatpp\/network\/client\/SimpleTCPConnectionProvider.cpp.o:$/;"	t
oatpp/network/client/SimpleTCPConnectionProvider.cpp.s	../oatpp/build/src/Makefile	/^oatpp\/network\/client\/SimpleTCPConnectionProvider.cpp.s:$/;"	t
oatpp/network/client/SimpleTCPConnectionProvider.i	../oatpp/build/src/Makefile	/^oatpp\/network\/client\/SimpleTCPConnectionProvider.i: oatpp\/network\/client\/SimpleTCPConnecti/;"	t
oatpp/network/client/SimpleTCPConnectionProvider.o	../oatpp/build/src/Makefile	/^oatpp\/network\/client\/SimpleTCPConnectionProvider.o: oatpp\/network\/client\/SimpleTCPConnecti/;"	t
oatpp/network/client/SimpleTCPConnectionProvider.s	../oatpp/build/src/Makefile	/^oatpp\/network\/client\/SimpleTCPConnectionProvider.s: oatpp\/network\/client\/SimpleTCPConnecti/;"	t
oatpp/network/server/ConnectionHandler.cpp.i	../oatpp/build/src/Makefile	/^oatpp\/network\/server\/ConnectionHandler.cpp.i:$/;"	t
oatpp/network/server/ConnectionHandler.cpp.o	../oatpp/build/src/Makefile	/^oatpp\/network\/server\/ConnectionHandler.cpp.o:$/;"	t
oatpp/network/server/ConnectionHandler.cpp.s	../oatpp/build/src/Makefile	/^oatpp\/network\/server\/ConnectionHandler.cpp.s:$/;"	t
oatpp/network/server/ConnectionHandler.i	../oatpp/build/src/Makefile	/^oatpp\/network\/server\/ConnectionHandler.i: oatpp\/network\/server\/ConnectionHandler.cpp.i$/;"	t
oatpp/network/server/ConnectionHandler.o	../oatpp/build/src/Makefile	/^oatpp\/network\/server\/ConnectionHandler.o: oatpp\/network\/server\/ConnectionHandler.cpp.o$/;"	t
oatpp/network/server/ConnectionHandler.s	../oatpp/build/src/Makefile	/^oatpp\/network\/server\/ConnectionHandler.s: oatpp\/network\/server\/ConnectionHandler.cpp.s$/;"	t
oatpp/network/server/Server.cpp.i	../oatpp/build/src/Makefile	/^oatpp\/network\/server\/Server.cpp.i:$/;"	t
oatpp/network/server/Server.cpp.o	../oatpp/build/src/Makefile	/^oatpp\/network\/server\/Server.cpp.o:$/;"	t
oatpp/network/server/Server.cpp.s	../oatpp/build/src/Makefile	/^oatpp\/network\/server\/Server.cpp.s:$/;"	t
oatpp/network/server/Server.i	../oatpp/build/src/Makefile	/^oatpp\/network\/server\/Server.i: oatpp\/network\/server\/Server.cpp.i$/;"	t
oatpp/network/server/Server.o	../oatpp/build/src/Makefile	/^oatpp\/network\/server\/Server.o: oatpp\/network\/server\/Server.cpp.o$/;"	t
oatpp/network/server/Server.s	../oatpp/build/src/Makefile	/^oatpp\/network\/server\/Server.s: oatpp\/network\/server\/Server.cpp.s$/;"	t
oatpp/network/server/SimpleTCPConnectionProvider.cpp.i	../oatpp/build/src/Makefile	/^oatpp\/network\/server\/SimpleTCPConnectionProvider.cpp.i:$/;"	t
oatpp/network/server/SimpleTCPConnectionProvider.cpp.o	../oatpp/build/src/Makefile	/^oatpp\/network\/server\/SimpleTCPConnectionProvider.cpp.o:$/;"	t
oatpp/network/server/SimpleTCPConnectionProvider.cpp.s	../oatpp/build/src/Makefile	/^oatpp\/network\/server\/SimpleTCPConnectionProvider.cpp.s:$/;"	t
oatpp/network/server/SimpleTCPConnectionProvider.i	../oatpp/build/src/Makefile	/^oatpp\/network\/server\/SimpleTCPConnectionProvider.i: oatpp\/network\/server\/SimpleTCPConnecti/;"	t
oatpp/network/server/SimpleTCPConnectionProvider.o	../oatpp/build/src/Makefile	/^oatpp\/network\/server\/SimpleTCPConnectionProvider.o: oatpp\/network\/server\/SimpleTCPConnecti/;"	t
oatpp/network/server/SimpleTCPConnectionProvider.s	../oatpp/build/src/Makefile	/^oatpp\/network\/server\/SimpleTCPConnectionProvider.s: oatpp\/network\/server\/SimpleTCPConnecti/;"	t
oatpp/network/virtual_/Interface.cpp.i	../oatpp/build/src/Makefile	/^oatpp\/network\/virtual_\/Interface.cpp.i:$/;"	t
oatpp/network/virtual_/Interface.cpp.o	../oatpp/build/src/Makefile	/^oatpp\/network\/virtual_\/Interface.cpp.o:$/;"	t
oatpp/network/virtual_/Interface.cpp.s	../oatpp/build/src/Makefile	/^oatpp\/network\/virtual_\/Interface.cpp.s:$/;"	t
oatpp/network/virtual_/Interface.i	../oatpp/build/src/Makefile	/^oatpp\/network\/virtual_\/Interface.i: oatpp\/network\/virtual_\/Interface.cpp.i$/;"	t
oatpp/network/virtual_/Interface.o	../oatpp/build/src/Makefile	/^oatpp\/network\/virtual_\/Interface.o: oatpp\/network\/virtual_\/Interface.cpp.o$/;"	t
oatpp/network/virtual_/Interface.s	../oatpp/build/src/Makefile	/^oatpp\/network\/virtual_\/Interface.s: oatpp\/network\/virtual_\/Interface.cpp.s$/;"	t
oatpp/network/virtual_/InterfaceTest.cpp.i	../oatpp/build/test/Makefile	/^oatpp\/network\/virtual_\/InterfaceTest.cpp.i:$/;"	t
oatpp/network/virtual_/InterfaceTest.cpp.o	../oatpp/build/test/Makefile	/^oatpp\/network\/virtual_\/InterfaceTest.cpp.o:$/;"	t
oatpp/network/virtual_/InterfaceTest.cpp.s	../oatpp/build/test/Makefile	/^oatpp\/network\/virtual_\/InterfaceTest.cpp.s:$/;"	t
oatpp/network/virtual_/InterfaceTest.i	../oatpp/build/test/Makefile	/^oatpp\/network\/virtual_\/InterfaceTest.i: oatpp\/network\/virtual_\/InterfaceTest.cpp.i$/;"	t
oatpp/network/virtual_/InterfaceTest.o	../oatpp/build/test/Makefile	/^oatpp\/network\/virtual_\/InterfaceTest.o: oatpp\/network\/virtual_\/InterfaceTest.cpp.o$/;"	t
oatpp/network/virtual_/InterfaceTest.s	../oatpp/build/test/Makefile	/^oatpp\/network\/virtual_\/InterfaceTest.s: oatpp\/network\/virtual_\/InterfaceTest.cpp.s$/;"	t
oatpp/network/virtual_/Pipe.cpp.i	../oatpp/build/src/Makefile	/^oatpp\/network\/virtual_\/Pipe.cpp.i:$/;"	t
oatpp/network/virtual_/Pipe.cpp.o	../oatpp/build/src/Makefile	/^oatpp\/network\/virtual_\/Pipe.cpp.o:$/;"	t
oatpp/network/virtual_/Pipe.cpp.s	../oatpp/build/src/Makefile	/^oatpp\/network\/virtual_\/Pipe.cpp.s:$/;"	t
oatpp/network/virtual_/Pipe.i	../oatpp/build/src/Makefile	/^oatpp\/network\/virtual_\/Pipe.i: oatpp\/network\/virtual_\/Pipe.cpp.i$/;"	t
oatpp/network/virtual_/Pipe.o	../oatpp/build/src/Makefile	/^oatpp\/network\/virtual_\/Pipe.o: oatpp\/network\/virtual_\/Pipe.cpp.o$/;"	t
oatpp/network/virtual_/Pipe.s	../oatpp/build/src/Makefile	/^oatpp\/network\/virtual_\/Pipe.s: oatpp\/network\/virtual_\/Pipe.cpp.s$/;"	t
oatpp/network/virtual_/PipeTest.cpp.i	../oatpp/build/test/Makefile	/^oatpp\/network\/virtual_\/PipeTest.cpp.i:$/;"	t
oatpp/network/virtual_/PipeTest.cpp.o	../oatpp/build/test/Makefile	/^oatpp\/network\/virtual_\/PipeTest.cpp.o:$/;"	t
oatpp/network/virtual_/PipeTest.cpp.s	../oatpp/build/test/Makefile	/^oatpp\/network\/virtual_\/PipeTest.cpp.s:$/;"	t
oatpp/network/virtual_/PipeTest.i	../oatpp/build/test/Makefile	/^oatpp\/network\/virtual_\/PipeTest.i: oatpp\/network\/virtual_\/PipeTest.cpp.i$/;"	t
oatpp/network/virtual_/PipeTest.o	../oatpp/build/test/Makefile	/^oatpp\/network\/virtual_\/PipeTest.o: oatpp\/network\/virtual_\/PipeTest.cpp.o$/;"	t
oatpp/network/virtual_/PipeTest.s	../oatpp/build/test/Makefile	/^oatpp\/network\/virtual_\/PipeTest.s: oatpp\/network\/virtual_\/PipeTest.cpp.s$/;"	t
oatpp/network/virtual_/Socket.cpp.i	../oatpp/build/src/Makefile	/^oatpp\/network\/virtual_\/Socket.cpp.i:$/;"	t
oatpp/network/virtual_/Socket.cpp.o	../oatpp/build/src/Makefile	/^oatpp\/network\/virtual_\/Socket.cpp.o:$/;"	t
oatpp/network/virtual_/Socket.cpp.s	../oatpp/build/src/Makefile	/^oatpp\/network\/virtual_\/Socket.cpp.s:$/;"	t
oatpp/network/virtual_/Socket.i	../oatpp/build/src/Makefile	/^oatpp\/network\/virtual_\/Socket.i: oatpp\/network\/virtual_\/Socket.cpp.i$/;"	t
oatpp/network/virtual_/Socket.o	../oatpp/build/src/Makefile	/^oatpp\/network\/virtual_\/Socket.o: oatpp\/network\/virtual_\/Socket.cpp.o$/;"	t
oatpp/network/virtual_/Socket.s	../oatpp/build/src/Makefile	/^oatpp\/network\/virtual_\/Socket.s: oatpp\/network\/virtual_\/Socket.cpp.s$/;"	t
oatpp/network/virtual_/client/ConnectionProvider.cpp.i	../oatpp/build/src/Makefile	/^oatpp\/network\/virtual_\/client\/ConnectionProvider.cpp.i:$/;"	t
oatpp/network/virtual_/client/ConnectionProvider.cpp.o	../oatpp/build/src/Makefile	/^oatpp\/network\/virtual_\/client\/ConnectionProvider.cpp.o:$/;"	t
oatpp/network/virtual_/client/ConnectionProvider.cpp.s	../oatpp/build/src/Makefile	/^oatpp\/network\/virtual_\/client\/ConnectionProvider.cpp.s:$/;"	t
oatpp/network/virtual_/client/ConnectionProvider.i	../oatpp/build/src/Makefile	/^oatpp\/network\/virtual_\/client\/ConnectionProvider.i: oatpp\/network\/virtual_\/client\/Connec/;"	t
oatpp/network/virtual_/client/ConnectionProvider.o	../oatpp/build/src/Makefile	/^oatpp\/network\/virtual_\/client\/ConnectionProvider.o: oatpp\/network\/virtual_\/client\/Connec/;"	t
oatpp/network/virtual_/client/ConnectionProvider.s	../oatpp/build/src/Makefile	/^oatpp\/network\/virtual_\/client\/ConnectionProvider.s: oatpp\/network\/virtual_\/client\/Connec/;"	t
oatpp/network/virtual_/server/ConnectionProvider.cpp.i	../oatpp/build/src/Makefile	/^oatpp\/network\/virtual_\/server\/ConnectionProvider.cpp.i:$/;"	t
oatpp/network/virtual_/server/ConnectionProvider.cpp.o	../oatpp/build/src/Makefile	/^oatpp\/network\/virtual_\/server\/ConnectionProvider.cpp.o:$/;"	t
oatpp/network/virtual_/server/ConnectionProvider.cpp.s	../oatpp/build/src/Makefile	/^oatpp\/network\/virtual_\/server\/ConnectionProvider.cpp.s:$/;"	t
oatpp/network/virtual_/server/ConnectionProvider.i	../oatpp/build/src/Makefile	/^oatpp\/network\/virtual_\/server\/ConnectionProvider.i: oatpp\/network\/virtual_\/server\/Connec/;"	t
oatpp/network/virtual_/server/ConnectionProvider.o	../oatpp/build/src/Makefile	/^oatpp\/network\/virtual_\/server\/ConnectionProvider.o: oatpp\/network\/virtual_\/server\/Connec/;"	t
oatpp/network/virtual_/server/ConnectionProvider.s	../oatpp/build/src/Makefile	/^oatpp\/network\/virtual_\/server\/ConnectionProvider.s: oatpp\/network\/virtual_\/server\/Connec/;"	t
oatpp/parser/json/Utils.cpp.i	../oatpp/build/src/Makefile	/^oatpp\/parser\/json\/Utils.cpp.i:$/;"	t
oatpp/parser/json/Utils.cpp.o	../oatpp/build/src/Makefile	/^oatpp\/parser\/json\/Utils.cpp.o:$/;"	t
oatpp/parser/json/Utils.cpp.s	../oatpp/build/src/Makefile	/^oatpp\/parser\/json\/Utils.cpp.s:$/;"	t
oatpp/parser/json/Utils.i	../oatpp/build/src/Makefile	/^oatpp\/parser\/json\/Utils.i: oatpp\/parser\/json\/Utils.cpp.i$/;"	t
oatpp/parser/json/Utils.o	../oatpp/build/src/Makefile	/^oatpp\/parser\/json\/Utils.o: oatpp\/parser\/json\/Utils.cpp.o$/;"	t
oatpp/parser/json/Utils.s	../oatpp/build/src/Makefile	/^oatpp\/parser\/json\/Utils.s: oatpp\/parser\/json\/Utils.cpp.s$/;"	t
oatpp/parser/json/mapping/DTOMapperPerfTest.cpp.i	../oatpp/build/test/Makefile	/^oatpp\/parser\/json\/mapping\/DTOMapperPerfTest.cpp.i:$/;"	t
oatpp/parser/json/mapping/DTOMapperPerfTest.cpp.o	../oatpp/build/test/Makefile	/^oatpp\/parser\/json\/mapping\/DTOMapperPerfTest.cpp.o:$/;"	t
oatpp/parser/json/mapping/DTOMapperPerfTest.cpp.s	../oatpp/build/test/Makefile	/^oatpp\/parser\/json\/mapping\/DTOMapperPerfTest.cpp.s:$/;"	t
oatpp/parser/json/mapping/DTOMapperPerfTest.i	../oatpp/build/test/Makefile	/^oatpp\/parser\/json\/mapping\/DTOMapperPerfTest.i: oatpp\/parser\/json\/mapping\/DTOMapperPerfTe/;"	t
oatpp/parser/json/mapping/DTOMapperPerfTest.o	../oatpp/build/test/Makefile	/^oatpp\/parser\/json\/mapping\/DTOMapperPerfTest.o: oatpp\/parser\/json\/mapping\/DTOMapperPerfTe/;"	t
oatpp/parser/json/mapping/DTOMapperPerfTest.s	../oatpp/build/test/Makefile	/^oatpp\/parser\/json\/mapping\/DTOMapperPerfTest.s: oatpp\/parser\/json\/mapping\/DTOMapperPerfTe/;"	t
oatpp/parser/json/mapping/DTOMapperTest.cpp.i	../oatpp/build/test/Makefile	/^oatpp\/parser\/json\/mapping\/DTOMapperTest.cpp.i:$/;"	t
oatpp/parser/json/mapping/DTOMapperTest.cpp.o	../oatpp/build/test/Makefile	/^oatpp\/parser\/json\/mapping\/DTOMapperTest.cpp.o:$/;"	t
oatpp/parser/json/mapping/DTOMapperTest.cpp.s	../oatpp/build/test/Makefile	/^oatpp\/parser\/json\/mapping\/DTOMapperTest.cpp.s:$/;"	t
oatpp/parser/json/mapping/DTOMapperTest.i	../oatpp/build/test/Makefile	/^oatpp\/parser\/json\/mapping\/DTOMapperTest.i: oatpp\/parser\/json\/mapping\/DTOMapperTest.cpp.i$/;"	t
oatpp/parser/json/mapping/DTOMapperTest.o	../oatpp/build/test/Makefile	/^oatpp\/parser\/json\/mapping\/DTOMapperTest.o: oatpp\/parser\/json\/mapping\/DTOMapperTest.cpp.o$/;"	t
oatpp/parser/json/mapping/DTOMapperTest.s	../oatpp/build/test/Makefile	/^oatpp\/parser\/json\/mapping\/DTOMapperTest.s: oatpp\/parser\/json\/mapping\/DTOMapperTest.cpp.s$/;"	t
oatpp/parser/json/mapping/Deserializer.cpp.i	../oatpp/build/src/Makefile	/^oatpp\/parser\/json\/mapping\/Deserializer.cpp.i:$/;"	t
oatpp/parser/json/mapping/Deserializer.cpp.o	../oatpp/build/src/Makefile	/^oatpp\/parser\/json\/mapping\/Deserializer.cpp.o:$/;"	t
oatpp/parser/json/mapping/Deserializer.cpp.s	../oatpp/build/src/Makefile	/^oatpp\/parser\/json\/mapping\/Deserializer.cpp.s:$/;"	t
oatpp/parser/json/mapping/Deserializer.i	../oatpp/build/src/Makefile	/^oatpp\/parser\/json\/mapping\/Deserializer.i: oatpp\/parser\/json\/mapping\/Deserializer.cpp.i$/;"	t
oatpp/parser/json/mapping/Deserializer.o	../oatpp/build/src/Makefile	/^oatpp\/parser\/json\/mapping\/Deserializer.o: oatpp\/parser\/json\/mapping\/Deserializer.cpp.o$/;"	t
oatpp/parser/json/mapping/Deserializer.s	../oatpp/build/src/Makefile	/^oatpp\/parser\/json\/mapping\/Deserializer.s: oatpp\/parser\/json\/mapping\/Deserializer.cpp.s$/;"	t
oatpp/parser/json/mapping/DeserializerTest.cpp.i	../oatpp/build/test/Makefile	/^oatpp\/parser\/json\/mapping\/DeserializerTest.cpp.i:$/;"	t
oatpp/parser/json/mapping/DeserializerTest.cpp.o	../oatpp/build/test/Makefile	/^oatpp\/parser\/json\/mapping\/DeserializerTest.cpp.o:$/;"	t
oatpp/parser/json/mapping/DeserializerTest.cpp.s	../oatpp/build/test/Makefile	/^oatpp\/parser\/json\/mapping\/DeserializerTest.cpp.s:$/;"	t
oatpp/parser/json/mapping/DeserializerTest.i	../oatpp/build/test/Makefile	/^oatpp\/parser\/json\/mapping\/DeserializerTest.i: oatpp\/parser\/json\/mapping\/DeserializerTest/;"	t
oatpp/parser/json/mapping/DeserializerTest.o	../oatpp/build/test/Makefile	/^oatpp\/parser\/json\/mapping\/DeserializerTest.o: oatpp\/parser\/json\/mapping\/DeserializerTest/;"	t
oatpp/parser/json/mapping/DeserializerTest.s	../oatpp/build/test/Makefile	/^oatpp\/parser\/json\/mapping\/DeserializerTest.s: oatpp\/parser\/json\/mapping\/DeserializerTest/;"	t
oatpp/parser/json/mapping/ObjectMapper.cpp.i	../oatpp/build/src/Makefile	/^oatpp\/parser\/json\/mapping\/ObjectMapper.cpp.i:$/;"	t
oatpp/parser/json/mapping/ObjectMapper.cpp.o	../oatpp/build/src/Makefile	/^oatpp\/parser\/json\/mapping\/ObjectMapper.cpp.o:$/;"	t
oatpp/parser/json/mapping/ObjectMapper.cpp.s	../oatpp/build/src/Makefile	/^oatpp\/parser\/json\/mapping\/ObjectMapper.cpp.s:$/;"	t
oatpp/parser/json/mapping/ObjectMapper.i	../oatpp/build/src/Makefile	/^oatpp\/parser\/json\/mapping\/ObjectMapper.i: oatpp\/parser\/json\/mapping\/ObjectMapper.cpp.i$/;"	t
oatpp/parser/json/mapping/ObjectMapper.o	../oatpp/build/src/Makefile	/^oatpp\/parser\/json\/mapping\/ObjectMapper.o: oatpp\/parser\/json\/mapping\/ObjectMapper.cpp.o$/;"	t
oatpp/parser/json/mapping/ObjectMapper.s	../oatpp/build/src/Makefile	/^oatpp\/parser\/json\/mapping\/ObjectMapper.s: oatpp\/parser\/json\/mapping\/ObjectMapper.cpp.s$/;"	t
oatpp/parser/json/mapping/Serializer.cpp.i	../oatpp/build/src/Makefile	/^oatpp\/parser\/json\/mapping\/Serializer.cpp.i:$/;"	t
oatpp/parser/json/mapping/Serializer.cpp.o	../oatpp/build/src/Makefile	/^oatpp\/parser\/json\/mapping\/Serializer.cpp.o:$/;"	t
oatpp/parser/json/mapping/Serializer.cpp.s	../oatpp/build/src/Makefile	/^oatpp\/parser\/json\/mapping\/Serializer.cpp.s:$/;"	t
oatpp/parser/json/mapping/Serializer.i	../oatpp/build/src/Makefile	/^oatpp\/parser\/json\/mapping\/Serializer.i: oatpp\/parser\/json\/mapping\/Serializer.cpp.i$/;"	t
oatpp/parser/json/mapping/Serializer.o	../oatpp/build/src/Makefile	/^oatpp\/parser\/json\/mapping\/Serializer.o: oatpp\/parser\/json\/mapping\/Serializer.cpp.o$/;"	t
oatpp/parser/json/mapping/Serializer.s	../oatpp/build/src/Makefile	/^oatpp\/parser\/json\/mapping\/Serializer.s: oatpp\/parser\/json\/mapping\/Serializer.cpp.s$/;"	t
oatpp/web/FullAsyncClientTest.cpp.i	../oatpp/build/test/Makefile	/^oatpp\/web\/FullAsyncClientTest.cpp.i:$/;"	t
oatpp/web/FullAsyncClientTest.cpp.o	../oatpp/build/test/Makefile	/^oatpp\/web\/FullAsyncClientTest.cpp.o:$/;"	t
oatpp/web/FullAsyncClientTest.cpp.s	../oatpp/build/test/Makefile	/^oatpp\/web\/FullAsyncClientTest.cpp.s:$/;"	t
oatpp/web/FullAsyncClientTest.i	../oatpp/build/test/Makefile	/^oatpp\/web\/FullAsyncClientTest.i: oatpp\/web\/FullAsyncClientTest.cpp.i$/;"	t
oatpp/web/FullAsyncClientTest.o	../oatpp/build/test/Makefile	/^oatpp\/web\/FullAsyncClientTest.o: oatpp\/web\/FullAsyncClientTest.cpp.o$/;"	t
oatpp/web/FullAsyncClientTest.s	../oatpp/build/test/Makefile	/^oatpp\/web\/FullAsyncClientTest.s: oatpp\/web\/FullAsyncClientTest.cpp.s$/;"	t
oatpp/web/FullAsyncTest.cpp.i	../oatpp/build/test/Makefile	/^oatpp\/web\/FullAsyncTest.cpp.i:$/;"	t
oatpp/web/FullAsyncTest.cpp.o	../oatpp/build/test/Makefile	/^oatpp\/web\/FullAsyncTest.cpp.o:$/;"	t
oatpp/web/FullAsyncTest.cpp.s	../oatpp/build/test/Makefile	/^oatpp\/web\/FullAsyncTest.cpp.s:$/;"	t
oatpp/web/FullAsyncTest.i	../oatpp/build/test/Makefile	/^oatpp\/web\/FullAsyncTest.i: oatpp\/web\/FullAsyncTest.cpp.i$/;"	t
oatpp/web/FullAsyncTest.o	../oatpp/build/test/Makefile	/^oatpp\/web\/FullAsyncTest.o: oatpp\/web\/FullAsyncTest.cpp.o$/;"	t
oatpp/web/FullAsyncTest.s	../oatpp/build/test/Makefile	/^oatpp\/web\/FullAsyncTest.s: oatpp\/web\/FullAsyncTest.cpp.s$/;"	t
oatpp/web/FullTest.cpp.i	../oatpp/build/test/Makefile	/^oatpp\/web\/FullTest.cpp.i:$/;"	t
oatpp/web/FullTest.cpp.o	../oatpp/build/test/Makefile	/^oatpp\/web\/FullTest.cpp.o:$/;"	t
oatpp/web/FullTest.cpp.s	../oatpp/build/test/Makefile	/^oatpp\/web\/FullTest.cpp.s:$/;"	t
oatpp/web/FullTest.i	../oatpp/build/test/Makefile	/^oatpp\/web\/FullTest.i: oatpp\/web\/FullTest.cpp.i$/;"	t
oatpp/web/FullTest.o	../oatpp/build/test/Makefile	/^oatpp\/web\/FullTest.o: oatpp\/web\/FullTest.cpp.o$/;"	t
oatpp/web/FullTest.s	../oatpp/build/test/Makefile	/^oatpp\/web\/FullTest.s: oatpp\/web\/FullTest.cpp.s$/;"	t
oatpp/web/client/ApiClient.cpp.i	../oatpp/build/src/Makefile	/^oatpp\/web\/client\/ApiClient.cpp.i:$/;"	t
oatpp/web/client/ApiClient.cpp.o	../oatpp/build/src/Makefile	/^oatpp\/web\/client\/ApiClient.cpp.o:$/;"	t
oatpp/web/client/ApiClient.cpp.s	../oatpp/build/src/Makefile	/^oatpp\/web\/client\/ApiClient.cpp.s:$/;"	t
oatpp/web/client/ApiClient.i	../oatpp/build/src/Makefile	/^oatpp\/web\/client\/ApiClient.i: oatpp\/web\/client\/ApiClient.cpp.i$/;"	t
oatpp/web/client/ApiClient.o	../oatpp/build/src/Makefile	/^oatpp\/web\/client\/ApiClient.o: oatpp\/web\/client\/ApiClient.cpp.o$/;"	t
oatpp/web/client/ApiClient.s	../oatpp/build/src/Makefile	/^oatpp\/web\/client\/ApiClient.s: oatpp\/web\/client\/ApiClient.cpp.s$/;"	t
oatpp/web/client/HttpRequestExecutor.cpp.i	../oatpp/build/src/Makefile	/^oatpp\/web\/client\/HttpRequestExecutor.cpp.i:$/;"	t
oatpp/web/client/HttpRequestExecutor.cpp.o	../oatpp/build/src/Makefile	/^oatpp\/web\/client\/HttpRequestExecutor.cpp.o:$/;"	t
oatpp/web/client/HttpRequestExecutor.cpp.s	../oatpp/build/src/Makefile	/^oatpp\/web\/client\/HttpRequestExecutor.cpp.s:$/;"	t
oatpp/web/client/HttpRequestExecutor.i	../oatpp/build/src/Makefile	/^oatpp\/web\/client\/HttpRequestExecutor.i: oatpp\/web\/client\/HttpRequestExecutor.cpp.i$/;"	t
oatpp/web/client/HttpRequestExecutor.o	../oatpp/build/src/Makefile	/^oatpp\/web\/client\/HttpRequestExecutor.o: oatpp\/web\/client\/HttpRequestExecutor.cpp.o$/;"	t
oatpp/web/client/HttpRequestExecutor.s	../oatpp/build/src/Makefile	/^oatpp\/web\/client\/HttpRequestExecutor.s: oatpp\/web\/client\/HttpRequestExecutor.cpp.s$/;"	t
oatpp/web/client/RequestExecutor.cpp.i	../oatpp/build/src/Makefile	/^oatpp\/web\/client\/RequestExecutor.cpp.i:$/;"	t
oatpp/web/client/RequestExecutor.cpp.o	../oatpp/build/src/Makefile	/^oatpp\/web\/client\/RequestExecutor.cpp.o:$/;"	t
oatpp/web/client/RequestExecutor.cpp.s	../oatpp/build/src/Makefile	/^oatpp\/web\/client\/RequestExecutor.cpp.s:$/;"	t
oatpp/web/client/RequestExecutor.i	../oatpp/build/src/Makefile	/^oatpp\/web\/client\/RequestExecutor.i: oatpp\/web\/client\/RequestExecutor.cpp.i$/;"	t
oatpp/web/client/RequestExecutor.o	../oatpp/build/src/Makefile	/^oatpp\/web\/client\/RequestExecutor.o: oatpp\/web\/client\/RequestExecutor.cpp.o$/;"	t
oatpp/web/client/RequestExecutor.s	../oatpp/build/src/Makefile	/^oatpp\/web\/client\/RequestExecutor.s: oatpp\/web\/client\/RequestExecutor.cpp.s$/;"	t
oatpp/web/protocol/CommunicationError.cpp.i	../oatpp/build/src/Makefile	/^oatpp\/web\/protocol\/CommunicationError.cpp.i:$/;"	t
oatpp/web/protocol/CommunicationError.cpp.o	../oatpp/build/src/Makefile	/^oatpp\/web\/protocol\/CommunicationError.cpp.o:$/;"	t
oatpp/web/protocol/CommunicationError.cpp.s	../oatpp/build/src/Makefile	/^oatpp\/web\/protocol\/CommunicationError.cpp.s:$/;"	t
oatpp/web/protocol/CommunicationError.i	../oatpp/build/src/Makefile	/^oatpp\/web\/protocol\/CommunicationError.i: oatpp\/web\/protocol\/CommunicationError.cpp.i$/;"	t
oatpp/web/protocol/CommunicationError.o	../oatpp/build/src/Makefile	/^oatpp\/web\/protocol\/CommunicationError.o: oatpp\/web\/protocol\/CommunicationError.cpp.o$/;"	t
oatpp/web/protocol/CommunicationError.s	../oatpp/build/src/Makefile	/^oatpp\/web\/protocol\/CommunicationError.s: oatpp\/web\/protocol\/CommunicationError.cpp.s$/;"	t
oatpp/web/protocol/http/Http.cpp.i	../oatpp/build/src/Makefile	/^oatpp\/web\/protocol\/http\/Http.cpp.i:$/;"	t
oatpp/web/protocol/http/Http.cpp.o	../oatpp/build/src/Makefile	/^oatpp\/web\/protocol\/http\/Http.cpp.o:$/;"	t
oatpp/web/protocol/http/Http.cpp.s	../oatpp/build/src/Makefile	/^oatpp\/web\/protocol\/http\/Http.cpp.s:$/;"	t
oatpp/web/protocol/http/Http.i	../oatpp/build/src/Makefile	/^oatpp\/web\/protocol\/http\/Http.i: oatpp\/web\/protocol\/http\/Http.cpp.i$/;"	t
oatpp/web/protocol/http/Http.o	../oatpp/build/src/Makefile	/^oatpp\/web\/protocol\/http\/Http.o: oatpp\/web\/protocol\/http\/Http.cpp.o$/;"	t
oatpp/web/protocol/http/Http.s	../oatpp/build/src/Makefile	/^oatpp\/web\/protocol\/http\/Http.s: oatpp\/web\/protocol\/http\/Http.cpp.s$/;"	t
oatpp/web/protocol/http/incoming/BodyDecoder.cpp.i	../oatpp/build/src/Makefile	/^oatpp\/web\/protocol\/http\/incoming\/BodyDecoder.cpp.i:$/;"	t
oatpp/web/protocol/http/incoming/BodyDecoder.cpp.o	../oatpp/build/src/Makefile	/^oatpp\/web\/protocol\/http\/incoming\/BodyDecoder.cpp.o:$/;"	t
oatpp/web/protocol/http/incoming/BodyDecoder.cpp.s	../oatpp/build/src/Makefile	/^oatpp\/web\/protocol\/http\/incoming\/BodyDecoder.cpp.s:$/;"	t
oatpp/web/protocol/http/incoming/BodyDecoder.i	../oatpp/build/src/Makefile	/^oatpp\/web\/protocol\/http\/incoming\/BodyDecoder.i: oatpp\/web\/protocol\/http\/incoming\/BodyD/;"	t
oatpp/web/protocol/http/incoming/BodyDecoder.o	../oatpp/build/src/Makefile	/^oatpp\/web\/protocol\/http\/incoming\/BodyDecoder.o: oatpp\/web\/protocol\/http\/incoming\/BodyD/;"	t
oatpp/web/protocol/http/incoming/BodyDecoder.s	../oatpp/build/src/Makefile	/^oatpp\/web\/protocol\/http\/incoming\/BodyDecoder.s: oatpp\/web\/protocol\/http\/incoming\/BodyD/;"	t
oatpp/web/protocol/http/incoming/Request.cpp.i	../oatpp/build/src/Makefile	/^oatpp\/web\/protocol\/http\/incoming\/Request.cpp.i:$/;"	t
oatpp/web/protocol/http/incoming/Request.cpp.o	../oatpp/build/src/Makefile	/^oatpp\/web\/protocol\/http\/incoming\/Request.cpp.o:$/;"	t
oatpp/web/protocol/http/incoming/Request.cpp.s	../oatpp/build/src/Makefile	/^oatpp\/web\/protocol\/http\/incoming\/Request.cpp.s:$/;"	t
oatpp/web/protocol/http/incoming/Request.i	../oatpp/build/src/Makefile	/^oatpp\/web\/protocol\/http\/incoming\/Request.i: oatpp\/web\/protocol\/http\/incoming\/Request.c/;"	t
oatpp/web/protocol/http/incoming/Request.o	../oatpp/build/src/Makefile	/^oatpp\/web\/protocol\/http\/incoming\/Request.o: oatpp\/web\/protocol\/http\/incoming\/Request.c/;"	t
oatpp/web/protocol/http/incoming/Request.s	../oatpp/build/src/Makefile	/^oatpp\/web\/protocol\/http\/incoming\/Request.s: oatpp\/web\/protocol\/http\/incoming\/Request.c/;"	t
oatpp/web/protocol/http/incoming/RequestHeadersReader.cpp.i	../oatpp/build/src/Makefile	/^oatpp\/web\/protocol\/http\/incoming\/RequestHeadersReader.cpp.i:$/;"	t
oatpp/web/protocol/http/incoming/RequestHeadersReader.cpp.o	../oatpp/build/src/Makefile	/^oatpp\/web\/protocol\/http\/incoming\/RequestHeadersReader.cpp.o:$/;"	t
oatpp/web/protocol/http/incoming/RequestHeadersReader.cpp.s	../oatpp/build/src/Makefile	/^oatpp\/web\/protocol\/http\/incoming\/RequestHeadersReader.cpp.s:$/;"	t
oatpp/web/protocol/http/incoming/RequestHeadersReader.i	../oatpp/build/src/Makefile	/^oatpp\/web\/protocol\/http\/incoming\/RequestHeadersReader.i: oatpp\/web\/protocol\/http\/incomi/;"	t
oatpp/web/protocol/http/incoming/RequestHeadersReader.o	../oatpp/build/src/Makefile	/^oatpp\/web\/protocol\/http\/incoming\/RequestHeadersReader.o: oatpp\/web\/protocol\/http\/incomi/;"	t
oatpp/web/protocol/http/incoming/RequestHeadersReader.s	../oatpp/build/src/Makefile	/^oatpp\/web\/protocol\/http\/incoming\/RequestHeadersReader.s: oatpp\/web\/protocol\/http\/incomi/;"	t
oatpp/web/protocol/http/incoming/Response.cpp.i	../oatpp/build/src/Makefile	/^oatpp\/web\/protocol\/http\/incoming\/Response.cpp.i:$/;"	t
oatpp/web/protocol/http/incoming/Response.cpp.o	../oatpp/build/src/Makefile	/^oatpp\/web\/protocol\/http\/incoming\/Response.cpp.o:$/;"	t
oatpp/web/protocol/http/incoming/Response.cpp.s	../oatpp/build/src/Makefile	/^oatpp\/web\/protocol\/http\/incoming\/Response.cpp.s:$/;"	t
oatpp/web/protocol/http/incoming/Response.i	../oatpp/build/src/Makefile	/^oatpp\/web\/protocol\/http\/incoming\/Response.i: oatpp\/web\/protocol\/http\/incoming\/Response/;"	t
oatpp/web/protocol/http/incoming/Response.o	../oatpp/build/src/Makefile	/^oatpp\/web\/protocol\/http\/incoming\/Response.o: oatpp\/web\/protocol\/http\/incoming\/Response/;"	t
oatpp/web/protocol/http/incoming/Response.s	../oatpp/build/src/Makefile	/^oatpp\/web\/protocol\/http\/incoming\/Response.s: oatpp\/web\/protocol\/http\/incoming\/Response/;"	t
oatpp/web/protocol/http/incoming/ResponseHeadersReader.cpp.i	../oatpp/build/src/Makefile	/^oatpp\/web\/protocol\/http\/incoming\/ResponseHeadersReader.cpp.i:$/;"	t
oatpp/web/protocol/http/incoming/ResponseHeadersReader.cpp.o	../oatpp/build/src/Makefile	/^oatpp\/web\/protocol\/http\/incoming\/ResponseHeadersReader.cpp.o:$/;"	t
oatpp/web/protocol/http/incoming/ResponseHeadersReader.cpp.s	../oatpp/build/src/Makefile	/^oatpp\/web\/protocol\/http\/incoming\/ResponseHeadersReader.cpp.s:$/;"	t
oatpp/web/protocol/http/incoming/ResponseHeadersReader.i	../oatpp/build/src/Makefile	/^oatpp\/web\/protocol\/http\/incoming\/ResponseHeadersReader.i: oatpp\/web\/protocol\/http\/incom/;"	t
oatpp/web/protocol/http/incoming/ResponseHeadersReader.o	../oatpp/build/src/Makefile	/^oatpp\/web\/protocol\/http\/incoming\/ResponseHeadersReader.o: oatpp\/web\/protocol\/http\/incom/;"	t
oatpp/web/protocol/http/incoming/ResponseHeadersReader.s	../oatpp/build/src/Makefile	/^oatpp\/web\/protocol\/http\/incoming\/ResponseHeadersReader.s: oatpp\/web\/protocol\/http\/incom/;"	t
oatpp/web/protocol/http/incoming/SimpleBodyDecoder.cpp.i	../oatpp/build/src/Makefile	/^oatpp\/web\/protocol\/http\/incoming\/SimpleBodyDecoder.cpp.i:$/;"	t
oatpp/web/protocol/http/incoming/SimpleBodyDecoder.cpp.o	../oatpp/build/src/Makefile	/^oatpp\/web\/protocol\/http\/incoming\/SimpleBodyDecoder.cpp.o:$/;"	t
oatpp/web/protocol/http/incoming/SimpleBodyDecoder.cpp.s	../oatpp/build/src/Makefile	/^oatpp\/web\/protocol\/http\/incoming\/SimpleBodyDecoder.cpp.s:$/;"	t
oatpp/web/protocol/http/incoming/SimpleBodyDecoder.i	../oatpp/build/src/Makefile	/^oatpp\/web\/protocol\/http\/incoming\/SimpleBodyDecoder.i: oatpp\/web\/protocol\/http\/incoming\//;"	t
oatpp/web/protocol/http/incoming/SimpleBodyDecoder.o	../oatpp/build/src/Makefile	/^oatpp\/web\/protocol\/http\/incoming\/SimpleBodyDecoder.o: oatpp\/web\/protocol\/http\/incoming\//;"	t
oatpp/web/protocol/http/incoming/SimpleBodyDecoder.s	../oatpp/build/src/Makefile	/^oatpp\/web\/protocol\/http\/incoming\/SimpleBodyDecoder.s: oatpp\/web\/protocol\/http\/incoming\//;"	t
oatpp/web/protocol/http/outgoing/Body.cpp.i	../oatpp/build/src/Makefile	/^oatpp\/web\/protocol\/http\/outgoing\/Body.cpp.i:$/;"	t
oatpp/web/protocol/http/outgoing/Body.cpp.o	../oatpp/build/src/Makefile	/^oatpp\/web\/protocol\/http\/outgoing\/Body.cpp.o:$/;"	t
oatpp/web/protocol/http/outgoing/Body.cpp.s	../oatpp/build/src/Makefile	/^oatpp\/web\/protocol\/http\/outgoing\/Body.cpp.s:$/;"	t
oatpp/web/protocol/http/outgoing/Body.i	../oatpp/build/src/Makefile	/^oatpp\/web\/protocol\/http\/outgoing\/Body.i: oatpp\/web\/protocol\/http\/outgoing\/Body.cpp.i$/;"	t
oatpp/web/protocol/http/outgoing/Body.o	../oatpp/build/src/Makefile	/^oatpp\/web\/protocol\/http\/outgoing\/Body.o: oatpp\/web\/protocol\/http\/outgoing\/Body.cpp.o$/;"	t
oatpp/web/protocol/http/outgoing/Body.s	../oatpp/build/src/Makefile	/^oatpp\/web\/protocol\/http\/outgoing\/Body.s: oatpp\/web\/protocol\/http\/outgoing\/Body.cpp.s$/;"	t
oatpp/web/protocol/http/outgoing/BufferBody.cpp.i	../oatpp/build/src/Makefile	/^oatpp\/web\/protocol\/http\/outgoing\/BufferBody.cpp.i:$/;"	t
oatpp/web/protocol/http/outgoing/BufferBody.cpp.o	../oatpp/build/src/Makefile	/^oatpp\/web\/protocol\/http\/outgoing\/BufferBody.cpp.o:$/;"	t
oatpp/web/protocol/http/outgoing/BufferBody.cpp.s	../oatpp/build/src/Makefile	/^oatpp\/web\/protocol\/http\/outgoing\/BufferBody.cpp.s:$/;"	t
oatpp/web/protocol/http/outgoing/BufferBody.i	../oatpp/build/src/Makefile	/^oatpp\/web\/protocol\/http\/outgoing\/BufferBody.i: oatpp\/web\/protocol\/http\/outgoing\/Buffer/;"	t
oatpp/web/protocol/http/outgoing/BufferBody.o	../oatpp/build/src/Makefile	/^oatpp\/web\/protocol\/http\/outgoing\/BufferBody.o: oatpp\/web\/protocol\/http\/outgoing\/Buffer/;"	t
oatpp/web/protocol/http/outgoing/BufferBody.s	../oatpp/build/src/Makefile	/^oatpp\/web\/protocol\/http\/outgoing\/BufferBody.s: oatpp\/web\/protocol\/http\/outgoing\/Buffer/;"	t
oatpp/web/protocol/http/outgoing/ChunkedBufferBody.cpp.i	../oatpp/build/src/Makefile	/^oatpp\/web\/protocol\/http\/outgoing\/ChunkedBufferBody.cpp.i:$/;"	t
oatpp/web/protocol/http/outgoing/ChunkedBufferBody.cpp.o	../oatpp/build/src/Makefile	/^oatpp\/web\/protocol\/http\/outgoing\/ChunkedBufferBody.cpp.o:$/;"	t
oatpp/web/protocol/http/outgoing/ChunkedBufferBody.cpp.s	../oatpp/build/src/Makefile	/^oatpp\/web\/protocol\/http\/outgoing\/ChunkedBufferBody.cpp.s:$/;"	t
oatpp/web/protocol/http/outgoing/ChunkedBufferBody.i	../oatpp/build/src/Makefile	/^oatpp\/web\/protocol\/http\/outgoing\/ChunkedBufferBody.i: oatpp\/web\/protocol\/http\/outgoing\//;"	t
oatpp/web/protocol/http/outgoing/ChunkedBufferBody.o	../oatpp/build/src/Makefile	/^oatpp\/web\/protocol\/http\/outgoing\/ChunkedBufferBody.o: oatpp\/web\/protocol\/http\/outgoing\//;"	t
oatpp/web/protocol/http/outgoing/ChunkedBufferBody.s	../oatpp/build/src/Makefile	/^oatpp\/web\/protocol\/http\/outgoing\/ChunkedBufferBody.s: oatpp\/web\/protocol\/http\/outgoing\//;"	t
oatpp/web/protocol/http/outgoing/CommunicationUtils.cpp.i	../oatpp/build/src/Makefile	/^oatpp\/web\/protocol\/http\/outgoing\/CommunicationUtils.cpp.i:$/;"	t
oatpp/web/protocol/http/outgoing/CommunicationUtils.cpp.o	../oatpp/build/src/Makefile	/^oatpp\/web\/protocol\/http\/outgoing\/CommunicationUtils.cpp.o:$/;"	t
oatpp/web/protocol/http/outgoing/CommunicationUtils.cpp.s	../oatpp/build/src/Makefile	/^oatpp\/web\/protocol\/http\/outgoing\/CommunicationUtils.cpp.s:$/;"	t
oatpp/web/protocol/http/outgoing/CommunicationUtils.i	../oatpp/build/src/Makefile	/^oatpp\/web\/protocol\/http\/outgoing\/CommunicationUtils.i: oatpp\/web\/protocol\/http\/outgoing/;"	t
oatpp/web/protocol/http/outgoing/CommunicationUtils.o	../oatpp/build/src/Makefile	/^oatpp\/web\/protocol\/http\/outgoing\/CommunicationUtils.o: oatpp\/web\/protocol\/http\/outgoing/;"	t
oatpp/web/protocol/http/outgoing/CommunicationUtils.s	../oatpp/build/src/Makefile	/^oatpp\/web\/protocol\/http\/outgoing\/CommunicationUtils.s: oatpp\/web\/protocol\/http\/outgoing/;"	t
oatpp/web/protocol/http/outgoing/DtoBody.cpp.i	../oatpp/build/src/Makefile	/^oatpp\/web\/protocol\/http\/outgoing\/DtoBody.cpp.i:$/;"	t
oatpp/web/protocol/http/outgoing/DtoBody.cpp.o	../oatpp/build/src/Makefile	/^oatpp\/web\/protocol\/http\/outgoing\/DtoBody.cpp.o:$/;"	t
oatpp/web/protocol/http/outgoing/DtoBody.cpp.s	../oatpp/build/src/Makefile	/^oatpp\/web\/protocol\/http\/outgoing\/DtoBody.cpp.s:$/;"	t
oatpp/web/protocol/http/outgoing/DtoBody.i	../oatpp/build/src/Makefile	/^oatpp\/web\/protocol\/http\/outgoing\/DtoBody.i: oatpp\/web\/protocol\/http\/outgoing\/DtoBody.c/;"	t
oatpp/web/protocol/http/outgoing/DtoBody.o	../oatpp/build/src/Makefile	/^oatpp\/web\/protocol\/http\/outgoing\/DtoBody.o: oatpp\/web\/protocol\/http\/outgoing\/DtoBody.c/;"	t
oatpp/web/protocol/http/outgoing/DtoBody.s	../oatpp/build/src/Makefile	/^oatpp\/web\/protocol\/http\/outgoing\/DtoBody.s: oatpp\/web\/protocol\/http\/outgoing\/DtoBody.c/;"	t
oatpp/web/protocol/http/outgoing/Request.cpp.i	../oatpp/build/src/Makefile	/^oatpp\/web\/protocol\/http\/outgoing\/Request.cpp.i:$/;"	t
oatpp/web/protocol/http/outgoing/Request.cpp.o	../oatpp/build/src/Makefile	/^oatpp\/web\/protocol\/http\/outgoing\/Request.cpp.o:$/;"	t
oatpp/web/protocol/http/outgoing/Request.cpp.s	../oatpp/build/src/Makefile	/^oatpp\/web\/protocol\/http\/outgoing\/Request.cpp.s:$/;"	t
oatpp/web/protocol/http/outgoing/Request.i	../oatpp/build/src/Makefile	/^oatpp\/web\/protocol\/http\/outgoing\/Request.i: oatpp\/web\/protocol\/http\/outgoing\/Request.c/;"	t
oatpp/web/protocol/http/outgoing/Request.o	../oatpp/build/src/Makefile	/^oatpp\/web\/protocol\/http\/outgoing\/Request.o: oatpp\/web\/protocol\/http\/outgoing\/Request.c/;"	t
oatpp/web/protocol/http/outgoing/Request.s	../oatpp/build/src/Makefile	/^oatpp\/web\/protocol\/http\/outgoing\/Request.s: oatpp\/web\/protocol\/http\/outgoing\/Request.c/;"	t
oatpp/web/protocol/http/outgoing/Response.cpp.i	../oatpp/build/src/Makefile	/^oatpp\/web\/protocol\/http\/outgoing\/Response.cpp.i:$/;"	t
oatpp/web/protocol/http/outgoing/Response.cpp.o	../oatpp/build/src/Makefile	/^oatpp\/web\/protocol\/http\/outgoing\/Response.cpp.o:$/;"	t
oatpp/web/protocol/http/outgoing/Response.cpp.s	../oatpp/build/src/Makefile	/^oatpp\/web\/protocol\/http\/outgoing\/Response.cpp.s:$/;"	t
oatpp/web/protocol/http/outgoing/Response.i	../oatpp/build/src/Makefile	/^oatpp\/web\/protocol\/http\/outgoing\/Response.i: oatpp\/web\/protocol\/http\/outgoing\/Response/;"	t
oatpp/web/protocol/http/outgoing/Response.o	../oatpp/build/src/Makefile	/^oatpp\/web\/protocol\/http\/outgoing\/Response.o: oatpp\/web\/protocol\/http\/outgoing\/Response/;"	t
oatpp/web/protocol/http/outgoing/Response.s	../oatpp/build/src/Makefile	/^oatpp\/web\/protocol\/http\/outgoing\/Response.s: oatpp\/web\/protocol\/http\/outgoing\/Response/;"	t
oatpp/web/protocol/http/outgoing/ResponseFactory.cpp.i	../oatpp/build/src/Makefile	/^oatpp\/web\/protocol\/http\/outgoing\/ResponseFactory.cpp.i:$/;"	t
oatpp/web/protocol/http/outgoing/ResponseFactory.cpp.o	../oatpp/build/src/Makefile	/^oatpp\/web\/protocol\/http\/outgoing\/ResponseFactory.cpp.o:$/;"	t
oatpp/web/protocol/http/outgoing/ResponseFactory.cpp.s	../oatpp/build/src/Makefile	/^oatpp\/web\/protocol\/http\/outgoing\/ResponseFactory.cpp.s:$/;"	t
oatpp/web/protocol/http/outgoing/ResponseFactory.i	../oatpp/build/src/Makefile	/^oatpp\/web\/protocol\/http\/outgoing\/ResponseFactory.i: oatpp\/web\/protocol\/http\/outgoing\/R/;"	t
oatpp/web/protocol/http/outgoing/ResponseFactory.o	../oatpp/build/src/Makefile	/^oatpp\/web\/protocol\/http\/outgoing\/ResponseFactory.o: oatpp\/web\/protocol\/http\/outgoing\/R/;"	t
oatpp/web/protocol/http/outgoing/ResponseFactory.s	../oatpp/build/src/Makefile	/^oatpp\/web\/protocol\/http\/outgoing\/ResponseFactory.s: oatpp\/web\/protocol\/http\/outgoing\/R/;"	t
oatpp/web/server/AsyncHttpConnectionHandler.cpp.i	../oatpp/build/src/Makefile	/^oatpp\/web\/server\/AsyncHttpConnectionHandler.cpp.i:$/;"	t
oatpp/web/server/AsyncHttpConnectionHandler.cpp.o	../oatpp/build/src/Makefile	/^oatpp\/web\/server\/AsyncHttpConnectionHandler.cpp.o:$/;"	t
oatpp/web/server/AsyncHttpConnectionHandler.cpp.s	../oatpp/build/src/Makefile	/^oatpp\/web\/server\/AsyncHttpConnectionHandler.cpp.s:$/;"	t
oatpp/web/server/AsyncHttpConnectionHandler.i	../oatpp/build/src/Makefile	/^oatpp\/web\/server\/AsyncHttpConnectionHandler.i: oatpp\/web\/server\/AsyncHttpConnectionHandler/;"	t
oatpp/web/server/AsyncHttpConnectionHandler.o	../oatpp/build/src/Makefile	/^oatpp\/web\/server\/AsyncHttpConnectionHandler.o: oatpp\/web\/server\/AsyncHttpConnectionHandler/;"	t
oatpp/web/server/AsyncHttpConnectionHandler.s	../oatpp/build/src/Makefile	/^oatpp\/web\/server\/AsyncHttpConnectionHandler.s: oatpp\/web\/server\/AsyncHttpConnectionHandler/;"	t
oatpp/web/server/HttpConnectionHandler.cpp.i	../oatpp/build/src/Makefile	/^oatpp\/web\/server\/HttpConnectionHandler.cpp.i:$/;"	t
oatpp/web/server/HttpConnectionHandler.cpp.o	../oatpp/build/src/Makefile	/^oatpp\/web\/server\/HttpConnectionHandler.cpp.o:$/;"	t
oatpp/web/server/HttpConnectionHandler.cpp.s	../oatpp/build/src/Makefile	/^oatpp\/web\/server\/HttpConnectionHandler.cpp.s:$/;"	t
oatpp/web/server/HttpConnectionHandler.i	../oatpp/build/src/Makefile	/^oatpp\/web\/server\/HttpConnectionHandler.i: oatpp\/web\/server\/HttpConnectionHandler.cpp.i$/;"	t
oatpp/web/server/HttpConnectionHandler.o	../oatpp/build/src/Makefile	/^oatpp\/web\/server\/HttpConnectionHandler.o: oatpp\/web\/server\/HttpConnectionHandler.cpp.o$/;"	t
oatpp/web/server/HttpConnectionHandler.s	../oatpp/build/src/Makefile	/^oatpp\/web\/server\/HttpConnectionHandler.s: oatpp\/web\/server\/HttpConnectionHandler.cpp.s$/;"	t
oatpp/web/server/HttpProcessor.cpp.i	../oatpp/build/src/Makefile	/^oatpp\/web\/server\/HttpProcessor.cpp.i:$/;"	t
oatpp/web/server/HttpProcessor.cpp.o	../oatpp/build/src/Makefile	/^oatpp\/web\/server\/HttpProcessor.cpp.o:$/;"	t
oatpp/web/server/HttpProcessor.cpp.s	../oatpp/build/src/Makefile	/^oatpp\/web\/server\/HttpProcessor.cpp.s:$/;"	t
oatpp/web/server/HttpProcessor.i	../oatpp/build/src/Makefile	/^oatpp\/web\/server\/HttpProcessor.i: oatpp\/web\/server\/HttpProcessor.cpp.i$/;"	t
oatpp/web/server/HttpProcessor.o	../oatpp/build/src/Makefile	/^oatpp\/web\/server\/HttpProcessor.o: oatpp\/web\/server\/HttpProcessor.cpp.o$/;"	t
oatpp/web/server/HttpProcessor.s	../oatpp/build/src/Makefile	/^oatpp\/web\/server\/HttpProcessor.s: oatpp\/web\/server\/HttpProcessor.cpp.s$/;"	t
oatpp/web/server/HttpRouter.cpp.i	../oatpp/build/src/Makefile	/^oatpp\/web\/server\/HttpRouter.cpp.i:$/;"	t
oatpp/web/server/HttpRouter.cpp.o	../oatpp/build/src/Makefile	/^oatpp\/web\/server\/HttpRouter.cpp.o:$/;"	t
oatpp/web/server/HttpRouter.cpp.s	../oatpp/build/src/Makefile	/^oatpp\/web\/server\/HttpRouter.cpp.s:$/;"	t
oatpp/web/server/HttpRouter.i	../oatpp/build/src/Makefile	/^oatpp\/web\/server\/HttpRouter.i: oatpp\/web\/server\/HttpRouter.cpp.i$/;"	t
oatpp/web/server/HttpRouter.o	../oatpp/build/src/Makefile	/^oatpp\/web\/server\/HttpRouter.o: oatpp\/web\/server\/HttpRouter.cpp.o$/;"	t
oatpp/web/server/HttpRouter.s	../oatpp/build/src/Makefile	/^oatpp\/web\/server\/HttpRouter.s: oatpp\/web\/server\/HttpRouter.cpp.s$/;"	t
oatpp/web/server/api/ApiController.cpp.i	../oatpp/build/src/Makefile	/^oatpp\/web\/server\/api\/ApiController.cpp.i:$/;"	t
oatpp/web/server/api/ApiController.cpp.o	../oatpp/build/src/Makefile	/^oatpp\/web\/server\/api\/ApiController.cpp.o:$/;"	t
oatpp/web/server/api/ApiController.cpp.s	../oatpp/build/src/Makefile	/^oatpp\/web\/server\/api\/ApiController.cpp.s:$/;"	t
oatpp/web/server/api/ApiController.i	../oatpp/build/src/Makefile	/^oatpp\/web\/server\/api\/ApiController.i: oatpp\/web\/server\/api\/ApiController.cpp.i$/;"	t
oatpp/web/server/api/ApiController.o	../oatpp/build/src/Makefile	/^oatpp\/web\/server\/api\/ApiController.o: oatpp\/web\/server\/api\/ApiController.cpp.o$/;"	t
oatpp/web/server/api/ApiController.s	../oatpp/build/src/Makefile	/^oatpp\/web\/server\/api\/ApiController.s: oatpp\/web\/server\/api\/ApiController.cpp.s$/;"	t
oatpp/web/server/api/ApiControllerTest.cpp.i	../oatpp/build/test/Makefile	/^oatpp\/web\/server\/api\/ApiControllerTest.cpp.i:$/;"	t
oatpp/web/server/api/ApiControllerTest.cpp.o	../oatpp/build/test/Makefile	/^oatpp\/web\/server\/api\/ApiControllerTest.cpp.o:$/;"	t
oatpp/web/server/api/ApiControllerTest.cpp.s	../oatpp/build/test/Makefile	/^oatpp\/web\/server\/api\/ApiControllerTest.cpp.s:$/;"	t
oatpp/web/server/api/ApiControllerTest.i	../oatpp/build/test/Makefile	/^oatpp\/web\/server\/api\/ApiControllerTest.i: oatpp\/web\/server\/api\/ApiControllerTest.cpp.i$/;"	t
oatpp/web/server/api/ApiControllerTest.o	../oatpp/build/test/Makefile	/^oatpp\/web\/server\/api\/ApiControllerTest.o: oatpp\/web\/server\/api\/ApiControllerTest.cpp.o$/;"	t
oatpp/web/server/api/ApiControllerTest.s	../oatpp/build/test/Makefile	/^oatpp\/web\/server\/api\/ApiControllerTest.s: oatpp\/web\/server\/api\/ApiControllerTest.cpp.s$/;"	t
oatpp/web/server/api/Endpoint.cpp.i	../oatpp/build/src/Makefile	/^oatpp\/web\/server\/api\/Endpoint.cpp.i:$/;"	t
oatpp/web/server/api/Endpoint.cpp.o	../oatpp/build/src/Makefile	/^oatpp\/web\/server\/api\/Endpoint.cpp.o:$/;"	t
oatpp/web/server/api/Endpoint.cpp.s	../oatpp/build/src/Makefile	/^oatpp\/web\/server\/api\/Endpoint.cpp.s:$/;"	t
oatpp/web/server/api/Endpoint.i	../oatpp/build/src/Makefile	/^oatpp\/web\/server\/api\/Endpoint.i: oatpp\/web\/server\/api\/Endpoint.cpp.i$/;"	t
oatpp/web/server/api/Endpoint.o	../oatpp/build/src/Makefile	/^oatpp\/web\/server\/api\/Endpoint.o: oatpp\/web\/server\/api\/Endpoint.cpp.o$/;"	t
oatpp/web/server/api/Endpoint.s	../oatpp/build/src/Makefile	/^oatpp\/web\/server\/api\/Endpoint.s: oatpp\/web\/server\/api\/Endpoint.cpp.s$/;"	t
oatpp/web/server/handler/ErrorHandler.cpp.i	../oatpp/build/src/Makefile	/^oatpp\/web\/server\/handler\/ErrorHandler.cpp.i:$/;"	t
oatpp/web/server/handler/ErrorHandler.cpp.o	../oatpp/build/src/Makefile	/^oatpp\/web\/server\/handler\/ErrorHandler.cpp.o:$/;"	t
oatpp/web/server/handler/ErrorHandler.cpp.s	../oatpp/build/src/Makefile	/^oatpp\/web\/server\/handler\/ErrorHandler.cpp.s:$/;"	t
oatpp/web/server/handler/ErrorHandler.i	../oatpp/build/src/Makefile	/^oatpp\/web\/server\/handler\/ErrorHandler.i: oatpp\/web\/server\/handler\/ErrorHandler.cpp.i$/;"	t
oatpp/web/server/handler/ErrorHandler.o	../oatpp/build/src/Makefile	/^oatpp\/web\/server\/handler\/ErrorHandler.o: oatpp\/web\/server\/handler\/ErrorHandler.cpp.o$/;"	t
oatpp/web/server/handler/ErrorHandler.s	../oatpp/build/src/Makefile	/^oatpp\/web\/server\/handler\/ErrorHandler.s: oatpp\/web\/server\/handler\/ErrorHandler.cpp.s$/;"	t
oatpp/web/server/handler/Interceptor.cpp.i	../oatpp/build/src/Makefile	/^oatpp\/web\/server\/handler\/Interceptor.cpp.i:$/;"	t
oatpp/web/server/handler/Interceptor.cpp.o	../oatpp/build/src/Makefile	/^oatpp\/web\/server\/handler\/Interceptor.cpp.o:$/;"	t
oatpp/web/server/handler/Interceptor.cpp.s	../oatpp/build/src/Makefile	/^oatpp\/web\/server\/handler\/Interceptor.cpp.s:$/;"	t
oatpp/web/server/handler/Interceptor.i	../oatpp/build/src/Makefile	/^oatpp\/web\/server\/handler\/Interceptor.i: oatpp\/web\/server\/handler\/Interceptor.cpp.i$/;"	t
oatpp/web/server/handler/Interceptor.o	../oatpp/build/src/Makefile	/^oatpp\/web\/server\/handler\/Interceptor.o: oatpp\/web\/server\/handler\/Interceptor.cpp.o$/;"	t
oatpp/web/server/handler/Interceptor.s	../oatpp/build/src/Makefile	/^oatpp\/web\/server\/handler\/Interceptor.s: oatpp\/web\/server\/handler\/Interceptor.cpp.s$/;"	t
oatpp/web/url/mapping/Pattern.cpp.i	../oatpp/build/src/Makefile	/^oatpp\/web\/url\/mapping\/Pattern.cpp.i:$/;"	t
oatpp/web/url/mapping/Pattern.cpp.o	../oatpp/build/src/Makefile	/^oatpp\/web\/url\/mapping\/Pattern.cpp.o:$/;"	t
oatpp/web/url/mapping/Pattern.cpp.s	../oatpp/build/src/Makefile	/^oatpp\/web\/url\/mapping\/Pattern.cpp.s:$/;"	t
oatpp/web/url/mapping/Pattern.i	../oatpp/build/src/Makefile	/^oatpp\/web\/url\/mapping\/Pattern.i: oatpp\/web\/url\/mapping\/Pattern.cpp.i$/;"	t
oatpp/web/url/mapping/Pattern.o	../oatpp/build/src/Makefile	/^oatpp\/web\/url\/mapping\/Pattern.o: oatpp\/web\/url\/mapping\/Pattern.cpp.o$/;"	t
oatpp/web/url/mapping/Pattern.s	../oatpp/build/src/Makefile	/^oatpp\/web\/url\/mapping\/Pattern.s: oatpp\/web\/url\/mapping\/Pattern.cpp.s$/;"	t
oatppAllTests	../oatpp/build/Makefile	/^oatppAllTests: cmake_check_build_system$/;"	t
oatppAllTests	../oatpp/build/test/Makefile	/^oatppAllTests: test\/CMakeFiles\/oatppAllTests.dir\/rule$/;"	t
oatppAllTests	../oatpp/test/CMakeLists.txt	/^add_executable(oatppAllTests$/;"	t
oatppAllTests/fast	../oatpp/build/Makefile	/^oatppAllTests\/fast:$/;"	t
oatppAllTests/fast	../oatpp/build/test/Makefile	/^oatppAllTests\/fast:$/;"	t
oatpp_LIBRARIES	../oatpp/build/src/oatppConfig.cmake	/^set(oatpp_LIBRARIES oatpp;oatpp-test)$/;"	v
oatpp_Types_hpp	../oatpp/src/oatpp/core/Types.hpp	/^#define oatpp_Types_hpp$/;"	d
oatpp_algorithm_CRC_hpp	../oatpp/src/oatpp/algorithm/CRC.hpp	/^#define oatpp_algorithm_CRC_hpp$/;"	d
oatpp_async_CoroutineWaitList_hpp	../oatpp/src/oatpp/core/async/CoroutineWaitList.hpp	/^#define oatpp_async_CoroutineWaitList_hpp$/;"	d
oatpp_async_Coroutine_hpp	../oatpp/src/oatpp/core/async/Coroutine.hpp	/^#define oatpp_async_Coroutine_hpp$/;"	d
oatpp_async_Error_hpp	../oatpp/src/oatpp/core/async/Error.hpp	/^#define oatpp_async_Error_hpp$/;"	d
oatpp_async_Executor_hpp	../oatpp/src/oatpp/core/async/Executor.hpp	/^#define oatpp_async_Executor_hpp$/;"	d
oatpp_async_Mutex_hpp	../oatpp/src/oatpp/core/async/Lock.hpp	/^#define oatpp_async_Mutex_hpp$/;"	d
oatpp_async_Processor_hpp	../oatpp/src/oatpp/core/async/Processor.hpp	/^#define oatpp_async_Processor_hpp$/;"	d
oatpp_async_worker_IOEventWorker_hpp	../oatpp/src/oatpp/core/async/worker/IOEventWorker.hpp	/^#define oatpp_async_worker_IOEventWorker_hpp$/;"	d
oatpp_async_worker_IOWorker_hpp	../oatpp/src/oatpp/core/async/worker/IOWorker.hpp	/^#define oatpp_async_worker_IOWorker_hpp$/;"	d
oatpp_async_worker_TimerWorker_hpp	../oatpp/src/oatpp/core/async/worker/TimerWorker.hpp	/^#define oatpp_async_worker_TimerWorker_hpp$/;"	d
oatpp_async_worker_Worker_hpp	../oatpp/src/oatpp/core/async/worker/Worker.hpp	/^#define oatpp_async_worker_Worker_hpp$/;"	d
oatpp_base_CommandLineArguments_hpp	../oatpp/src/oatpp/core/base/CommandLineArguments.hpp	/^#define oatpp_base_CommandLineArguments_hpp$/;"	d
oatpp_base_Config_hpp	../oatpp/src/oatpp/core/base/Config.hpp	/^#define oatpp_base_Config_hpp$/;"	d
oatpp_base_Countable	../oatpp/src/oatpp/core/base/Countable.hpp	/^#define oatpp_base_Countable$/;"	d
oatpp_base_Environment_hpp	../oatpp/src/oatpp/core/base/Environment.hpp	/^#define oatpp_base_Environment_hpp$/;"	d
oatpp_base_StrBuffer_hpp	../oatpp/src/oatpp/core/base/StrBuffer.hpp	/^#define oatpp_base_StrBuffer_hpp$/;"	d
oatpp_base_memory_Allocator_hpp	../oatpp/src/oatpp/core/base/memory/Allocator.hpp	/^#define oatpp_base_memory_Allocator_hpp$/;"	d
oatpp_base_memory_MemoryPool_hpp	../oatpp/src/oatpp/core/base/memory/MemoryPool.hpp	/^#define oatpp_base_memory_MemoryPool_hpp$/;"	d
oatpp_base_memory_ObjectPool_hpp	../oatpp/src/oatpp/core/base/memory/ObjectPool.hpp	/^#define oatpp_base_memory_ObjectPool_hpp$/;"	d
oatpp_collection_FastQueue_hpp	../oatpp/src/oatpp/core/collection/FastQueue.hpp	/^#define oatpp_collection_FastQueue_hpp$/;"	d
oatpp_collection_LinkedList_hpp	../oatpp/src/oatpp/core/collection/LinkedList.hpp	/^#define oatpp_collection_LinkedList_hpp$/;"	d
oatpp_collection_ListMap_hpp	../oatpp/src/oatpp/core/collection/ListMap.hpp	/^#define oatpp_collection_ListMap_hpp$/;"	d
oatpp_concurrency_SpinLock_hpp	../oatpp/src/oatpp/core/concurrency/SpinLock.hpp	/^#define oatpp_concurrency_SpinLock_hpp$/;"	d
oatpp_concurrency_Thread_hpp	../oatpp/src/oatpp/core/concurrency/Thread.hpp	/^#define oatpp_concurrency_Thread_hpp$/;"	d
oatpp_data_IODefinitions_hpp	../oatpp/src/oatpp/core/data/IODefinitions.hpp	/^#define oatpp_data_IODefinitions_hpp$/;"	d
oatpp_data_Stream	../oatpp/src/oatpp/core/data/stream/Stream.hpp	/^#define oatpp_data_Stream$/;"	d
oatpp_data_buffer_FIFOBuffer_hpp	../oatpp/src/oatpp/core/data/buffer/FIFOBuffer.hpp	/^#define oatpp_data_buffer_FIFOBuffer_hpp$/;"	d
oatpp_data_buffer_IOBuffer_hpp	../oatpp/src/oatpp/core/data/buffer/IOBuffer.hpp	/^#define oatpp_data_buffer_IOBuffer_hpp$/;"	d
oatpp_data_mapping_ObjectMapper_hpp	../oatpp/src/oatpp/core/data/mapping/ObjectMapper.hpp	/^#define oatpp_data_mapping_ObjectMapper_hpp$/;"	d
oatpp_data_mapping_type_ListMap_hpp	../oatpp/src/oatpp/core/data/mapping/type/ListMap.hpp	/^#define oatpp_data_mapping_type_ListMap_hpp$/;"	d
oatpp_data_mapping_type_List_hpp	../oatpp/src/oatpp/core/data/mapping/type/List.hpp	/^#define oatpp_data_mapping_type_List_hpp$/;"	d
oatpp_data_share_MemoryLabel_hpp	../oatpp/src/oatpp/core/data/share/MemoryLabel.hpp	/^#define oatpp_data_share_MemoryLabel_hpp$/;"	d
oatpp_data_stream_ChunkedBuffer_hpp	../oatpp/src/oatpp/core/data/stream/ChunkedBuffer.hpp	/^#define oatpp_data_stream_ChunkedBuffer_hpp$/;"	d
oatpp_data_stream_Delegate_hpp	../oatpp/src/oatpp/core/data/stream/Delegate.hpp	/^#define oatpp_data_stream_Delegate_hpp$/;"	d
oatpp_data_stream_StreamBufferedProxy_hpp	../oatpp/src/oatpp/core/data/stream/StreamBufferedProxy.hpp	/^#define oatpp_data_stream_StreamBufferedProxy_hpp$/;"	d
oatpp_data_type_Object_hpp	../oatpp/src/oatpp/core/data/mapping/type/Object.hpp	/^#define oatpp_data_type_Object_hpp$/;"	d
oatpp_data_type_Primitive_hpp	../oatpp/src/oatpp/core/data/mapping/type/Primitive.hpp	/^#define oatpp_data_type_Primitive_hpp$/;"	d
oatpp_data_type_Type_hpp	../oatpp/src/oatpp/core/data/mapping/type/Type.hpp	/^#define oatpp_data_type_Type_hpp$/;"	d
oatpp_encoding_Base64_hpp	../oatpp/src/oatpp/encoding/Base64.hpp	/^#define oatpp_encoding_Base64_hpp$/;"	d
oatpp_encoding_Hex_hpp	../oatpp/src/oatpp/encoding/Hex.hpp	/^#define oatpp_encoding_Hex_hpp$/;"	d
oatpp_encoding_Unicode_hpp	../oatpp/src/oatpp/encoding/Unicode.hpp	/^#define oatpp_encoding_Unicode_hpp$/;"	d
oatpp_macro_ForEach_hpp	../oatpp/src/oatpp/core/macro/basic.hpp	/^#define oatpp_macro_ForEach_hpp$/;"	d
oatpp_macro_component_hpp	../oatpp/src/oatpp/core/macro/component.hpp	/^#define oatpp_macro_component_hpp$/;"	d
oatpp_netword_ConnectionsProvider_hpp	../oatpp/src/oatpp/network/ConnectionProvider.hpp	/^#define oatpp_netword_ConnectionsProvider_hpp$/;"	d
oatpp_netword_client_SimpleTCPConnectionProvider_hpp	../oatpp/src/oatpp/network/client/SimpleTCPConnectionProvider.hpp	/^#define oatpp_netword_client_SimpleTCPConnectionProvider_hpp$/;"	d
oatpp_netword_server_SimpleTCPConnectionProvider_hpp	../oatpp/src/oatpp/network/server/SimpleTCPConnectionProvider.hpp	/^#define oatpp_netword_server_SimpleTCPConnectionProvider_hpp$/;"	d
oatpp_network_Connection_hpp	../oatpp/src/oatpp/network/Connection.hpp	/^#define oatpp_network_Connection_hpp$/;"	d
oatpp_network_Url_hpp	../oatpp/src/oatpp/network/Url.hpp	/^#define oatpp_network_Url_hpp$/;"	d
oatpp_network_virtual__Interface_hpp	../oatpp/src/oatpp/network/virtual_/Interface.hpp	/^#define oatpp_network_virtual__Interface_hpp$/;"	d
oatpp_network_virtual__Pipe_hpp	../oatpp/src/oatpp/network/virtual_/Pipe.hpp	/^#define oatpp_network_virtual__Pipe_hpp$/;"	d
oatpp_network_virtual__Socket_hpp	../oatpp/src/oatpp/network/virtual_/Socket.hpp	/^#define oatpp_network_virtual__Socket_hpp$/;"	d
oatpp_network_virtual__client_ConnectionProvider_hpp	../oatpp/src/oatpp/network/virtual_/client/ConnectionProvider.hpp	/^#define oatpp_network_virtual__client_ConnectionProvider_hpp$/;"	d
oatpp_network_virtual__server_ConnectionProvider_hpp	../oatpp/src/oatpp/network/virtual_/server/ConnectionProvider.hpp	/^#define oatpp_network_virtual__server_ConnectionProvider_hpp$/;"	d
oatpp_parser_Caret_hpp	../oatpp/src/oatpp/core/parser/Caret.hpp	/^#define oatpp_parser_Caret_hpp$/;"	d
oatpp_parser_ParsingError_hpp	../oatpp/src/oatpp/core/parser/ParsingError.hpp	/^#define oatpp_parser_ParsingError_hpp$/;"	d
oatpp_parser_json_Utils_hpp	../oatpp/src/oatpp/parser/json/Utils.hpp	/^#define oatpp_parser_json_Utils_hpp$/;"	d
oatpp_parser_json_mapping_Deserializer_hpp	../oatpp/src/oatpp/parser/json/mapping/Deserializer.hpp	/^#define oatpp_parser_json_mapping_Deserializer_hpp$/;"	d
oatpp_parser_json_mapping_ObjectMapper_hpp	../oatpp/src/oatpp/parser/json/mapping/ObjectMapper.hpp	/^#define oatpp_parser_json_mapping_ObjectMapper_hpp$/;"	d
oatpp_parser_json_mapping_Serializer_hpp	../oatpp/src/oatpp/parser/json/mapping/Serializer.hpp	/^#define oatpp_parser_json_mapping_Serializer_hpp$/;"	d
oatpp_test_Checker_hpp	../oatpp/src/oatpp-test/Checker.hpp	/^#define oatpp_test_Checker_hpp$/;"	d
oatpp_test_UnitTest_hpp	../oatpp/src/oatpp-test/UnitTest.hpp	/^#define oatpp_test_UnitTest_hpp$/;"	d
oatpp_test_async_LockTest_hpp	../oatpp/test/oatpp/core/async/LockTest.hpp	/^#define oatpp_test_async_LockTest_hpp$/;"	d
oatpp_test_base_CaretTest_hpp	../oatpp/test/oatpp/core/parser/CaretTest.hpp	/^#define oatpp_test_base_CaretTest_hpp$/;"	d
oatpp_test_base_CommandLineArgumentsTest_hpp	../oatpp/test/oatpp/core/base/CommandLineArgumentsTest.hpp	/^#define oatpp_test_base_CommandLineArgumentsTest_hpp$/;"	d
oatpp_test_base_RegRuleTest_hpp	../oatpp/test/oatpp/core/base/RegRuleTest.hpp	/^#define oatpp_test_base_RegRuleTest_hpp$/;"	d
oatpp_test_base_collection_LinkedListTest_hpp	../oatpp/test/oatpp/core/base/collection/LinkedListTest.hpp	/^#define oatpp_test_base_collection_LinkedListTest_hpp$/;"	d
oatpp_test_core_data_mapping_type_TypeTest_hpp	../oatpp/test/oatpp/core/data/mapping/type/TypeTest.hpp	/^#define oatpp_test_core_data_mapping_type_TypeTest_hpp$/;"	d
oatpp_test_core_data_share_MemoryLabelTest_hpp	../oatpp/test/oatpp/core/data/share/MemoryLabelTest.hpp	/^#define oatpp_test_core_data_share_MemoryLabelTest_hpp$/;"	d
oatpp_test_core_data_stream_ChunkedBufferTest_hpp	../oatpp/test/oatpp/core/data/stream/ChunkedBufferTest.hpp	/^#define oatpp_test_core_data_stream_ChunkedBufferTest_hpp$/;"	d
oatpp_test_encoding_Base64Test_hpp	../oatpp/test/oatpp/encoding/Base64Test.hpp	/^#define oatpp_test_encoding_Base64Test_hpp$/;"	d
oatpp_test_encoding_UnicodeTest_hpp	../oatpp/test/oatpp/encoding/UnicodeTest.hpp	/^#define oatpp_test_encoding_UnicodeTest_hpp$/;"	d
oatpp_test_network_UrlTest_hpp	../oatpp/test/oatpp/network/UrlTest.hpp	/^#define oatpp_test_network_UrlTest_hpp$/;"	d
oatpp_test_network_virtual__InterfaceTest_hpp	../oatpp/test/oatpp/network/virtual_/InterfaceTest.hpp	/^#define oatpp_test_network_virtual__InterfaceTest_hpp$/;"	d
oatpp_test_network_virtual__PipeTest_hpp	../oatpp/test/oatpp/network/virtual_/PipeTest.hpp	/^#define oatpp_test_network_virtual__PipeTest_hpp$/;"	d
oatpp_test_parser_json_mapping_DTOMapperPerfTest_hpp	../oatpp/test/oatpp/parser/json/mapping/DTOMapperPerfTest.hpp	/^#define oatpp_test_parser_json_mapping_DTOMapperPerfTest_hpp$/;"	d
oatpp_test_parser_json_mapping_DTOMapperTest_hpp	../oatpp/test/oatpp/parser/json/mapping/DTOMapperTest.hpp	/^#define oatpp_test_parser_json_mapping_DTOMapperTest_hpp$/;"	d
oatpp_test_parser_json_mapping_DeserializerTest_hpp	../oatpp/test/oatpp/parser/json/mapping/DeserializerTest.hpp	/^#define oatpp_test_parser_json_mapping_DeserializerTest_hpp$/;"	d
oatpp_test_web_ClientServerTestRunner_hpp	../oatpp/src/oatpp-test/web/ClientServerTestRunner.hpp	/^#define oatpp_test_web_ClientServerTestRunner_hpp$/;"	d
oatpp_test_web_FullAsyncClientTest_hpp	../oatpp/test/oatpp/web/FullAsyncClientTest.hpp	/^#define oatpp_test_web_FullAsyncClientTest_hpp$/;"	d
oatpp_test_web_FullAsyncTest_hpp	../oatpp/test/oatpp/web/FullAsyncTest.hpp	/^#define oatpp_test_web_FullAsyncTest_hpp$/;"	d
oatpp_test_web_FullTest_hpp	../oatpp/test/oatpp/web/FullTest.hpp	/^#define oatpp_test_web_FullTest_hpp$/;"	d
oatpp_test_web_app_Client_hpp	../oatpp/test/oatpp/web/app/Client.hpp	/^#define oatpp_test_web_app_Client_hpp$/;"	d
oatpp_test_web_app_ControllerAsync_hpp	../oatpp/test/oatpp/web/app/ControllerAsync.hpp	/^#define oatpp_test_web_app_ControllerAsync_hpp$/;"	d
oatpp_test_web_app_Controller_hpp	../oatpp/test/oatpp/web/app/Controller.hpp	/^#define oatpp_test_web_app_Controller_hpp$/;"	d
oatpp_test_web_app_DTOs_hpp	../oatpp/test/oatpp/web/app/DTOs.hpp	/^#define oatpp_test_web_app_DTOs_hpp$/;"	d
oatpp_test_web_server_api_ApiControllerTest_hpp	../oatpp/test/oatpp/web/server/api/ApiControllerTest.hpp	/^#define oatpp_test_web_server_api_ApiControllerTest_hpp$/;"	d
oatpp_utils_ConversionUtils_hpp	../oatpp/src/oatpp/core/utils/ConversionUtils.hpp	/^#define oatpp_utils_ConversionUtils_hpp$/;"	d
oatpp_web_client_HttpRequestExecutor_hpp	../oatpp/src/oatpp/web/client/HttpRequestExecutor.hpp	/^#define oatpp_web_client_HttpRequestExecutor_hpp$/;"	d
oatpp_web_client_RequestExecutor_hpp	../oatpp/src/oatpp/web/client/RequestExecutor.hpp	/^#define oatpp_web_client_RequestExecutor_hpp$/;"	d
oatpp_web_protocol_CommunicationError_hpp	../oatpp/src/oatpp/web/protocol/CommunicationError.hpp	/^#define oatpp_web_protocol_CommunicationError_hpp$/;"	d
oatpp_web_protocol_http_Http_hpp	../oatpp/src/oatpp/web/protocol/http/Http.hpp	/^#define oatpp_web_protocol_http_Http_hpp$/;"	d
oatpp_web_protocol_http_incoming_BodyDecoder_hpp	../oatpp/src/oatpp/web/protocol/http/incoming/BodyDecoder.hpp	/^#define oatpp_web_protocol_http_incoming_BodyDecoder_hpp$/;"	d
oatpp_web_protocol_http_incoming_RequestHeadersReader_hpp	../oatpp/src/oatpp/web/protocol/http/incoming/RequestHeadersReader.hpp	/^#define oatpp_web_protocol_http_incoming_RequestHeadersReader_hpp$/;"	d
oatpp_web_protocol_http_incoming_Request_hpp	../oatpp/src/oatpp/web/protocol/http/incoming/Request.hpp	/^#define oatpp_web_protocol_http_incoming_Request_hpp$/;"	d
oatpp_web_protocol_http_incoming_ResponseHeadersReader_hpp	../oatpp/src/oatpp/web/protocol/http/incoming/ResponseHeadersReader.hpp	/^#define oatpp_web_protocol_http_incoming_ResponseHeadersReader_hpp$/;"	d
oatpp_web_protocol_http_incoming_Response_hpp	../oatpp/src/oatpp/web/protocol/http/incoming/Response.hpp	/^#define oatpp_web_protocol_http_incoming_Response_hpp$/;"	d
oatpp_web_protocol_http_incoming_SimpleBodyDecoder_hpp	../oatpp/src/oatpp/web/protocol/http/incoming/SimpleBodyDecoder.hpp	/^#define oatpp_web_protocol_http_incoming_SimpleBodyDecoder_hpp$/;"	d
oatpp_web_protocol_http_outgoing_Body_hpp	../oatpp/src/oatpp/web/protocol/http/outgoing/Body.hpp	/^#define oatpp_web_protocol_http_outgoing_Body_hpp$/;"	d
oatpp_web_protocol_http_outgoing_BufferBody_hpp	../oatpp/src/oatpp/web/protocol/http/outgoing/BufferBody.hpp	/^#define oatpp_web_protocol_http_outgoing_BufferBody_hpp$/;"	d
oatpp_web_protocol_http_outgoing_ChunkedBufferBody_hpp	../oatpp/src/oatpp/web/protocol/http/outgoing/ChunkedBufferBody.hpp	/^#define oatpp_web_protocol_http_outgoing_ChunkedBufferBody_hpp$/;"	d
oatpp_web_protocol_http_outgoing_CommunicationUtils_hpp	../oatpp/src/oatpp/web/protocol/http/outgoing/CommunicationUtils.hpp	/^#define oatpp_web_protocol_http_outgoing_CommunicationUtils_hpp$/;"	d
oatpp_web_protocol_http_outgoing_DtoBody_hpp	../oatpp/src/oatpp/web/protocol/http/outgoing/DtoBody.hpp	/^#define oatpp_web_protocol_http_outgoing_DtoBody_hpp$/;"	d
oatpp_web_protocol_http_outgoing_Request_hpp	../oatpp/src/oatpp/web/protocol/http/outgoing/Request.hpp	/^#define oatpp_web_protocol_http_outgoing_Request_hpp$/;"	d
oatpp_web_protocol_http_outgoing_ResponseFactory_hpp	../oatpp/src/oatpp/web/protocol/http/outgoing/ResponseFactory.hpp	/^#define oatpp_web_protocol_http_outgoing_ResponseFactory_hpp$/;"	d
oatpp_web_protocol_http_outgoing_Response_hpp	../oatpp/src/oatpp/web/protocol/http/outgoing/Response.hpp	/^#define oatpp_web_protocol_http_outgoing_Response_hpp$/;"	d
oatpp_web_server_AsyncHttpConnectionHandler_hpp	../oatpp/src/oatpp/web/server/AsyncHttpConnectionHandler.hpp	/^#define oatpp_web_server_AsyncHttpConnectionHandler_hpp$/;"	d
oatpp_web_server_HttpConnectionHandler_hpp	../oatpp/src/oatpp/web/server/HttpConnectionHandler.hpp	/^#define oatpp_web_server_HttpConnectionHandler_hpp$/;"	d
oatpp_web_server_HttpProcessor_hpp	../oatpp/src/oatpp/web/server/HttpProcessor.hpp	/^#define oatpp_web_server_HttpProcessor_hpp$/;"	d
oatpp_web_server_HttpRequestHandler_hpp	../oatpp/src/oatpp/web/server/HttpRequestHandler.hpp	/^#define oatpp_web_server_HttpRequestHandler_hpp$/;"	d
oatpp_web_server_HttpRouter_hpp	../oatpp/src/oatpp/web/server/HttpRouter.hpp	/^#define oatpp_web_server_HttpRouter_hpp$/;"	d
oatpp_web_server_handler_ErrorHandler_hpp	../oatpp/src/oatpp/web/server/handler/ErrorHandler.hpp	/^#define oatpp_web_server_handler_ErrorHandler_hpp$/;"	d
oatpp_web_server_handler_Interceptor_hpp	../oatpp/src/oatpp/web/server/handler/Interceptor.hpp	/^#define oatpp_web_server_handler_Interceptor_hpp$/;"	d
oatpp_web_server_rest_Controller_hpp	../oatpp/src/oatpp/web/server/api/ApiController.hpp	/^#define oatpp_web_server_rest_Controller_hpp$/;"	d
oatpp_web_server_rest_Endpoint_hpp	../oatpp/src/oatpp/web/server/api/Endpoint.hpp	/^#define oatpp_web_server_rest_Endpoint_hpp$/;"	d
oatpp_web_url_mapping_Pattern_hpp	../oatpp/src/oatpp/web/url/mapping/Pattern.hpp	/^#define oatpp_web_url_mapping_Pattern_hpp$/;"	d
oatpp_web_url_mapping_Router_hpp	../oatpp/src/oatpp/web/url/mapping/Router.hpp	/^#define oatpp_web_url_mapping_Router_hpp$/;"	d
objectsCount	../oatpp/src/oatpp-test/Checker.hpp	/^    v_int64 objectsCount;$/;"	m	class:oatpp::test::ThreadLocalObjectsChecker::MemoryPoolData	typeref:typename:v_int64
obtain	../oatpp/src/oatpp/core/base/memory/MemoryPool.cpp	/^void* MemoryPool::obtain() {$/;"	f	class:oatpp::base::memory::MemoryPool	typeref:typename:void *
obtain	../oatpp/src/oatpp/core/base/memory/MemoryPool.cpp	/^void* ThreadDistributedMemoryPool::obtain() {$/;"	f	class:oatpp::base::memory::ThreadDistributedMemoryPool	typeref:typename:void *
obtain	../oatpp/src/oatpp/core/base/memory/MemoryPool.hpp	/^  T* obtain(Args... args) {$/;"	f	class:oatpp::base::memory::Bench	typeref:typename:T *
obtainNewEntry	../oatpp/src/oatpp/core/data/stream/ChunkedBuffer.cpp	/^ChunkedBuffer::ChunkEntry* ChunkedBuffer::obtainNewEntry(){$/;"	f	class:oatpp::data::stream::ChunkedBuffer	typeref:typename:ChunkedBuffer::ChunkEntry *
obtainSocket	../oatpp/src/oatpp/network/virtual_/client/ConnectionProvider.cpp	/^    Action obtainSocket() {$/;"	f	class:oatpp::network::virtual_::client::ConnectionProvider::getConnectionAsync::ConnectCoroutine	typeref:typename:Action	file:
offset	../oatpp/src/oatpp/core/data/mapping/type/Type.hpp	/^    const v_int64 offset;$/;"	m	class:oatpp::data::mapping::type::Type::Property	typeref:typename:const v_int64
onBodyRead	../oatpp/test/oatpp/web/FullAsyncClientTest.cpp	/^  Action onBodyRead(const oatpp::String& body) {$/;"	f	class:oatpp::test::web::__anonb368a9f30110::ClientCoroutine_echoBodyAsync	typeref:typename:Action	file:
onBodyRead	../oatpp/test/oatpp/web/FullAsyncClientTest.cpp	/^  Action onBodyRead(const oatpp::String& body) {$/;"	f	class:oatpp::test::web::__anonb368a9f30110::ClientCoroutine_getRootAsync	typeref:typename:Action	file:
onBodyRead	../oatpp/test/oatpp/web/app/ControllerAsync.hpp	/^    Action onBodyRead(const String& body) {$/;"	f	class:oatpp::test::web::app::ControllerAsync	typeref:typename:Action
onConnectionReady	../oatpp/src/oatpp/web/client/HttpRequestExecutor.cpp	/^    Action onConnectionReady(const std::shared_ptr<oatpp::data::stream::IOStream>& connection) {$/;"	f	class:oatpp::web::client::HttpRequestExecutor::executeAsync::ExecutorCoroutine	typeref:typename:Action	file:
onConnectionReady	../oatpp/src/oatpp/web/client/HttpRequestExecutor.cpp	/^    Action onConnectionReady(const std::shared_ptr<oatpp::data::stream::IOStream>& connection) {$/;"	f	class:oatpp::web::client::HttpRequestExecutor::getConnectionAsync::GetConnectionCoroutine	typeref:typename:Action	file:
onDecoded	../oatpp/src/oatpp/web/protocol/http/incoming/BodyDecoder.cpp	/^async::Action BodyDecoder::ToStringDecoder::onDecoded() {$/;"	f	class:oatpp::web::protocol::http::incoming::BodyDecoder::ToStringDecoder	typeref:typename:async::Action
onDecoded	../oatpp/src/oatpp/web/protocol/http/incoming/BodyDecoder.hpp	/^    oatpp::async::Action onDecoded() {$/;"	f	class:oatpp::web::protocol::http::incoming::BodyDecoder::ToDtoDecoder	typeref:typename:oatpp::async::Action
onHeadersParsed	../oatpp/src/oatpp/web/client/HttpRequestExecutor.cpp	/^    Action onHeadersParsed(const ResponseHeadersReader::Result& result) {$/;"	f	class:oatpp::web::client::HttpRequestExecutor::executeAsync::ExecutorCoroutine	typeref:typename:Action	file:
onHeadersParsed	../oatpp/src/oatpp/web/server/HttpProcessor.cpp	/^oatpp::async::Action HttpProcessor::Coroutine::onHeadersParsed(const RequestHeadersReader::Resul/;"	f	class:oatpp::web::server::HttpProcessor::Coroutine	typeref:typename:oatpp::async::Action
onLineCharRead	../oatpp/src/oatpp/web/protocol/http/incoming/SimpleBodyDecoder.cpp	/^    Action onLineCharRead() {$/;"	f	class:oatpp::web::protocol::http::incoming::SimpleBodyDecoder::doChunkedDecodingAsync::ChunkedDecoder	typeref:typename:Action	file:
onLineRead	../oatpp/src/oatpp/web/protocol/http/incoming/SimpleBodyDecoder.cpp	/^    Action onLineRead() {$/;"	f	class:oatpp::web::protocol::http::incoming::SimpleBodyDecoder::doChunkedDecodingAsync::ChunkedDecoder	typeref:typename:Action	file:
onNewItem	../oatpp/src/oatpp/core/async/Lock.cpp	/^void Lock::onNewItem(CoroutineWaitList& list) {$/;"	f	class:oatpp::async::Lock	typeref:typename:void
onNewItem	../oatpp/src/oatpp/network/virtual_/Pipe.hpp	/^      void onNewItem(oatpp::async::CoroutineWaitList& list) override {$/;"	f	class:oatpp::network::virtual_::Pipe::Reader::WaitListListener	typeref:typename:void
onNewItem	../oatpp/src/oatpp/network/virtual_/Pipe.hpp	/^      void onNewItem(oatpp::async::CoroutineWaitList& list) override {$/;"	f	class:oatpp::network::virtual_::Pipe::Writer::WaitListListener	typeref:typename:void
onRequestDone	../oatpp/src/oatpp/web/server/HttpProcessor.cpp	/^HttpProcessor::Coroutine::Action HttpProcessor::Coroutine::onRequestDone() {$/;"	f	class:oatpp::web::server::HttpProcessor::Coroutine	typeref:typename:HttpProcessor::Coroutine::Action
onRequestFormed	../oatpp/src/oatpp/web/server/HttpProcessor.cpp	/^HttpProcessor::Coroutine::Action HttpProcessor::Coroutine::onRequestFormed() {$/;"	f	class:oatpp::web::server::HttpProcessor::Coroutine	typeref:typename:HttpProcessor::Coroutine::Action
onResponse	../oatpp/src/oatpp/web/server/HttpProcessor.cpp	/^HttpProcessor::Coroutine::Action HttpProcessor::Coroutine::onResponse(const std::shared_ptr<prot/;"	f	class:oatpp::web::server::HttpProcessor::Coroutine	typeref:typename:HttpProcessor::Coroutine::Action
onResponse	../oatpp/test/oatpp/web/FullAsyncClientTest.cpp	/^  Action onResponse(const std::shared_ptr<IncomingResponse>& response) {$/;"	f	class:oatpp::test::web::__anonb368a9f30110::ClientCoroutine_echoBodyAsync	typeref:typename:Action	file:
onResponse	../oatpp/test/oatpp/web/FullAsyncClientTest.cpp	/^  Action onResponse(const std::shared_ptr<IncomingResponse>& response) {$/;"	f	class:oatpp::test::web::__anonb368a9f30110::ClientCoroutine_getRootAsync	typeref:typename:Action	file:
onResponseFormed	../oatpp/src/oatpp/web/server/HttpProcessor.cpp	/^HttpProcessor::Coroutine::Action HttpProcessor::Coroutine::onResponseFormed() {$/;"	f	class:oatpp::web::server::HttpProcessor::Coroutine	typeref:typename:HttpProcessor::Coroutine::Action
onRun	../oatpp/test/oatpp/core/async/LockTest.cpp	/^void LockTest::onRun() {$/;"	f	class:oatpp::test::async::LockTest	typeref:typename:void
onRun	../oatpp/test/oatpp/core/base/CommandLineArgumentsTest.cpp	/^void CommandLineArgumentsTest::onRun() {$/;"	f	class:oatpp::test::base::CommandLineArgumentsTest	typeref:typename:void
onRun	../oatpp/test/oatpp/core/base/RegRuleTest.cpp	/^void RegRuleTest::onRun() {$/;"	f	class:oatpp::test::base::RegRuleTest	typeref:typename:void
onRun	../oatpp/test/oatpp/core/base/collection/LinkedListTest.cpp	/^void LinkedListTest::onRun() {$/;"	f	class:oatpp::test::collection::LinkedListTest	typeref:typename:void
onRun	../oatpp/test/oatpp/core/base/memory/MemoryPoolTest.cpp	/^void MemoryPoolTest::onRun() {$/;"	f	class:oatpp::test::memory::MemoryPoolTest	typeref:typename:void
onRun	../oatpp/test/oatpp/core/base/memory/PerfTest.cpp	/^void PerfTest::onRun() {$/;"	f	class:oatpp::test::memory::PerfTest	typeref:typename:void
onRun	../oatpp/test/oatpp/core/data/mapping/type/TypeTest.cpp	/^void TypeTest::onRun() {$/;"	f	class:oatpp::test::core::data::mapping::type::TypeTest	typeref:typename:void
onRun	../oatpp/test/oatpp/core/data/share/MemoryLabelTest.cpp	/^void MemoryLabelTest::onRun() {$/;"	f	class:oatpp::test::core::data::share::MemoryLabelTest	typeref:typename:void
onRun	../oatpp/test/oatpp/core/data/stream/ChunkedBufferTest.cpp	/^void ChunkedBufferTest::onRun() {$/;"	f	class:oatpp::test::core::data::stream::ChunkedBufferTest	typeref:typename:void
onRun	../oatpp/test/oatpp/core/parser/CaretTest.cpp	/^void CaretTest::onRun() {$/;"	f	class:oatpp::test::parser::CaretTest	typeref:typename:void
onRun	../oatpp/test/oatpp/encoding/Base64Test.cpp	/^void Base64Test::onRun() {$/;"	f	class:oatpp::test::encoding::Base64Test	typeref:typename:void
onRun	../oatpp/test/oatpp/encoding/UnicodeTest.cpp	/^void UnicodeTest::onRun(){$/;"	f	class:oatpp::test::encoding::UnicodeTest	typeref:typename:void
onRun	../oatpp/test/oatpp/network/UrlTest.cpp	/^void UrlTest::onRun() {$/;"	f	class:oatpp::test::network::UrlTest	typeref:typename:void
onRun	../oatpp/test/oatpp/network/virtual_/InterfaceTest.cpp	/^void InterfaceTest::onRun() {$/;"	f	class:oatpp::test::network::virtual_::InterfaceTest	typeref:typename:void
onRun	../oatpp/test/oatpp/network/virtual_/PipeTest.cpp	/^void PipeTest::onRun() {$/;"	f	class:oatpp::test::network::virtual_::PipeTest	typeref:typename:void
onRun	../oatpp/test/oatpp/parser/json/mapping/DTOMapperPerfTest.cpp	/^void DTOMapperPerfTest::onRun() {$/;"	f	class:oatpp::test::parser::json::mapping::DTOMapperPerfTest	typeref:typename:void
onRun	../oatpp/test/oatpp/parser/json/mapping/DTOMapperTest.cpp	/^void DTOMapperTest::onRun(){$/;"	f	class:oatpp::test::parser::json::mapping::DTOMapperTest	typeref:typename:void
onRun	../oatpp/test/oatpp/parser/json/mapping/DeserializerTest.cpp	/^void DeserializerTest::onRun(){$/;"	f	class:oatpp::test::parser::json::mapping::DeserializerTest	typeref:typename:void
onRun	../oatpp/test/oatpp/web/FullAsyncClientTest.cpp	/^void FullAsyncClientTest::onRun() {$/;"	f	class:oatpp::test::web::FullAsyncClientTest	typeref:typename:void
onRun	../oatpp/test/oatpp/web/FullAsyncTest.cpp	/^void FullAsyncTest::onRun() {$/;"	f	class:oatpp::test::web::FullAsyncTest	typeref:typename:void
onRun	../oatpp/test/oatpp/web/FullTest.cpp	/^void FullTest::onRun() {$/;"	f	class:oatpp::test::web::FullTest	typeref:typename:void
onRun	../oatpp/test/oatpp/web/server/api/ApiControllerTest.cpp	/^void ApiControllerTest::onRun() {$/;"	f	class:oatpp::test::web::server::api::ApiControllerTest	typeref:typename:void
onRun	test/tests.cpp	/^  void onRun() override {$/;"	f	class:__anon08dc63f80110::Test	typeref:typename:void	file:
operator !=	../oatpp/src/oatpp/core/base/memory/Allocator.hpp	/^inline bool operator != (const PoolSharedObjectAllocator<T>& a, const PoolSharedObjectAllocator</;"	f	namespace:oatpp::base::memory	typeref:typename:bool
operator !=	../oatpp/src/oatpp/core/base/memory/Allocator.hpp	/^inline bool operator != (const SharedObjectAllocator<T>& a, const SharedObjectAllocator<U>& b) {$/;"	f	namespace:oatpp::base::memory	typeref:typename:bool
operator !=	../oatpp/src/oatpp/core/base/memory/Allocator.hpp	/^inline bool operator != (const ThreadLocalPoolSharedObjectAllocator<T>& a, const ThreadLocalPool/;"	f	namespace:oatpp::base::memory	typeref:typename:bool
operator !=	../oatpp/src/oatpp/core/data/mapping/type/Primitive.hpp	/^    bool operator!=(const ObjectWrapper &other) const {$/;"	f	class:oatpp::data::mapping::type::Primitive::ObjectWrapper	typeref:typename:bool
operator !=	../oatpp/src/oatpp/core/data/mapping/type/Primitive.hpp	/^  bool operator!=(const String &other) const {$/;"	f	class:oatpp::data::mapping::type::String	typeref:typename:bool
operator !=	../oatpp/src/oatpp/core/data/mapping/type/Type.hpp	/^  inline bool operator != (const PolymorphicWrapper& other){$/;"	f	class:oatpp::data::mapping::type::PolymorphicWrapper	typeref:typename:bool
operator !=	../oatpp/src/oatpp/core/data/share/MemoryLabel.hpp	/^  bool operator!=(const StringKeyLabel &other) const {$/;"	f	class:oatpp::data::share::StringKeyLabel	typeref:typename:bool
operator !=	../oatpp/src/oatpp/core/data/share/MemoryLabel.hpp	/^  bool operator!=(const StringKeyLabelCI &other) const {$/;"	f	class:oatpp::data::share::StringKeyLabelCI	typeref:typename:bool
operator !=	../oatpp/src/oatpp/core/data/share/MemoryLabel.hpp	/^  bool operator!=(const StringKeyLabelCI_FAST &other) const {$/;"	f	class:oatpp::data::share::StringKeyLabelCI_FAST	typeref:typename:bool
operator !=	../oatpp/src/oatpp/web/protocol/http/Http.hpp	/^  bool operator!=(const Status& other) const {$/;"	f	class:oatpp::web::protocol::http::Status	typeref:typename:bool
operator ()	../oatpp/src/oatpp/core/data/mapping/type/Primitive.hpp	/^    result_type operator()(oatpp::data::mapping::type::String const& s) const noexcept {$/;"	f	struct:std::hash	typeref:typename:result_type
operator ()	../oatpp/src/oatpp/core/data/share/MemoryLabel.hpp	/^    result_type operator()(oatpp::data::share::StringKeyLabel const& s) const noexcept {$/;"	f	struct:std::hash	typeref:typename:result_type
operator ()	../oatpp/src/oatpp/core/data/share/MemoryLabel.hpp	/^    result_type operator()(oatpp::data::share::StringKeyLabelCI const& s) const noexcept {$/;"	f	struct:std::hash	typeref:typename:result_type
operator ()	../oatpp/src/oatpp/core/data/share/MemoryLabel.hpp	/^    result_type operator()(oatpp::data::share::StringKeyLabelCI_FAST const& s) const noexcept {$/;"	f	struct:std::hash	typeref:typename:result_type
operator ()	../oatpp/src/oatpp/web/protocol/http/Http.hpp	/^    result_type operator()(oatpp::web::protocol::http::Status const& s) const noexcept {$/;"	f	struct:std::hash	typeref:typename:result_type
operator +	../oatpp/src/oatpp/core/data/mapping/type/Primitive.cpp	/^String operator + (const String& a, const String& b) {$/;"	f	namespace:oatpp::data::mapping::type	typeref:typename:String
operator +	../oatpp/src/oatpp/core/data/mapping/type/Primitive.cpp	/^String operator + (const String& b, const char* a) {$/;"	f	namespace:oatpp::data::mapping::type	typeref:typename:String
operator +	../oatpp/src/oatpp/core/data/mapping/type/Primitive.cpp	/^String operator + (const char* a, const String& b) {$/;"	f	namespace:oatpp::data::mapping::type	typeref:typename:String
operator ->	../oatpp/src/oatpp/core/data/mapping/type/Type.hpp	/^  T* operator->() const {$/;"	f	class:oatpp::data::mapping::type::PolymorphicWrapper	typeref:typename:T *
operator <<	../oatpp/src/oatpp/core/data/stream/Stream.cpp	/^ConsistentOutputStream& operator << (ConsistentOutputStream& s, bool value) {$/;"	f	namespace:oatpp::data::stream	typeref:typename:ConsistentOutputStream &
operator <<	../oatpp/src/oatpp/core/data/stream/Stream.cpp	/^ConsistentOutputStream& operator << (ConsistentOutputStream& s, const Boolean& value) {$/;"	f	namespace:oatpp::data::stream	typeref:typename:ConsistentOutputStream &
operator <<	../oatpp/src/oatpp/core/data/stream/Stream.cpp	/^ConsistentOutputStream& operator << (ConsistentOutputStream& s, const Float32& value) {$/;"	f	namespace:oatpp::data::stream	typeref:typename:ConsistentOutputStream &
operator <<	../oatpp/src/oatpp/core/data/stream/Stream.cpp	/^ConsistentOutputStream& operator << (ConsistentOutputStream& s, const Float64& value) {$/;"	f	namespace:oatpp::data::stream	typeref:typename:ConsistentOutputStream &
operator <<	../oatpp/src/oatpp/core/data/stream/Stream.cpp	/^ConsistentOutputStream& operator << (ConsistentOutputStream& s, const Int16& value) {$/;"	f	namespace:oatpp::data::stream	typeref:typename:ConsistentOutputStream &
operator <<	../oatpp/src/oatpp/core/data/stream/Stream.cpp	/^ConsistentOutputStream& operator << (ConsistentOutputStream& s, const Int32& value) {$/;"	f	namespace:oatpp::data::stream	typeref:typename:ConsistentOutputStream &
operator <<	../oatpp/src/oatpp/core/data/stream/Stream.cpp	/^ConsistentOutputStream& operator << (ConsistentOutputStream& s, const Int64& value) {$/;"	f	namespace:oatpp::data::stream	typeref:typename:ConsistentOutputStream &
operator <<	../oatpp/src/oatpp/core/data/stream/Stream.cpp	/^ConsistentOutputStream& operator << (ConsistentOutputStream& s, const Int8& value) {$/;"	f	namespace:oatpp::data::stream	typeref:typename:ConsistentOutputStream &
operator <<	../oatpp/src/oatpp/core/data/stream/Stream.cpp	/^ConsistentOutputStream& operator << (ConsistentOutputStream& s, const char* str) {$/;"	f	namespace:oatpp::data::stream	typeref:typename:ConsistentOutputStream &
operator <<	../oatpp/src/oatpp/core/data/stream/Stream.cpp	/^ConsistentOutputStream& operator << (ConsistentOutputStream& s, const oatpp::String& str) {$/;"	f	namespace:oatpp::data::stream	typeref:typename:ConsistentOutputStream &
operator <<	../oatpp/src/oatpp/core/data/stream/Stream.cpp	/^ConsistentOutputStream& operator << (ConsistentOutputStream& s, v_float32 value) {$/;"	f	namespace:oatpp::data::stream	typeref:typename:ConsistentOutputStream &
operator <<	../oatpp/src/oatpp/core/data/stream/Stream.cpp	/^ConsistentOutputStream& operator << (ConsistentOutputStream& s, v_float64 value) {$/;"	f	namespace:oatpp::data::stream	typeref:typename:ConsistentOutputStream &
operator <<	../oatpp/src/oatpp/core/data/stream/Stream.cpp	/^ConsistentOutputStream& operator << (ConsistentOutputStream& s, v_int32 value) {$/;"	f	namespace:oatpp::data::stream	typeref:typename:ConsistentOutputStream &
operator <<	../oatpp/src/oatpp/core/data/stream/Stream.cpp	/^ConsistentOutputStream& operator << (ConsistentOutputStream& s, v_int64 value) {$/;"	f	namespace:oatpp::data::stream	typeref:typename:ConsistentOutputStream &
operator =	../oatpp/src/oatpp/core/async/Coroutine.cpp	/^Action& Action::operator=(Action&& other) {$/;"	f	class:oatpp::async::Action	typeref:typename:Action &
operator =	../oatpp/src/oatpp/core/async/Coroutine.cpp	/^CoroutineStarter& CoroutineStarter::operator=(CoroutineStarter&& other) {$/;"	f	class:oatpp::async::CoroutineStarter	typeref:typename:CoroutineStarter &
operator =	../oatpp/src/oatpp/core/async/Coroutine.hpp	/^    StarterForResult& operator=(StarterForResult&& other) {$/;"	f	class:oatpp::async::AbstractCoroutineWithResult::StarterForResult	typeref:typename:StarterForResult &
operator =	../oatpp/src/oatpp/core/async/CoroutineWaitList.hpp	/^  CoroutineWaitList& operator=(CoroutineWaitList&& other) {$/;"	f	class:oatpp::async::CoroutineWaitList	typeref:typename:CoroutineWaitList &
operator =	../oatpp/src/oatpp/core/data/mapping/type/Primitive.hpp	/^    ObjectWrapper& operator = (const ObjectWrapper &other){$/;"	f	class:oatpp::data::mapping::type::Primitive::ObjectWrapper	typeref:typename:ObjectWrapper &
operator =	../oatpp/src/oatpp/core/data/mapping/type/Primitive.hpp	/^    ObjectWrapper& operator = (const ValueType& value){$/;"	f	class:oatpp::data::mapping::type::Primitive::ObjectWrapper	typeref:typename:ObjectWrapper &
operator =	../oatpp/src/oatpp/core/data/mapping/type/Primitive.hpp	/^  String& operator = (String&& other){$/;"	f	class:oatpp::data::mapping::type::String	typeref:typename:String &
operator =	../oatpp/src/oatpp/core/data/mapping/type/Primitive.hpp	/^  String& operator = (const String& other){$/;"	f	class:oatpp::data::mapping::type::String	typeref:typename:String &
operator =	../oatpp/src/oatpp/core/data/mapping/type/Primitive.hpp	/^  String& operator = (const char* str) {$/;"	f	class:oatpp::data::mapping::type::String	typeref:typename:String &
operator =	../oatpp/src/oatpp/core/data/mapping/type/Type.hpp	/^  ObjectWrapper& operator=(const PolymorphicWrapper<T>& other){$/;"	f	class:oatpp::data::mapping::type::ObjectWrapper	typeref:typename:ObjectWrapper &
operator =	../oatpp/src/oatpp/core/data/mapping/type/Type.hpp	/^  ObjectWrapper& operator=(const PolymorphicWrapper<T>&& other){$/;"	f	class:oatpp::data::mapping::type::ObjectWrapper	typeref:typename:ObjectWrapper &
operator =	../oatpp/src/oatpp/core/data/mapping/type/Type.hpp	/^  PolymorphicWrapper& operator=(const PolymorphicWrapper<T>& other){$/;"	f	class:oatpp::data::mapping::type::PolymorphicWrapper	typeref:typename:PolymorphicWrapper &
operator =	../oatpp/src/oatpp/core/data/mapping/type/Type.hpp	/^  PolymorphicWrapper& operator=(const PolymorphicWrapper<T>&& other){$/;"	f	class:oatpp::data::mapping::type::PolymorphicWrapper	typeref:typename:PolymorphicWrapper &
operator ==	../oatpp/src/oatpp/core/base/memory/Allocator.hpp	/^inline bool operator == (const PoolSharedObjectAllocator<T>&, const PoolSharedObjectAllocator<U>/;"	f	namespace:oatpp::base::memory	typeref:typename:bool
operator ==	../oatpp/src/oatpp/core/base/memory/Allocator.hpp	/^inline bool operator == (const SharedObjectAllocator<T>&, const SharedObjectAllocator<U>&) {$/;"	f	namespace:oatpp::base::memory	typeref:typename:bool
operator ==	../oatpp/src/oatpp/core/base/memory/Allocator.hpp	/^inline bool operator == (const ThreadLocalPoolSharedObjectAllocator<T>&, const ThreadLocalPoolSh/;"	f	namespace:oatpp::base::memory	typeref:typename:bool
operator ==	../oatpp/src/oatpp/core/data/mapping/type/Primitive.hpp	/^    bool operator==(const ObjectWrapper &other) const {$/;"	f	class:oatpp::data::mapping::type::Primitive::ObjectWrapper	typeref:typename:bool
operator ==	../oatpp/src/oatpp/core/data/mapping/type/Primitive.hpp	/^  bool operator==(const String &other) const {$/;"	f	class:oatpp::data::mapping::type::String	typeref:typename:bool
operator ==	../oatpp/src/oatpp/core/data/mapping/type/Type.hpp	/^  inline bool operator == (const PolymorphicWrapper& other){$/;"	f	class:oatpp::data::mapping::type::PolymorphicWrapper	typeref:typename:bool
operator ==	../oatpp/src/oatpp/core/data/share/MemoryLabel.hpp	/^  bool operator==(const StringKeyLabel &other) const {$/;"	f	class:oatpp::data::share::StringKeyLabel	typeref:typename:bool
operator ==	../oatpp/src/oatpp/core/data/share/MemoryLabel.hpp	/^  bool operator==(const StringKeyLabelCI &other) const {$/;"	f	class:oatpp::data::share::StringKeyLabelCI	typeref:typename:bool
operator ==	../oatpp/src/oatpp/core/data/share/MemoryLabel.hpp	/^  bool operator==(const StringKeyLabelCI_FAST &other) const {$/;"	f	class:oatpp::data::share::StringKeyLabelCI_FAST	typeref:typename:bool
operator ==	../oatpp/src/oatpp/web/protocol/http/Http.hpp	/^  bool operator==(const Status& other) const {$/;"	f	class:oatpp::web::protocol::http::Status	typeref:typename:bool
operator PolymorphicWrapper<oatpp::base::Countable>	../oatpp/src/oatpp/core/data/mapping/type/Type.hpp	/^  inline operator PolymorphicWrapper<oatpp::base::Countable>() const {$/;"	f	class:oatpp::data::mapping::type::PolymorphicWrapper
operator ValueType	../oatpp/src/oatpp/core/data/mapping/type/Primitive.hpp	/^    inline operator ValueType() const {$/;"	f	class:oatpp::data::mapping::type::Primitive::ObjectWrapper
operator []	../oatpp/src/oatpp/web/server/api/Endpoint.cpp	/^Endpoint::Info::Param& Endpoint::Info::Params::operator [](const oatpp::String& name) {$/;"	f	class:oatpp::web::server::api::Endpoint::Info::Params	typeref:typename:Endpoint::Info::Param &
operator delete	../oatpp/src/oatpp/core/async/Coroutine.hpp	/^  static void operator delete(void* ptr, std::size_t sz) {$/;"	f	class:oatpp::async::Coroutine	typeref:typename:void
operator delete	../oatpp/src/oatpp/core/async/Coroutine.hpp	/^  static void operator delete(void* ptr, std::size_t sz) {$/;"	f	class:oatpp::async::CoroutineWithResult	typeref:typename:void
operator delete	../oatpp/test/oatpp/core/base/memory/PerfTest.cpp	/^    static void operator delete(void* ptr, std::size_t sz) {$/;"	f	class:oatpp::test::memory::__anon75c3e6ad0110::TestBase	typeref:typename:void	file:
operator delete	../oatpp/test/oatpp/core/base/memory/PerfTest.cpp	/^    static void operator delete(void* ptr, std::size_t sz) {$/;"	f	class:oatpp::test::memory::__anon75c3e6ad0110::TestChild	typeref:typename:void	file:
operator new	../oatpp/src/oatpp/core/async/Coroutine.hpp	/^  static void* operator new(std::size_t sz) {$/;"	f	class:oatpp::async::Coroutine	typeref:typename:void *
operator new	../oatpp/src/oatpp/core/async/Coroutine.hpp	/^  static void* operator new(std::size_t sz) {$/;"	f	class:oatpp::async::CoroutineWithResult	typeref:typename:void *
operator new	../oatpp/test/oatpp/core/base/memory/PerfTest.cpp	/^    static void* operator new(std::size_t sz) {$/;"	f	class:oatpp::test::memory::__anon75c3e6ad0110::TestBase	typeref:typename:void *	file:
operator new	../oatpp/test/oatpp/core/base/memory/PerfTest.cpp	/^    static void* operator new(std::size_t sz) {$/;"	f	class:oatpp::test::memory::__anon75c3e6ad0110::TestChild	typeref:typename:void *	file:
outStream	../oatpp/src/oatpp/web/server/HttpProcessor.hpp	/^    std::shared_ptr<oatpp::data::stream::OutputStreamBufferedProxy> outStream;$/;"	m	class:oatpp::web::server::HttpProcessor::ConnectionState	typeref:typename:std::shared_ptr<oatpp::data::stream::OutputStreamBufferedProxy>
outgoing	../oatpp/src/oatpp/web/protocol/http/outgoing/Body.hpp	/^namespace oatpp { namespace web { namespace protocol { namespace http { namespace outgoing {$/;"	n	namespace:oatpp::web::protocol::http
outgoing	../oatpp/src/oatpp/web/protocol/http/outgoing/BufferBody.cpp	/^namespace oatpp { namespace web { namespace protocol { namespace http { namespace outgoing {$/;"	n	namespace:oatpp::web::protocol::http	file:
outgoing	../oatpp/src/oatpp/web/protocol/http/outgoing/BufferBody.hpp	/^namespace oatpp { namespace web { namespace protocol { namespace http { namespace outgoing {$/;"	n	namespace:oatpp::web::protocol::http
outgoing	../oatpp/src/oatpp/web/protocol/http/outgoing/ChunkedBufferBody.cpp	/^namespace oatpp { namespace web { namespace protocol { namespace http { namespace outgoing {$/;"	n	namespace:oatpp::web::protocol::http	file:
outgoing	../oatpp/src/oatpp/web/protocol/http/outgoing/ChunkedBufferBody.hpp	/^namespace oatpp { namespace web { namespace protocol { namespace http { namespace outgoing {$/;"	n	namespace:oatpp::web::protocol::http
outgoing	../oatpp/src/oatpp/web/protocol/http/outgoing/CommunicationUtils.cpp	/^namespace oatpp { namespace web { namespace protocol { namespace http { namespace outgoing {$/;"	n	namespace:oatpp::web::protocol::http	file:
outgoing	../oatpp/src/oatpp/web/protocol/http/outgoing/CommunicationUtils.hpp	/^namespace oatpp { namespace web { namespace protocol { namespace http { namespace outgoing {$/;"	n	namespace:oatpp::web::protocol::http
outgoing	../oatpp/src/oatpp/web/protocol/http/outgoing/DtoBody.cpp	/^namespace oatpp { namespace web { namespace protocol { namespace http { namespace outgoing {$/;"	n	namespace:oatpp::web::protocol::http	file:
outgoing	../oatpp/src/oatpp/web/protocol/http/outgoing/DtoBody.hpp	/^namespace oatpp { namespace web { namespace protocol { namespace http { namespace outgoing {$/;"	n	namespace:oatpp::web::protocol::http
outgoing	../oatpp/src/oatpp/web/protocol/http/outgoing/Request.cpp	/^namespace oatpp { namespace web { namespace protocol { namespace http { namespace outgoing {$/;"	n	namespace:oatpp::web::protocol::http	file:
outgoing	../oatpp/src/oatpp/web/protocol/http/outgoing/Request.hpp	/^namespace oatpp { namespace web { namespace protocol { namespace http { namespace outgoing {$/;"	n	namespace:oatpp::web::protocol::http
outgoing	../oatpp/src/oatpp/web/protocol/http/outgoing/Response.cpp	/^namespace oatpp { namespace web { namespace protocol { namespace http { namespace outgoing {$/;"	n	namespace:oatpp::web::protocol::http	file:
outgoing	../oatpp/src/oatpp/web/protocol/http/outgoing/Response.hpp	/^namespace oatpp { namespace web { namespace protocol { namespace http { namespace outgoing {$/;"	n	namespace:oatpp::web::protocol::http
outgoing	../oatpp/src/oatpp/web/protocol/http/outgoing/ResponseFactory.cpp	/^namespace oatpp { namespace web { namespace protocol { namespace http { namespace outgoing {$/;"	n	namespace:oatpp::web::protocol::http	file:
outgoing	../oatpp/src/oatpp/web/protocol/http/outgoing/ResponseFactory.hpp	/^namespace oatpp { namespace web { namespace protocol { namespace http { namespace outgoing {$/;"	n	namespace:oatpp::web::protocol::http
p_char8	../oatpp/src/oatpp/core/base/Environment.hpp	/^typedef v_char8 *p_char8;$/;"	t	typeref:typename:v_char8 *
p_float32	../oatpp/src/oatpp/core/base/Environment.hpp	/^typedef v_float32* p_float32;$/;"	t	typeref:typename:v_float32 *
p_float64	../oatpp/src/oatpp/core/base/Environment.hpp	/^typedef v_float64 * p_float64;$/;"	t	typeref:typename:v_float64 *
p_int16	../oatpp/src/oatpp/core/base/Environment.hpp	/^typedef v_int16* p_int16;$/;"	t	typeref:typename:v_int16 *
p_int32	../oatpp/src/oatpp/core/base/Environment.hpp	/^typedef v_int32* p_int32;$/;"	t	typeref:typename:v_int32 *
p_int64	../oatpp/src/oatpp/core/base/Environment.hpp	/^typedef v_int64* p_int64;$/;"	t	typeref:typename:v_int64 *
p_int8	../oatpp/src/oatpp/core/base/Environment.hpp	/^typedef v_int8* p_int8;$/;"	t	typeref:typename:v_int8 *
p_word16	../oatpp/src/oatpp/core/base/Environment.hpp	/^typedef v_word16* p_word16;$/;"	t	typeref:typename:v_word16 *
p_word32	../oatpp/src/oatpp/core/base/Environment.hpp	/^typedef v_word32* p_word32;$/;"	t	typeref:typename:v_word32 *
p_word64	../oatpp/src/oatpp/core/base/Environment.hpp	/^typedef v_word64* p_word64;$/;"	t	typeref:typename:v_word64 *
p_word8	../oatpp/src/oatpp/core/base/Environment.hpp	/^typedef v_word8* p_word8;$/;"	t	typeref:typename:v_word8 *
params	../oatpp/src/oatpp/core/data/mapping/type/Type.hpp	/^  std::list<Type*> params;$/;"	m	class:oatpp::data::mapping::type::Type	typeref:typename:std::list<Type * >
parse	../oatpp/src/oatpp/web/protocol/http/Http.cpp	/^ContentRange ContentRange::parse(const oatpp::String& str) {$/;"	f	class:oatpp::web::protocol::http::ContentRange	typeref:typename:ContentRange
parse	../oatpp/src/oatpp/web/protocol/http/Http.cpp	/^ContentRange ContentRange::parse(oatpp::parser::Caret& caret) {$/;"	f	class:oatpp::web::protocol::http::ContentRange	typeref:typename:ContentRange
parse	../oatpp/src/oatpp/web/protocol/http/Http.cpp	/^Range Range::parse(const oatpp::String& str) {$/;"	f	class:oatpp::web::protocol::http::Range	typeref:typename:Range
parse	../oatpp/src/oatpp/web/protocol/http/Http.cpp	/^Range Range::parse(oatpp::parser::Caret& caret) {$/;"	f	class:oatpp::web::protocol::http::Range	typeref:typename:Range
parse	../oatpp/src/oatpp/web/url/mapping/Pattern.cpp	/^std::shared_ptr<Pattern> Pattern::parse(const char* data){$/;"	f	class:oatpp::web::url::mapping::Pattern	typeref:typename:std::shared_ptr<Pattern>
parse	../oatpp/src/oatpp/web/url/mapping/Pattern.cpp	/^std::shared_ptr<Pattern> Pattern::parse(const oatpp::String& data){$/;"	f	class:oatpp::web::url::mapping::Pattern	typeref:typename:std::shared_ptr<Pattern>
parse	../oatpp/src/oatpp/web/url/mapping/Pattern.cpp	/^std::shared_ptr<Pattern> Pattern::parse(p_char8 data, v_int32 size){$/;"	f	class:oatpp::web::url::mapping::Pattern	typeref:typename:std::shared_ptr<Pattern>
parse	src/hls/Playlist.cpp	/^Playlist Playlist::parse(oatpp::parser::Caret& caret) {$/;"	f	class:Playlist	typeref:typename:Playlist
parseAuthority	../oatpp/src/oatpp/network/Url.cpp	/^Url::Authority Url::Parser::parseAuthority(oatpp::parser::Caret& caret) {$/;"	f	class:oatpp::network::Url::Parser	typeref:typename:Url::Authority
parseFloat32	../oatpp/src/oatpp/core/parser/Caret.cpp	/^  v_float32 Caret::parseFloat32(){$/;"	f	class:oatpp::parser::Caret	typeref:typename:v_float32
parseFloat64	../oatpp/src/oatpp/core/parser/Caret.cpp	/^  v_float64 Caret::parseFloat64(){$/;"	f	class:oatpp::parser::Caret	typeref:typename:v_float64
parseFromFile	src/hls/Playlist.cpp	/^Playlist Playlist::parseFromFile(const char* filename) {$/;"	f	class:Playlist	typeref:typename:Playlist
parseFromString	../oatpp/src/oatpp/core/data/mapping/type/Primitive.cpp	/^  type::Boolean Boolean::parseFromString(const oatpp::String& str, bool& success) {$/;"	f	class:oatpp::data::mapping::type::__class::Boolean	typeref:typename:type::Boolean
parseFromString	../oatpp/src/oatpp/core/data/mapping/type/Primitive.cpp	/^  type::Float32 Float32::parseFromString(const oatpp::String& str, bool& success) {$/;"	f	class:oatpp::data::mapping::type::__class::Float32	typeref:typename:type::Float32
parseFromString	../oatpp/src/oatpp/core/data/mapping/type/Primitive.cpp	/^  type::Float64 Float64::parseFromString(const oatpp::String& str, bool& success) {$/;"	f	class:oatpp::data::mapping::type::__class::Float64	typeref:typename:type::Float64
parseFromString	../oatpp/src/oatpp/core/data/mapping/type/Primitive.cpp	/^  type::Int16 Int16::parseFromString(const oatpp::String& str, bool& success) {$/;"	f	class:oatpp::data::mapping::type::__class::Int16	typeref:typename:type::Int16
parseFromString	../oatpp/src/oatpp/core/data/mapping/type/Primitive.cpp	/^  type::Int32 Int32::parseFromString(const oatpp::String& str, bool& success) {$/;"	f	class:oatpp::data::mapping::type::__class::Int32	typeref:typename:type::Int32
parseFromString	../oatpp/src/oatpp/core/data/mapping/type/Primitive.cpp	/^  type::Int64 Int64::parseFromString(const oatpp::String& str, bool& success) {$/;"	f	class:oatpp::data::mapping::type::__class::Int64	typeref:typename:type::Int64
parseFromString	../oatpp/src/oatpp/core/data/mapping/type/Primitive.cpp	/^  type::Int8 Int8::parseFromString(const oatpp::String& str, bool& success) {$/;"	f	class:oatpp::data::mapping::type::__class::Int8	typeref:typename:type::Int8
parseFromString	../oatpp/src/oatpp/core/data/mapping/type/Primitive.hpp	/^    static oatpp::data::mapping::type::String parseFromString(const oatpp::data::mapping::type::/;"	f	class:oatpp::data::mapping::type::__class::String	typeref:typename:oatpp::data::mapping::type::String
parseHeaderNameLabel	../oatpp/src/oatpp/web/protocol/http/Http.cpp	/^oatpp::data::share::StringKeyLabelCI_FAST Parser::parseHeaderNameLabel(const std::shared_ptr<oat/;"	f	class:oatpp::web::protocol::http::Parser	typeref:typename:oatpp::data::share::StringKeyLabelCI_FAST
parseHeaderValueSet	../oatpp/src/oatpp/web/protocol/http/Http.cpp	/^std::unordered_set<oatpp::data::share::StringKeyLabelCI> Parser::parseHeaderValueSet(const oatpp/;"	f	class:oatpp::web::protocol::http::Parser	typeref:typename:std::unordered_set<oatpp::data::share::StringKeyLabelCI>
parseHeaders	../oatpp/src/oatpp/web/protocol/http/Http.cpp	/^void Parser::parseHeaders(Headers& headers,$/;"	f	class:oatpp::web::protocol::http::Parser	typeref:typename:void
parseHeaders	../oatpp/src/oatpp/web/protocol/http/incoming/RequestHeadersReader.cpp	/^    Action parseHeaders() {$/;"	f	class:oatpp::web::protocol::http::incoming::RequestHeadersReader::readHeadersAsync::ReaderCoroutine	typeref:typename:Action	file:
parseHeaders	../oatpp/src/oatpp/web/protocol/http/incoming/ResponseHeadersReader.cpp	/^    Action parseHeaders() {$/;"	f	class:oatpp::web::protocol::http::incoming::ResponseHeadersReader::readHeadersAsync::ReaderCoroutine	typeref:typename:Action	file:
parseInt	../oatpp/src/oatpp/core/parser/Caret.cpp	/^  long int Caret::parseInt(int base) {$/;"	f	class:oatpp::parser::Caret	typeref:typename:long int
parseOneHeader	../oatpp/src/oatpp/web/protocol/http/Http.cpp	/^void Parser::parseOneHeader(Headers& headers,$/;"	f	class:oatpp::web::protocol::http::Parser	typeref:typename:void
parsePath	../oatpp/src/oatpp/network/Url.cpp	/^oatpp::String Url::Parser::parsePath(oatpp::parser::Caret& caret) {$/;"	f	class:oatpp::network::Url::Parser	typeref:typename:oatpp::String
parsePathPattern	../oatpp/src/oatpp/web/client/ApiClient.cpp	/^ApiClient::PathPattern ApiClient::parsePathPattern(p_char8 data, v_int32 size) {$/;"	f	class:oatpp::web::client::ApiClient	typeref:typename:ApiClient::PathPattern
parsePathSegment	../oatpp/src/oatpp/web/client/ApiClient.cpp	/^ApiClient::PathSegment ApiClient::parsePathSegment(p_char8 data, v_int32 size, v_int32& position/;"	f	class:oatpp::web::client::ApiClient	typeref:typename:ApiClient::PathSegment
parseQueryParams	../oatpp/src/oatpp/network/Url.cpp	/^Url::Parameters Url::Parser::parseQueryParams(const oatpp::String& str) {$/;"	f	class:oatpp::network::Url::Parser	typeref:typename:Url::Parameters
parseQueryParams	../oatpp/src/oatpp/network/Url.cpp	/^Url::Parameters Url::Parser::parseQueryParams(oatpp::parser::Caret& caret) {$/;"	f	class:oatpp::network::Url::Parser	typeref:typename:Url::Parameters
parseQueryParamsToMap	../oatpp/src/oatpp/network/Url.cpp	/^void Url::Parser::parseQueryParamsToMap(Url::Parameters& params, const oatpp::String& str) {$/;"	f	class:oatpp::network::Url::Parser	typeref:typename:void
parseQueryParamsToMap	../oatpp/src/oatpp/network/Url.cpp	/^void Url::Parser::parseQueryParamsToMap(Url::Parameters& params, oatpp::parser::Caret& caret) {$/;"	f	class:oatpp::network::Url::Parser	typeref:typename:void
parseRequestStartingLine	../oatpp/src/oatpp/web/protocol/http/Http.cpp	/^void Parser::parseRequestStartingLine(RequestStartingLine& line,$/;"	f	class:oatpp::web::protocol::http::Parser	typeref:typename:void
parseResponseStartingLine	../oatpp/src/oatpp/web/protocol/http/Http.cpp	/^void Parser::parseResponseStartingLine(ResponseStartingLine& line,$/;"	f	class:oatpp::web::protocol::http::Parser	typeref:typename:void
parseScheme	../oatpp/src/oatpp/network/Url.cpp	/^oatpp::String Url::Parser::parseScheme(oatpp::parser::Caret& caret) {$/;"	f	class:oatpp::network::Url::Parser	typeref:typename:oatpp::String
parseString	../oatpp/src/oatpp/parser/json/Utils.cpp	/^oatpp::String Utils::parseString(ParsingCaret& caret) {$/;"	f	class:oatpp::parser::json::Utils	typeref:typename:oatpp::String
parseStringEnclosed	../oatpp/src/oatpp/core/parser/Caret.cpp	/^  Caret::Label Caret::parseStringEnclosed(char openChar, char closeChar, char escapeChar){$/;"	f	class:oatpp::parser::Caret	typeref:typename:Caret::Label
parseStringToStdString	../oatpp/src/oatpp/parser/json/Utils.cpp	/^std::string Utils::parseStringToStdString(ParsingCaret& caret){$/;"	f	class:oatpp::parser::json::Utils	typeref:typename:std::string
parseUnsignedInt	../oatpp/src/oatpp/core/parser/Caret.cpp	/^  unsigned long int Caret::parseUnsignedInt(int base) {$/;"	f	class:oatpp::parser::Caret	typeref:typename:unsigned long int
parseUrl	../oatpp/src/oatpp/network/Url.cpp	/^Url Url::Parser::parseUrl(const oatpp::String& str) {$/;"	f	class:oatpp::network::Url::Parser	typeref:typename:Url
parseUrl	../oatpp/src/oatpp/network/Url.cpp	/^Url Url::Parser::parseUrl(oatpp::parser::Caret& caret) {$/;"	f	class:oatpp::network::Url::Parser	typeref:typename:Url
parseVarSegment	../oatpp/src/oatpp/web/client/ApiClient.cpp	/^ApiClient::PathSegment ApiClient::parseVarSegment(p_char8 data, v_int32 size, v_int32& position)/;"	f	class:oatpp::web::client::ApiClient	typeref:typename:ApiClient::PathSegment
parser	../oatpp/src/oatpp/core/parser/Caret.cpp	/^namespace oatpp { namespace parser {$/;"	n	namespace:oatpp	file:
parser	../oatpp/src/oatpp/core/parser/Caret.hpp	/^namespace oatpp { namespace parser {$/;"	n	namespace:oatpp
parser	../oatpp/src/oatpp/core/parser/ParsingError.cpp	/^namespace oatpp { namespace parser {$/;"	n	namespace:oatpp	file:
parser	../oatpp/src/oatpp/core/parser/ParsingError.hpp	/^namespace oatpp { namespace parser {$/;"	n	namespace:oatpp
parser	../oatpp/src/oatpp/parser/json/Utils.cpp	/^namespace oatpp { namespace parser { namespace json{$/;"	n	namespace:oatpp	file:
parser	../oatpp/src/oatpp/parser/json/Utils.hpp	/^namespace oatpp { namespace parser { namespace json{$/;"	n	namespace:oatpp
parser	../oatpp/src/oatpp/parser/json/mapping/Deserializer.cpp	/^namespace oatpp { namespace parser { namespace json { namespace mapping {$/;"	n	namespace:oatpp	file:
parser	../oatpp/src/oatpp/parser/json/mapping/Deserializer.hpp	/^namespace oatpp { namespace parser { namespace json { namespace mapping {$/;"	n	namespace:oatpp
parser	../oatpp/src/oatpp/parser/json/mapping/ObjectMapper.cpp	/^namespace oatpp { namespace parser { namespace json { namespace mapping {$/;"	n	namespace:oatpp	file:
parser	../oatpp/src/oatpp/parser/json/mapping/ObjectMapper.hpp	/^namespace oatpp { namespace parser { namespace json { namespace mapping {$/;"	n	namespace:oatpp
parser	../oatpp/src/oatpp/parser/json/mapping/Serializer.cpp	/^namespace oatpp { namespace parser { namespace json { namespace mapping {$/;"	n	namespace:oatpp	file:
parser	../oatpp/src/oatpp/parser/json/mapping/Serializer.hpp	/^namespace oatpp { namespace parser { namespace json { namespace mapping {$/;"	n	namespace:oatpp
parser	../oatpp/test/oatpp/core/parser/CaretTest.cpp	/^namespace oatpp { namespace test { namespace parser {$/;"	n	namespace:oatpp::test	file:
parser	../oatpp/test/oatpp/core/parser/CaretTest.hpp	/^namespace oatpp { namespace test { namespace parser {$/;"	n	namespace:oatpp::test
parser	../oatpp/test/oatpp/parser/json/mapping/DTOMapperPerfTest.cpp	/^namespace oatpp { namespace test { namespace parser { namespace json { namespace mapping {$/;"	n	namespace:oatpp::test	file:
parser	../oatpp/test/oatpp/parser/json/mapping/DTOMapperPerfTest.hpp	/^namespace oatpp { namespace test { namespace parser { namespace json { namespace mapping {$/;"	n	namespace:oatpp::test
parser	../oatpp/test/oatpp/parser/json/mapping/DTOMapperTest.cpp	/^namespace oatpp { namespace test { namespace parser { namespace json { namespace mapping {$/;"	n	namespace:oatpp::test	file:
parser	../oatpp/test/oatpp/parser/json/mapping/DTOMapperTest.hpp	/^namespace oatpp { namespace test { namespace parser { namespace json { namespace mapping {$/;"	n	namespace:oatpp::test
parser	../oatpp/test/oatpp/parser/json/mapping/DeserializerTest.cpp	/^namespace oatpp { namespace test { namespace parser { namespace json { namespace mapping {$/;"	n	namespace:oatpp::test	file:
parser	../oatpp/test/oatpp/parser/json/mapping/DeserializerTest.hpp	/^namespace oatpp { namespace test { namespace parser { namespace json { namespace mapping {$/;"	n	namespace:oatpp::test
partialFlush1	../oatpp/src/oatpp/core/data/buffer/FIFOBuffer.cpp	/^    Action partialFlush1() {$/;"	f	class:oatpp::data::buffer::FIFOBuffer::flushToStreamAsync::FlushCoroutine	typeref:typename:Action	file:
partialFlush2	../oatpp/src/oatpp/core/data/buffer/FIFOBuffer.cpp	/^    Action partialFlush2() {$/;"	f	class:oatpp::data::buffer::FIFOBuffer::flushToStreamAsync::FlushCoroutine	typeref:typename:Action	file:
path	../oatpp/src/oatpp/network/Url.hpp	/^  oatpp::String path;$/;"	m	class:oatpp::network::Url	typeref:typename:oatpp::String
path	../oatpp/src/oatpp/web/protocol/http/Http.hpp	/^  oatpp::data::share::StringKeyLabel path;$/;"	m	struct:oatpp::web::protocol::http::RequestStartingLine	typeref:typename:oatpp::data::share::StringKeyLabel
path	../oatpp/src/oatpp/web/server/api/Endpoint.hpp	/^    oatpp::String path;$/;"	m	class:oatpp::web::server::api::Endpoint::Info	typeref:typename:oatpp::String
pathParams	../oatpp/src/oatpp/web/server/api/Endpoint.hpp	/^    Params pathParams;$/;"	m	class:oatpp::web::server::api::Endpoint::Info	typeref:typename:Params
pool	../oatpp/src/oatpp/core/base/memory/MemoryPool.hpp	/^    MemoryPool* pool;$/;"	m	class:oatpp::base::memory::MemoryPool::EntryHeader	typeref:typename:MemoryPool *
poolChunkSize	../oatpp/src/oatpp/core/base/memory/Allocator.hpp	/^  const v_int32 poolChunkSize;$/;"	m	class:oatpp::base::memory::AllocatorPoolInfo	typeref:typename:const v_int32
poolId	../oatpp/src/oatpp/core/base/memory/MemoryPool.hpp	/^    v_int64 poolId;$/;"	m	class:oatpp::base::memory::MemoryPool::EntryHeader	typeref:typename:v_int64
poolIdCounter	../oatpp/src/oatpp/core/base/memory/MemoryPool.cpp	/^std::atomic<v_int64> MemoryPool::poolIdCounter(0);$/;"	m	class:oatpp::base::memory::MemoryPool	typeref:typename:std::atomic<v_int64>
poolIdCounter	../oatpp/src/oatpp/core/base/memory/MemoryPool.hpp	/^  static std::atomic<v_int64> poolIdCounter;$/;"	m	class:oatpp::base::memory::MemoryPool	typeref:typename:std::atomic<v_int64>
poolName	../oatpp/src/oatpp/core/base/memory/Allocator.hpp	/^  const char* const poolName;$/;"	m	class:oatpp::base::memory::AllocatorPoolInfo	typeref:typename:const char * const
popFront	../oatpp/src/oatpp/core/collection/FastQueue.hpp	/^  T* popFront() {$/;"	f	class:oatpp::collection::FastQueue	typeref:typename:T *
popFront	../oatpp/src/oatpp/core/collection/LinkedList.hpp	/^  T popFront(){$/;"	f	class:oatpp::collection::LinkedList	typeref:typename:T
popFrontNoData	../oatpp/src/oatpp/core/collection/FastQueue.hpp	/^  void popFrontNoData() {$/;"	f	class:oatpp::collection::FastQueue	typeref:typename:void
popIOTask	../oatpp/src/oatpp/core/async/Processor.cpp	/^void Processor::popIOTask(AbstractCoroutine* coroutine) {$/;"	f	class:oatpp::async::Processor	typeref:typename:void
popTasks	../oatpp/src/oatpp/core/async/Processor.cpp	/^void Processor::popTasks() {$/;"	f	class:oatpp::async::Processor	typeref:typename:void
popTimerTask	../oatpp/src/oatpp/core/async/Processor.cpp	/^void Processor::popTimerTask(AbstractCoroutine* coroutine) {$/;"	f	class:oatpp::async::Processor	typeref:typename:void
port	../oatpp/src/oatpp/network/Url.hpp	/^    v_int32 port = -1;$/;"	m	struct:oatpp::network::Url::Authority	typeref:typename:v_int32
preinstall	../oatpp/build/Makefile	/^preinstall: all$/;"	t
preinstall	../oatpp/build/src/Makefile	/^preinstall: all$/;"	t
preinstall	../oatpp/build/test/Makefile	/^preinstall: all$/;"	t
preinstall/fast	../oatpp/build/Makefile	/^preinstall\/fast:$/;"	t
preinstall/fast	../oatpp/build/src/Makefile	/^preinstall\/fast:$/;"	t
preinstall/fast	../oatpp/build/test/Makefile	/^preinstall\/fast:$/;"	t
prepareSkipRN	../oatpp/src/oatpp/web/protocol/http/incoming/SimpleBodyDecoder.cpp	/^    void prepareSkipRN() {$/;"	f	class:oatpp::web::protocol::http::incoming::SimpleBodyDecoder::doChunkedDecodingAsync::ChunkedDecoder	typeref:typename:void	file:
prepareWrite	../oatpp/src/oatpp/core/data/stream/Stream.cpp	/^    Action prepareWrite() {$/;"	f	class:oatpp::data::stream::transferAsync::TransferCoroutine	typeref:typename:Action	file:
preparseString	../oatpp/src/oatpp/parser/json/Utils.cpp	/^p_char8 Utils::preparseString(ParsingCaret& caret, v_int32& size){$/;"	f	class:oatpp::parser::json::Utils	typeref:typename:p_char8
primitiveToCharSequence	../oatpp/src/oatpp/core/utils/ConversionUtils.hpp	/^  v_int32 primitiveToCharSequence(T value, p_char8 data, const char* pattern){$/;"	f	namespace:oatpp::utils::conversion	typeref:typename:v_int32
primitiveToStr	../oatpp/src/oatpp/core/utils/ConversionUtils.hpp	/^  oatpp::String primitiveToStr(T value, const char* pattern){$/;"	f	namespace:oatpp::utils::conversion	typeref:typename:oatpp::String
primitiveToStr	../oatpp/src/oatpp/core/utils/ConversionUtils.hpp	/^  primitiveToStr(const oatpp::data::mapping::type::PolymorphicWrapper<T>& primitive) {$/;"	f	namespace:oatpp::utils::conversion	typeref:typename:oatpp::String
printCompilationConfig	../oatpp/src/oatpp/core/base/Environment.cpp	/^void Environment::printCompilationConfig() {$/;"	f	class:oatpp::base::Environment	typeref:typename:void
printTicks	../oatpp/src/oatpp/core/base/Environment.hpp	/^    bool printTicks;$/;"	m	struct:oatpp::base::DefaultLogger::Config	typeref:typename:bool
processRequest	../oatpp/src/oatpp/web/server/HttpProcessor.cpp	/^HttpProcessor::processRequest(HttpRouter* router,$/;"	f	class:oatpp::web::server::HttpProcessor	typeref:typename:std::shared_ptr<protocol::http::outgoing::Response>
project_name	CMakeLists.txt	/^set(project_name hls-example) ## rename your project here$/;"	v
propagateError	../oatpp/src/oatpp/core/async/Coroutine.hpp	/^  Action propagateError() {$/;"	f	class:oatpp::async::AbstractCoroutine	typeref:typename:Action
properties	../oatpp/src/oatpp/core/data/mapping/type/Type.hpp	/^  const Properties* const properties;$/;"	m	class:oatpp::data::mapping::type::Type	typeref:typename:const Properties * const
protocol	../oatpp/src/oatpp/web/protocol/CommunicationError.cpp	/^namespace oatpp { namespace web { namespace protocol {$/;"	n	namespace:oatpp::web	file:
protocol	../oatpp/src/oatpp/web/protocol/CommunicationError.hpp	/^namespace oatpp { namespace web { namespace protocol {$/;"	n	namespace:oatpp::web
protocol	../oatpp/src/oatpp/web/protocol/http/Http.cpp	/^namespace oatpp { namespace web { namespace protocol { namespace http {$/;"	n	namespace:oatpp::web	file:
protocol	../oatpp/src/oatpp/web/protocol/http/Http.hpp	/^  oatpp::data::share::StringKeyLabel protocol;$/;"	m	struct:oatpp::web::protocol::http::RequestStartingLine	typeref:typename:oatpp::data::share::StringKeyLabel
protocol	../oatpp/src/oatpp/web/protocol/http/Http.hpp	/^  oatpp::data::share::StringKeyLabel protocol;$/;"	m	struct:oatpp::web::protocol::http::ResponseStartingLine	typeref:typename:oatpp::data::share::StringKeyLabel
protocol	../oatpp/src/oatpp/web/protocol/http/Http.hpp	/^namespace oatpp { namespace web { namespace protocol { namespace http {$/;"	n	namespace:oatpp::web
protocol	../oatpp/src/oatpp/web/protocol/http/incoming/BodyDecoder.cpp	/^namespace oatpp { namespace web { namespace protocol { namespace http { namespace incoming {$/;"	n	namespace:oatpp::web	file:
protocol	../oatpp/src/oatpp/web/protocol/http/incoming/BodyDecoder.hpp	/^namespace oatpp { namespace web { namespace protocol { namespace http { namespace incoming {$/;"	n	namespace:oatpp::web
protocol	../oatpp/src/oatpp/web/protocol/http/incoming/Request.cpp	/^namespace oatpp { namespace web { namespace protocol { namespace http { namespace incoming {$/;"	n	namespace:oatpp::web	file:
protocol	../oatpp/src/oatpp/web/protocol/http/incoming/Request.hpp	/^namespace oatpp { namespace web { namespace protocol { namespace http { namespace incoming {$/;"	n	namespace:oatpp::web
protocol	../oatpp/src/oatpp/web/protocol/http/incoming/RequestHeadersReader.cpp	/^namespace oatpp { namespace web { namespace protocol { namespace http { namespace incoming {$/;"	n	namespace:oatpp::web	file:
protocol	../oatpp/src/oatpp/web/protocol/http/incoming/RequestHeadersReader.hpp	/^namespace oatpp { namespace web { namespace protocol { namespace http { namespace incoming {$/;"	n	namespace:oatpp::web
protocol	../oatpp/src/oatpp/web/protocol/http/incoming/Response.cpp	/^namespace oatpp { namespace web { namespace protocol { namespace http { namespace incoming {$/;"	n	namespace:oatpp::web	file:
protocol	../oatpp/src/oatpp/web/protocol/http/incoming/Response.hpp	/^namespace oatpp { namespace web { namespace protocol { namespace http { namespace incoming {$/;"	n	namespace:oatpp::web
protocol	../oatpp/src/oatpp/web/protocol/http/incoming/ResponseHeadersReader.cpp	/^namespace oatpp { namespace web { namespace protocol { namespace http { namespace incoming {$/;"	n	namespace:oatpp::web	file:
protocol	../oatpp/src/oatpp/web/protocol/http/incoming/ResponseHeadersReader.hpp	/^namespace oatpp { namespace web { namespace protocol { namespace http { namespace incoming {$/;"	n	namespace:oatpp::web
protocol	../oatpp/src/oatpp/web/protocol/http/incoming/SimpleBodyDecoder.cpp	/^namespace oatpp { namespace web { namespace protocol { namespace http { namespace incoming {$/;"	n	namespace:oatpp::web	file:
protocol	../oatpp/src/oatpp/web/protocol/http/incoming/SimpleBodyDecoder.hpp	/^namespace oatpp { namespace web { namespace protocol { namespace http { namespace incoming {$/;"	n	namespace:oatpp::web
protocol	../oatpp/src/oatpp/web/protocol/http/outgoing/Body.hpp	/^namespace oatpp { namespace web { namespace protocol { namespace http { namespace outgoing {$/;"	n	namespace:oatpp::web
protocol	../oatpp/src/oatpp/web/protocol/http/outgoing/BufferBody.cpp	/^namespace oatpp { namespace web { namespace protocol { namespace http { namespace outgoing {$/;"	n	namespace:oatpp::web	file:
protocol	../oatpp/src/oatpp/web/protocol/http/outgoing/BufferBody.hpp	/^namespace oatpp { namespace web { namespace protocol { namespace http { namespace outgoing {$/;"	n	namespace:oatpp::web
protocol	../oatpp/src/oatpp/web/protocol/http/outgoing/ChunkedBufferBody.cpp	/^namespace oatpp { namespace web { namespace protocol { namespace http { namespace outgoing {$/;"	n	namespace:oatpp::web	file:
protocol	../oatpp/src/oatpp/web/protocol/http/outgoing/ChunkedBufferBody.hpp	/^namespace oatpp { namespace web { namespace protocol { namespace http { namespace outgoing {$/;"	n	namespace:oatpp::web
protocol	../oatpp/src/oatpp/web/protocol/http/outgoing/CommunicationUtils.cpp	/^namespace oatpp { namespace web { namespace protocol { namespace http { namespace outgoing {$/;"	n	namespace:oatpp::web	file:
protocol	../oatpp/src/oatpp/web/protocol/http/outgoing/CommunicationUtils.hpp	/^namespace oatpp { namespace web { namespace protocol { namespace http { namespace outgoing {$/;"	n	namespace:oatpp::web
protocol	../oatpp/src/oatpp/web/protocol/http/outgoing/DtoBody.cpp	/^namespace oatpp { namespace web { namespace protocol { namespace http { namespace outgoing {$/;"	n	namespace:oatpp::web	file:
protocol	../oatpp/src/oatpp/web/protocol/http/outgoing/DtoBody.hpp	/^namespace oatpp { namespace web { namespace protocol { namespace http { namespace outgoing {$/;"	n	namespace:oatpp::web
protocol	../oatpp/src/oatpp/web/protocol/http/outgoing/Request.cpp	/^namespace oatpp { namespace web { namespace protocol { namespace http { namespace outgoing {$/;"	n	namespace:oatpp::web	file:
protocol	../oatpp/src/oatpp/web/protocol/http/outgoing/Request.hpp	/^namespace oatpp { namespace web { namespace protocol { namespace http { namespace outgoing {$/;"	n	namespace:oatpp::web
protocol	../oatpp/src/oatpp/web/protocol/http/outgoing/Response.cpp	/^namespace oatpp { namespace web { namespace protocol { namespace http { namespace outgoing {$/;"	n	namespace:oatpp::web	file:
protocol	../oatpp/src/oatpp/web/protocol/http/outgoing/Response.hpp	/^namespace oatpp { namespace web { namespace protocol { namespace http { namespace outgoing {$/;"	n	namespace:oatpp::web
protocol	../oatpp/src/oatpp/web/protocol/http/outgoing/ResponseFactory.cpp	/^namespace oatpp { namespace web { namespace protocol { namespace http { namespace outgoing {$/;"	n	namespace:oatpp::web	file:
protocol	../oatpp/src/oatpp/web/protocol/http/outgoing/ResponseFactory.hpp	/^namespace oatpp { namespace web { namespace protocol { namespace http { namespace outgoing {$/;"	n	namespace:oatpp::web
pushBack	../oatpp/src/oatpp/core/async/CoroutineWaitList.cpp	/^void CoroutineWaitList::pushBack(AbstractCoroutine* coroutine) {$/;"	f	class:oatpp::async::CoroutineWaitList	typeref:typename:void
pushBack	../oatpp/src/oatpp/core/collection/FastQueue.hpp	/^  void pushBack(T* entry) {$/;"	f	class:oatpp::collection::FastQueue	typeref:typename:void
pushBack	../oatpp/src/oatpp/core/collection/LinkedList.hpp	/^  void pushBack(const T& data){$/;"	f	class:oatpp::collection::LinkedList	typeref:typename:void
pushBack	../oatpp/src/oatpp/core/data/mapping/type/Type.cpp	/^void Type::Properties::pushBack(Property* property) {$/;"	f	class:oatpp::data::mapping::type::Type::Properties	typeref:typename:void
pushBackAll	../oatpp/src/oatpp/core/collection/LinkedList.hpp	/^  void pushBackAll(const std::shared_ptr<LinkedList>& list){$/;"	f	class:oatpp::collection::LinkedList	typeref:typename:void
pushFront	../oatpp/src/oatpp/core/async/CoroutineWaitList.cpp	/^void CoroutineWaitList::pushFront(AbstractCoroutine* coroutine) {$/;"	f	class:oatpp::async::CoroutineWaitList	typeref:typename:void
pushFront	../oatpp/src/oatpp/core/collection/FastQueue.hpp	/^  void pushFront(T* entry) {$/;"	f	class:oatpp::collection::FastQueue	typeref:typename:void
pushFront	../oatpp/src/oatpp/core/collection/LinkedList.hpp	/^  void pushFront(const T& data){$/;"	f	class:oatpp::collection::LinkedList	typeref:typename:void
pushFrontAll	../oatpp/src/oatpp/core/data/mapping/type/Type.cpp	/^void Type::Properties::pushFrontAll(Properties* properties) {$/;"	f	class:oatpp::data::mapping::type::Type::Properties	typeref:typename:void
pushOneTask	../oatpp/src/oatpp/core/async/Executor.cpp	/^void Executor::SubmissionProcessor::pushOneTask(AbstractCoroutine* task) {$/;"	f	class:oatpp::async::Executor::SubmissionProcessor	typeref:typename:void
pushOneTask	../oatpp/src/oatpp/core/async/Processor.cpp	/^void Processor::pushOneTask(AbstractCoroutine* coroutine) {$/;"	f	class:oatpp::async::Processor	typeref:typename:void
pushOneTask	../oatpp/src/oatpp/core/async/worker/IOEventWorker_common.cpp	/^void IOEventWorker::pushOneTask(AbstractCoroutine *task) {$/;"	f	class:oatpp::async::worker::IOEventWorker	typeref:typename:void
pushOneTask	../oatpp/src/oatpp/core/async/worker/IOEventWorker_common.cpp	/^void IOEventWorkerForeman::pushOneTask(AbstractCoroutine* task) {$/;"	f	class:oatpp::async::worker::IOEventWorkerForeman	typeref:typename:void
pushOneTask	../oatpp/src/oatpp/core/async/worker/IOWorker.cpp	/^void IOWorker::pushOneTask(AbstractCoroutine* task) {$/;"	f	class:oatpp::async::worker::IOWorker	typeref:typename:void
pushOneTask	../oatpp/src/oatpp/core/async/worker/TimerWorker.cpp	/^void TimerWorker::pushOneTask(AbstractCoroutine* task) {$/;"	f	class:oatpp::async::worker::TimerWorker	typeref:typename:void
pushQueues	../oatpp/src/oatpp/core/async/Processor.cpp	/^void Processor::pushQueues() {$/;"	f	class:oatpp::async::Processor	typeref:typename:void
pushTasks	../oatpp/src/oatpp/core/async/Executor.cpp	/^void Executor::SubmissionProcessor::pushTasks(oatpp::collection::FastQueue<AbstractCoroutine>& t/;"	f	class:oatpp::async::Executor::SubmissionProcessor	typeref:typename:void
pushTasks	../oatpp/src/oatpp/core/async/Processor.cpp	/^void Processor::pushTasks(oatpp::collection::FastQueue<AbstractCoroutine>& tasks) {$/;"	f	class:oatpp::async::Processor	typeref:typename:void
pushTasks	../oatpp/src/oatpp/core/async/worker/IOEventWorker_common.cpp	/^void IOEventWorker::pushTasks(oatpp::collection::FastQueue<AbstractCoroutine> &tasks) {$/;"	f	class:oatpp::async::worker::IOEventWorker	typeref:typename:void
pushTasks	../oatpp/src/oatpp/core/async/worker/IOEventWorker_common.cpp	/^void IOEventWorkerForeman::pushTasks(oatpp::collection::FastQueue<AbstractCoroutine>& tasks) {$/;"	f	class:oatpp::async::worker::IOEventWorkerForeman	typeref:typename:void
pushTasks	../oatpp/src/oatpp/core/async/worker/IOWorker.cpp	/^void IOWorker::pushTasks(oatpp::collection::FastQueue<AbstractCoroutine>& tasks) {$/;"	f	class:oatpp::async::worker::IOWorker	typeref:typename:void
pushTasks	../oatpp/src/oatpp/core/async/worker/TimerWorker.cpp	/^void TimerWorker::pushTasks(oatpp::collection::FastQueue<AbstractCoroutine>& tasks) {$/;"	f	class:oatpp::async::worker::TimerWorker	typeref:typename:void
put	../oatpp/src/oatpp/core/collection/ListMap.hpp	/^  Entry* put(const K& key, const V& value){$/;"	f	class:oatpp::collection::ListMap	typeref:typename:Entry *
putHeader	../oatpp/src/oatpp/web/protocol/http/outgoing/Request.cpp	/^void Request::putHeader(const oatpp::data::share::StringKeyLabelCI_FAST& key, const oatpp::data:/;"	f	class:oatpp::web::protocol::http::outgoing::Request	typeref:typename:void
putHeader	../oatpp/src/oatpp/web/protocol/http/outgoing/Response.cpp	/^void Response::putHeader(const oatpp::data::share::StringKeyLabelCI_FAST& key, const oatpp::data/;"	f	class:oatpp::web::protocol::http::outgoing::Response	typeref:typename:void
putHeaderIfNotExists	../oatpp/src/oatpp/web/protocol/http/outgoing/Request.cpp	/^bool Request::putHeaderIfNotExists(const oatpp::data::share::StringKeyLabelCI_FAST& key, const o/;"	f	class:oatpp::web::protocol::http::outgoing::Request	typeref:typename:bool
putHeaderIfNotExists	../oatpp/src/oatpp/web/protocol/http/outgoing/Response.cpp	/^bool Response::putHeaderIfNotExists(const oatpp::data::share::StringKeyLabelCI_FAST& key, const /;"	f	class:oatpp::web::protocol::http::outgoing::Response	typeref:typename:bool
putIfNotExists	../oatpp/src/oatpp/core/collection/ListMap.hpp	/^  bool putIfNotExists(const K& key, const V& value){$/;"	f	class:oatpp::collection::ListMap	typeref:typename:bool
putLabel	../oatpp/src/oatpp/core/parser/Caret.cpp	/^  Caret::Label Caret::putLabel() {$/;"	f	class:oatpp::parser::Caret	typeref:typename:Caret::Label
putPolymorphicItem	../oatpp/src/oatpp/core/data/mapping/type/ListMap.hpp	/^  virtual void putPolymorphicItem(const AbstractObjectWrapper& key, const AbstractObjectWrapper&/;"	f	class:oatpp::data::mapping::type::ListMap	typeref:typename:void
qnxnto	../oatpp/build/CMakeFiles/3.14.5/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* qnxnto = "INFO" ":" "qnxnto[]";$/;"	v	typeref:typename:char const *
queryParams	../oatpp/src/oatpp/network/Url.hpp	/^  Parameters queryParams;$/;"	m	class:oatpp::network::Url	typeref:typename:Parameters
queryParams	../oatpp/src/oatpp/web/server/api/Endpoint.hpp	/^    Params queryParams;$/;"	m	class:oatpp::web::server::api::Endpoint::Info	typeref:typename:Params
read	../oatpp/src/oatpp/core/data/buffer/FIFOBuffer.cpp	/^data::v_io_size FIFOBuffer::read(void *data, data::v_io_size count) {$/;"	f	class:oatpp::data::buffer::FIFOBuffer	typeref:typename:data::v_io_size
read	../oatpp/src/oatpp/core/data/buffer/FIFOBuffer.cpp	/^data::v_io_size SynchronizedFIFOBuffer::read(void *data, data::v_io_size count) {$/;"	f	class:oatpp::data::buffer::SynchronizedFIFOBuffer	typeref:typename:data::v_io_size
read	../oatpp/src/oatpp/core/data/stream/Stream.hpp	/^  data::v_io_size read(void *data, data::v_io_size count) override {$/;"	f	class:oatpp::data::stream::CompoundIOStream	typeref:typename:data::v_io_size
read	../oatpp/src/oatpp/core/data/stream/StreamBufferedProxy.cpp	/^data::v_io_size InputStreamBufferedProxy::read(void *data, data::v_io_size count) {$/;"	f	class:oatpp::data::stream::InputStreamBufferedProxy	typeref:typename:data::v_io_size
read	../oatpp/src/oatpp/network/Connection.cpp	/^data::v_io_size Connection::read(void *buff, data::v_io_size count){$/;"	f	class:oatpp::network::Connection	typeref:typename:data::v_io_size
read	../oatpp/src/oatpp/network/virtual_/Pipe.cpp	/^data::v_io_size Pipe::Reader::read(void *data, data::v_io_size count) {$/;"	f	class:oatpp::network::virtual_::Pipe::Reader	typeref:typename:data::v_io_size
read	../oatpp/src/oatpp/network/virtual_/Socket.cpp	/^data::v_io_size Socket::read(void *data, data::v_io_size count) {$/;"	f	class:oatpp::network::virtual_::Socket	typeref:typename:data::v_io_size
read	../oatpp/src/oatpp/parser/json/mapping/ObjectMapper.cpp	/^oatpp::data::mapping::type::AbstractObjectWrapper ObjectMapper::read(oatpp::parser::Caret& caret/;"	f	class:oatpp::parser::json::mapping::ObjectMapper	typeref:typename:oatpp::data::mapping::type::AbstractObjectWrapper
readAndWriteToStream	../oatpp/src/oatpp/core/data/buffer/FIFOBuffer.cpp	/^data::v_io_size FIFOBuffer::readAndWriteToStream(data::stream::OutputStream& stream, data::v_io_/;"	f	class:oatpp::data::buffer::FIFOBuffer	typeref:typename:data::v_io_size
readBodyToDto	../oatpp/src/oatpp/web/protocol/http/incoming/Request.hpp	/^  typename Type::ObjectWrapper readBodyToDto(const std::shared_ptr<oatpp::data::mapping::ObjectM/;"	f	class:oatpp::web::protocol::http::incoming::Request	typeref:typename:Type::ObjectWrapper
readBodyToDto	../oatpp/src/oatpp/web/protocol/http/incoming/Request.hpp	/^  void readBodyToDto(oatpp::data::mapping::type::PolymorphicWrapper<Type>& objectWrapper,$/;"	f	class:oatpp::web::protocol::http::incoming::Request	typeref:typename:void
readBodyToDto	../oatpp/src/oatpp/web/protocol/http/incoming/Response.hpp	/^  typename Type::ObjectWrapper readBodyToDto(const std::shared_ptr<oatpp::data::mapping::ObjectM/;"	f	class:oatpp::web::protocol::http::incoming::Response	typeref:typename:Type::ObjectWrapper
readBodyToDtoAsync	../oatpp/src/oatpp/web/protocol/http/incoming/Request.hpp	/^  readBodyToDtoAsync(const std::shared_ptr<oatpp::data::mapping::ObjectMapper>& objectMapper) co/;"	f	class:oatpp::web::protocol::http::incoming::Request	typeref:typename:oatpp::async::CoroutineStarterForResult<const typename DtoType::ObjectWrapper &>
readBodyToDtoAsync	../oatpp/src/oatpp/web/protocol/http/incoming/Response.hpp	/^  readBodyToDtoAsync(const std::shared_ptr<oatpp::data::mapping::ObjectMapper>& objectMapper) co/;"	f	class:oatpp::web::protocol::http::incoming::Response	typeref:typename:oatpp::async::CoroutineStarterForResult<const typename DtoType::ObjectWrapper &>
readBodyToString	../oatpp/src/oatpp/web/protocol/http/incoming/Request.cpp	/^oatpp::String Request::readBodyToString() const {$/;"	f	class:oatpp::web::protocol::http::incoming::Request	typeref:typename:oatpp::String
readBodyToString	../oatpp/src/oatpp/web/protocol/http/incoming/Response.cpp	/^oatpp::String Response::readBodyToString() const {$/;"	f	class:oatpp::web::protocol::http::incoming::Response	typeref:typename:oatpp::String
readBodyToStringAsync	../oatpp/src/oatpp/web/protocol/http/incoming/Request.hpp	/^  oatpp::async::CoroutineStarterForResult<const oatpp::String&> readBodyToStringAsync() const {$/;"	f	class:oatpp::web::protocol::http::incoming::Request	typeref:typename:oatpp::async::CoroutineStarterForResult<const oatpp::String &>
readBodyToStringAsync	../oatpp/src/oatpp/web/protocol/http/incoming/Response.hpp	/^  oatpp::async::CoroutineStarterForResult<const oatpp::String&> readBodyToStringAsync() const {$/;"	f	class:oatpp::web::protocol::http::incoming::Response	typeref:typename:oatpp::async::CoroutineStarterForResult<const oatpp::String &>
readBooleanValue	../oatpp/src/oatpp/parser/json/mapping/Deserializer.cpp	/^Deserializer::AbstractObjectWrapper Deserializer::readBooleanValue(oatpp::parser::Caret& caret){$/;"	f	class:oatpp::parser::json::mapping::Deserializer	typeref:typename:Deserializer::AbstractObjectWrapper
readExactSizeData	../oatpp/src/oatpp/core/data/stream/Stream.cpp	/^oatpp::data::v_io_size readExactSizeData(oatpp::data::stream::InputStream* stream, void* data, d/;"	f	namespace:oatpp::data::stream	typeref:typename:oatpp::data::v_io_size
readExactSizeDataAsyncInline	../oatpp/src/oatpp/core/data/stream/Stream.cpp	/^oatpp::async::Action readExactSizeDataAsyncInline(oatpp::async::AbstractCoroutine* coroutine,$/;"	f	namespace:oatpp::data::stream	typeref:typename:oatpp::async::Action
readFloat32Value	../oatpp/src/oatpp/parser/json/mapping/Deserializer.cpp	/^Deserializer::AbstractObjectWrapper Deserializer::readFloat32Value(oatpp::parser::Caret& caret){$/;"	f	class:oatpp::parser::json::mapping::Deserializer	typeref:typename:Deserializer::AbstractObjectWrapper
readFloat64Value	../oatpp/src/oatpp/parser/json/mapping/Deserializer.cpp	/^Deserializer::AbstractObjectWrapper Deserializer::readFloat64Value(oatpp::parser::Caret& caret){$/;"	f	class:oatpp::parser::json::mapping::Deserializer	typeref:typename:Deserializer::AbstractObjectWrapper
readFromCaret	../oatpp/src/oatpp/core/data/mapping/ObjectMapper.hpp	/^  typename Class::ObjectWrapper readFromCaret(oatpp::parser::Caret& caret) const {$/;"	f	class:oatpp::data::mapping::ObjectMapper	typeref:typename:Class::ObjectWrapper
readFromStreamAndWrite	../oatpp/src/oatpp/core/data/buffer/FIFOBuffer.cpp	/^data::v_io_size FIFOBuffer::readFromStreamAndWrite(data::stream::InputStream& stream, data::v_io/;"	f	class:oatpp::data::buffer::FIFOBuffer	typeref:typename:data::v_io_size
readFromString	../oatpp/src/oatpp/core/data/mapping/ObjectMapper.hpp	/^  typename Class::ObjectWrapper readFromString(const oatpp::String& str) const {$/;"	f	class:oatpp::data::mapping::ObjectMapper	typeref:typename:Class::ObjectWrapper
readHeaders	../oatpp/src/oatpp/web/protocol/http/incoming/RequestHeadersReader.cpp	/^RequestHeadersReader::Result RequestHeadersReader::readHeaders(const std::shared_ptr<oatpp::data/;"	f	class:oatpp::web::protocol::http::incoming::RequestHeadersReader	typeref:typename:RequestHeadersReader::Result
readHeaders	../oatpp/src/oatpp/web/protocol/http/incoming/ResponseHeadersReader.cpp	/^ResponseHeadersReader::Result ResponseHeadersReader::readHeaders(const std::shared_ptr<oatpp::da/;"	f	class:oatpp::web::protocol::http::incoming::ResponseHeadersReader	typeref:typename:ResponseHeadersReader::Result
readHeadersAsync	../oatpp/src/oatpp/web/protocol/http/incoming/RequestHeadersReader.cpp	/^RequestHeadersReader::readHeadersAsync(const std::shared_ptr<oatpp::data::stream::IOStream>& con/;"	f	class:oatpp::web::protocol::http::incoming::RequestHeadersReader	typeref:typename:oatpp::async::CoroutineStarterForResult<const RequestHeadersReader::Result &>
readHeadersAsync	../oatpp/src/oatpp/web/protocol/http/incoming/ResponseHeadersReader.cpp	/^ResponseHeadersReader::readHeadersAsync(const std::shared_ptr<oatpp::data::stream::IOStream>& co/;"	f	class:oatpp::web::protocol::http::incoming::ResponseHeadersReader	typeref:typename:oatpp::async::CoroutineStarterForResult<const ResponseHeadersReader::Result &>
readHeadersSection	../oatpp/src/oatpp/web/protocol/http/incoming/RequestHeadersReader.cpp	/^data::v_io_size RequestHeadersReader::readHeadersSection(const std::shared_ptr<oatpp::data::stre/;"	f	class:oatpp::web::protocol::http::incoming::RequestHeadersReader	typeref:typename:data::v_io_size
readHeadersSection	../oatpp/src/oatpp/web/protocol/http/incoming/ResponseHeadersReader.cpp	/^data::v_io_size ResponseHeadersReader::readHeadersSection(const std::shared_ptr<oatpp::data::str/;"	f	class:oatpp::web::protocol::http::incoming::ResponseHeadersReader	typeref:typename:data::v_io_size
readInt32Value	../oatpp/src/oatpp/parser/json/mapping/Deserializer.cpp	/^Deserializer::AbstractObjectWrapper Deserializer::readInt32Value(oatpp::parser::Caret& caret){$/;"	f	class:oatpp::parser::json::mapping::Deserializer	typeref:typename:Deserializer::AbstractObjectWrapper
readInt64Value	../oatpp/src/oatpp/parser/json/mapping/Deserializer.cpp	/^Deserializer::AbstractObjectWrapper Deserializer::readInt64Value(oatpp::parser::Caret& caret){$/;"	f	class:oatpp::parser::json::mapping::Deserializer	typeref:typename:Deserializer::AbstractObjectWrapper
readLine	../oatpp/src/oatpp/web/protocol/http/incoming/SimpleBodyDecoder.cpp	/^data::v_io_size SimpleBodyDecoder::readLine(const std::shared_ptr<oatpp::data::stream::InputStre/;"	f	class:oatpp::web::protocol::http::incoming::SimpleBodyDecoder	typeref:typename:data::v_io_size
readLineChar	../oatpp/src/oatpp/web/protocol/http/incoming/SimpleBodyDecoder.cpp	/^    Action readLineChar() {$/;"	f	class:oatpp::web::protocol::http::incoming::SimpleBodyDecoder::doChunkedDecodingAsync::ChunkedDecoder	typeref:typename:Action	file:
readList	../oatpp/src/oatpp/parser/json/mapping/Deserializer.cpp	/^Deserializer::AbstractObjectWrapper Deserializer::readList(const Type* type,$/;"	f	class:oatpp::parser::json::mapping::Deserializer	typeref:typename:Deserializer::AbstractObjectWrapper
readListMap	../oatpp/src/oatpp/parser/json/mapping/Deserializer.cpp	/^Deserializer::AbstractObjectWrapper Deserializer::readListMap(const Type* type,$/;"	f	class:oatpp::parser::json::mapping::Deserializer	typeref:typename:Deserializer::AbstractObjectWrapper
readListMapValue	../oatpp/src/oatpp/parser/json/mapping/Deserializer.cpp	/^Deserializer::AbstractObjectWrapper Deserializer::readListMapValue(const Type* const type,$/;"	f	class:oatpp::parser::json::mapping::Deserializer	typeref:typename:Deserializer::AbstractObjectWrapper
readListValue	../oatpp/src/oatpp/parser/json/mapping/Deserializer.cpp	/^Deserializer::AbstractObjectWrapper Deserializer::readListValue(const Type* const type,$/;"	f	class:oatpp::parser::json::mapping::Deserializer	typeref:typename:Deserializer::AbstractObjectWrapper
readObject	../oatpp/src/oatpp/parser/json/mapping/Deserializer.cpp	/^Deserializer::AbstractObjectWrapper Deserializer::readObject(const Type* type,$/;"	f	class:oatpp::parser::json::mapping::Deserializer	typeref:typename:Deserializer::AbstractObjectWrapper
readObjectValue	../oatpp/src/oatpp/parser/json/mapping/Deserializer.cpp	/^Deserializer::AbstractObjectWrapper Deserializer::readObjectValue(const Type* const type,$/;"	f	class:oatpp::parser::json::mapping::Deserializer	typeref:typename:Deserializer::AbstractObjectWrapper
readResponse	../oatpp/src/oatpp/web/client/HttpRequestExecutor.cpp	/^    Action readResponse() {$/;"	f	class:oatpp::web::client::HttpRequestExecutor::executeAsync::ExecutorCoroutine	typeref:typename:Action	file:
readSomeDataAsyncInline	../oatpp/src/oatpp/core/data/stream/Stream.cpp	/^oatpp::async::Action readSomeDataAsyncInline(oatpp::async::AbstractCoroutine* coroutine,$/;"	f	namespace:oatpp::data::stream	typeref:typename:oatpp::async::Action
readStringValue	../oatpp/src/oatpp/parser/json/mapping/Deserializer.cpp	/^Deserializer::AbstractObjectWrapper Deserializer::readStringValue(oatpp::parser::Caret& caret){$/;"	f	class:oatpp::parser::json::mapping::Deserializer	typeref:typename:Deserializer::AbstractObjectWrapper
readSubstring	../oatpp/src/oatpp/core/data/stream/ChunkedBuffer.cpp	/^data::v_io_size ChunkedBuffer::readSubstring(void *buffer,$/;"	f	class:oatpp::data::stream::ChunkedBuffer	typeref:typename:data::v_io_size
readValue	../oatpp/src/oatpp/parser/json/mapping/Deserializer.cpp	/^Deserializer::AbstractObjectWrapper Deserializer::readValue(const Type* const type,$/;"	f	class:oatpp::parser::json::mapping::Deserializer	typeref:typename:Deserializer::AbstractObjectWrapper
readWord16	../oatpp/src/oatpp/encoding/Hex.cpp	/^v_int32 Hex::readWord16(p_char8 buffer, v_word16& value) {$/;"	f	class:oatpp::encoding::Hex	typeref:typename:v_int32
readWord32	../oatpp/src/oatpp/encoding/Hex.cpp	/^v_int32 Hex::readWord32(p_char8 buffer, v_word32& value) {$/;"	f	class:oatpp::encoding::Hex	typeref:typename:v_int32
rebuild_cache	../oatpp/build/Makefile	/^rebuild_cache:$/;"	t
rebuild_cache	../oatpp/build/src/Makefile	/^rebuild_cache:$/;"	t
rebuild_cache	../oatpp/build/test/Makefile	/^rebuild_cache:$/;"	t
rebuild_cache/fast	../oatpp/build/Makefile	/^rebuild_cache\/fast: rebuild_cache$/;"	t
rebuild_cache/fast	../oatpp/build/src/Makefile	/^rebuild_cache\/fast: rebuild_cache$/;"	t
rebuild_cache/fast	../oatpp/build/test/Makefile	/^rebuild_cache\/fast: rebuild_cache$/;"	t
registerComponent	../oatpp/src/oatpp/core/base/Environment.cpp	/^void Environment::registerComponent(const std::string& typeName, const std::string& componentNam/;"	f	class:oatpp::base::Environment	typeref:typename:void
remove	../oatpp/src/oatpp/core/collection/ListMap.hpp	/^  V remove(const K& key){$/;"	f	class:oatpp::collection::ListMap	typeref:typename:V
repeat	../oatpp/src/oatpp/core/async/Coroutine.hpp	/^  Action repeat() const {$/;"	f	class:oatpp::async::Coroutine	typeref:typename:Action
repeat	../oatpp/src/oatpp/core/async/Coroutine.hpp	/^  Action repeat() const {$/;"	f	class:oatpp::async::CoroutineWithResult	typeref:typename:Action
request	../oatpp/src/oatpp/web/server/api/ApiController.hpp	/^    std::shared_ptr<protocol::http::incoming::Request> request;$/;"	m	class:oatpp::web::server::api::ApiController::HandlerCoroutine	typeref:typename:std::shared_ptr<protocol::http::incoming::Request>
required	../oatpp/src/oatpp/web/server/api/Endpoint.hpp	/^      oatpp::Boolean required = true;$/;"	m	struct:oatpp::web::server::api::Endpoint::Info::Param	typeref:typename:oatpp::Boolean
responses	../oatpp/src/oatpp/web/server/api/Endpoint.hpp	/^    std::unordered_map<oatpp::web::protocol::http::Status, ContentTypeAndSchema> responses;$/;"	m	class:oatpp::web::server::api::Endpoint::Info	typeref:typename:std::unordered_map<oatpp::web::protocol::http::Status,ContentTypeAndSchema>
result_type	../oatpp/src/oatpp/core/data/mapping/type/Primitive.hpp	/^    typedef v_word32 result_type;$/;"	t	struct:std::hash	typeref:typename:v_word32
result_type	../oatpp/src/oatpp/core/data/share/MemoryLabel.hpp	/^    typedef v_word32 result_type;$/;"	t	struct:std::hash	typeref:typename:v_word32
result_type	../oatpp/src/oatpp/web/protocol/http/Http.hpp	/^    typedef v_word32 result_type;$/;"	t	struct:std::hash	typeref:typename:v_word32
round	../oatpp/src/oatpp/core/collection/FastQueue.hpp	/^  void round(){$/;"	f	class:oatpp::collection::FastQueue	typeref:typename:void
route	../oatpp/src/oatpp/web/server/HttpRouter.cpp	/^void HttpRouter::route(const oatpp::String& method,$/;"	f	class:oatpp::web::server::HttpRouter	typeref:typename:void
route	../oatpp/src/oatpp/web/url/mapping/Router.hpp	/^  void route(const oatpp::String& pathPattern, const std::shared_ptr<Endpoint>& endpoint) {$/;"	f	class:oatpp::web::url::mapping::Router	typeref:typename:void
run	../oatpp/src/oatpp-test/UnitTest.cpp	/^void UnitTest::run(v_int32 times) {$/;"	f	class:oatpp::test::UnitTest	typeref:typename:void
run	../oatpp/src/oatpp-test/UnitTest.hpp	/^  void run(){$/;"	f	class:oatpp::test::UnitTest	typeref:typename:void
run	../oatpp/src/oatpp-test/web/ClientServerTestRunner.hpp	/^  void run($/;"	f	class:oatpp::test::web::ClientServerTestRunner	typeref:typename:void
run	../oatpp/src/oatpp/core/async/Executor.cpp	/^void Executor::SubmissionProcessor::run() {$/;"	f	class:oatpp::async::Executor::SubmissionProcessor	typeref:typename:void
run	../oatpp/src/oatpp/core/async/worker/IOEventWorker_common.cpp	/^void IOEventWorker::run() {$/;"	f	class:oatpp::async::worker::IOEventWorker	typeref:typename:void
run	../oatpp/src/oatpp/core/async/worker/IOWorker.cpp	/^void IOWorker::run() {$/;"	f	class:oatpp::async::worker::IOWorker	typeref:typename:void
run	../oatpp/src/oatpp/core/async/worker/TimerWorker.cpp	/^void TimerWorker::run() {$/;"	f	class:oatpp::async::worker::TimerWorker	typeref:typename:void
run	../oatpp/src/oatpp/network/server/Server.cpp	/^void Server::run(){$/;"	f	class:oatpp::network::server::Server	typeref:typename:void
run	../oatpp/src/oatpp/web/server/HttpConnectionHandler.cpp	/^void HttpConnectionHandler::Task::run(){$/;"	f	class:oatpp::web::server::HttpConnectionHandler::Task	typeref:typename:void
run	../oatpp/test/oatpp/core/base/memory/PerfTest.cpp	/^    void run() {$/;"	f	class:oatpp::test::memory::__anon75c3e6ad0110::Task	typeref:typename:void	file:
run	../oatpp/test/oatpp/network/virtual_/InterfaceTest.cpp	/^    void run() {$/;"	f	class:oatpp::test::network::virtual_::__anoncbc809950110::ClientTask	typeref:typename:void	file:
run	../oatpp/test/oatpp/network/virtual_/InterfaceTest.cpp	/^    void run() {$/;"	f	class:oatpp::test::network::virtual_::__anoncbc809950110::Server	typeref:typename:void	file:
run	../oatpp/test/oatpp/network/virtual_/InterfaceTest.cpp	/^    void run() {$/;"	f	class:oatpp::test::network::virtual_::__anoncbc809950110::ServerTask	typeref:typename:void	file:
run	../oatpp/test/oatpp/network/virtual_/PipeTest.cpp	/^    void run() {$/;"	f	class:oatpp::test::network::virtual_::__anon0e2557b20110::ReaderTask	typeref:typename:void	file:
run	../oatpp/test/oatpp/network/virtual_/PipeTest.cpp	/^    void run() {$/;"	f	class:oatpp::test::network::virtual_::__anon0e2557b20110::WriterTask	typeref:typename:void	file:
run	src/App.cpp	/^void run() {$/;"	f	typeref:typename:void
runTest	../oatpp/src/oatpp-test/UnitTest.hpp	/^  static void runTest(v_int32 times){$/;"	f	class:oatpp::test::UnitTest	typeref:typename:void
runTests	../oatpp/test/oatpp/AllTestsMain.cpp	/^void runTests() {$/;"	f	namespace:__anon2a38f5e70110	typeref:typename:void
runTests	test/tests.cpp	/^void runTests() {$/;"	f	namespace:__anon08dc63f80110	typeref:typename:void
runTransfer	../oatpp/test/oatpp/network/virtual_/PipeTest.cpp	/^  void runTransfer(const std::shared_ptr<Pipe>& pipe, v_int32 chunksToTransfer, bool writeNonBlo/;"	f	namespace:oatpp::test::network::virtual_::__anon0e2557b20110	typeref:typename:void
saveToFile	../oatpp/src/oatpp/core/base/StrBuffer.cpp	/^void StrBuffer::saveToFile(const char* filename) {$/;"	f	class:oatpp::base::StrBuffer	typeref:typename:void
schema	../oatpp/src/oatpp/web/server/api/Endpoint.hpp	/^      oatpp::data::mapping::type::Type* schema;$/;"	m	struct:oatpp::web::server::api::Endpoint::Info::ContentTypeAndSchema	typeref:typename:oatpp::data::mapping::type::Type *
scheme	../oatpp/src/oatpp/network/Url.hpp	/^  oatpp::String scheme;$/;"	m	class:oatpp::network::Url	typeref:typename:oatpp::String
send	../oatpp/src/oatpp/web/protocol/http/outgoing/Request.cpp	/^void Request::send(const std::shared_ptr<data::stream::OutputStream>& stream){$/;"	f	class:oatpp::web::protocol::http::outgoing::Request	typeref:typename:void
send	../oatpp/src/oatpp/web/protocol/http/outgoing/Response.cpp	/^void Response::send(const std::shared_ptr<data::stream::OutputStream>& stream) {$/;"	f	class:oatpp::web::protocol::http::outgoing::Response	typeref:typename:void
sendAsync	../oatpp/src/oatpp/web/protocol/http/outgoing/Request.cpp	/^oatpp::async::CoroutineStarter Request::sendAsync(const std::shared_ptr<data::stream::OutputStre/;"	f	class:oatpp::web::protocol::http::outgoing::Request	typeref:typename:oatpp::async::CoroutineStarter
sendAsync	../oatpp/src/oatpp/web/protocol/http/outgoing/Response.cpp	/^oatpp::async::CoroutineStarter Response::sendAsync(const std::shared_ptr<data::stream::OutputStr/;"	f	class:oatpp::web::protocol::http::outgoing::Response	typeref:typename:oatpp::async::CoroutineStarter
serialize	../oatpp/src/oatpp/parser/json/mapping/Serializer.hpp	/^  static void serialize(const std::shared_ptr<oatpp::data::stream::ConsistentOutputStream>& stre/;"	f	class:oatpp::parser::json::mapping::Serializer	typeref:typename:void
serializerConfig	../oatpp/src/oatpp/parser/json/mapping/ObjectMapper.hpp	/^  std::shared_ptr<Serializer::Config> serializerConfig;$/;"	m	class:oatpp::parser::json::mapping::ObjectMapper	typeref:typename:std::shared_ptr<Serializer::Config>
server	../oatpp/src/oatpp/network/server/ConnectionHandler.hpp	/^namespace oatpp { namespace network { namespace server {$/;"	n	namespace:oatpp::network
server	../oatpp/src/oatpp/network/server/Server.cpp	/^namespace oatpp { namespace network { namespace server {$/;"	n	namespace:oatpp::network	file:
server	../oatpp/src/oatpp/network/server/Server.hpp	/^namespace oatpp { namespace network { namespace server {$/;"	n	namespace:oatpp::network
server	../oatpp/src/oatpp/network/server/SimpleTCPConnectionProvider.cpp	/^namespace oatpp { namespace network { namespace server {$/;"	n	namespace:oatpp::network	file:
server	../oatpp/src/oatpp/network/server/SimpleTCPConnectionProvider.hpp	/^namespace oatpp { namespace network { namespace server {$/;"	n	namespace:oatpp::network
server	../oatpp/src/oatpp/network/virtual_/server/ConnectionProvider.cpp	/^namespace oatpp { namespace network { namespace virtual_ { namespace server {$/;"	n	namespace:oatpp::network::virtual_	file:
server	../oatpp/src/oatpp/network/virtual_/server/ConnectionProvider.hpp	/^namespace oatpp { namespace network { namespace virtual_ { namespace server {$/;"	n	namespace:oatpp::network::virtual_
server	../oatpp/src/oatpp/web/server/AsyncHttpConnectionHandler.cpp	/^namespace oatpp { namespace web { namespace server {$/;"	n	namespace:oatpp::web	file:
server	../oatpp/src/oatpp/web/server/AsyncHttpConnectionHandler.hpp	/^namespace oatpp { namespace web { namespace server {$/;"	n	namespace:oatpp::web
server	../oatpp/src/oatpp/web/server/HttpConnectionHandler.cpp	/^namespace oatpp { namespace web { namespace server {$/;"	n	namespace:oatpp::web	file:
server	../oatpp/src/oatpp/web/server/HttpConnectionHandler.hpp	/^namespace oatpp { namespace web { namespace server {$/;"	n	namespace:oatpp::web
server	../oatpp/src/oatpp/web/server/HttpProcessor.cpp	/^namespace oatpp { namespace web { namespace server {$/;"	n	namespace:oatpp::web	file:
server	../oatpp/src/oatpp/web/server/HttpProcessor.hpp	/^namespace oatpp { namespace web { namespace server {$/;"	n	namespace:oatpp::web
server	../oatpp/src/oatpp/web/server/HttpRequestHandler.hpp	/^namespace oatpp { namespace web { namespace server {$/;"	n	namespace:oatpp::web
server	../oatpp/src/oatpp/web/server/HttpRouter.cpp	/^namespace oatpp { namespace web { namespace server {$/;"	n	namespace:oatpp::web	file:
server	../oatpp/src/oatpp/web/server/HttpRouter.hpp	/^namespace oatpp { namespace web { namespace server {$/;"	n	namespace:oatpp::web
server	../oatpp/src/oatpp/web/server/api/ApiController.cpp	/^namespace oatpp { namespace web { namespace server { namespace api {$/;"	n	namespace:oatpp::web	file:
server	../oatpp/src/oatpp/web/server/api/ApiController.hpp	/^namespace oatpp { namespace web { namespace server { namespace api {$/;"	n	namespace:oatpp::web
server	../oatpp/src/oatpp/web/server/api/Endpoint.cpp	/^namespace oatpp { namespace web { namespace server { namespace api {$/;"	n	namespace:oatpp::web	file:
server	../oatpp/src/oatpp/web/server/api/Endpoint.hpp	/^namespace oatpp { namespace web { namespace server { namespace api {$/;"	n	namespace:oatpp::web
server	../oatpp/src/oatpp/web/server/handler/ErrorHandler.cpp	/^namespace oatpp { namespace web { namespace server { namespace handler {$/;"	n	namespace:oatpp::web	file:
server	../oatpp/src/oatpp/web/server/handler/ErrorHandler.hpp	/^namespace oatpp { namespace web { namespace server { namespace handler {$/;"	n	namespace:oatpp::web
server	../oatpp/src/oatpp/web/server/handler/Interceptor.hpp	/^namespace oatpp { namespace web { namespace server { namespace handler {$/;"	n	namespace:oatpp::web
server	../oatpp/test/oatpp/web/server/api/ApiControllerTest.cpp	/^namespace oatpp { namespace test { namespace web { namespace server { namespace api {$/;"	n	namespace:oatpp::test::web	file:
server	../oatpp/test/oatpp/web/server/api/ApiControllerTest.hpp	/^namespace oatpp { namespace test { namespace web { namespace server { namespace api {$/;"	n	namespace:oatpp::test::web
set	../oatpp/src/oatpp/core/base/StrBuffer.cpp	/^void StrBuffer::set(const void* data, v_int32 size, bool hasOwnData) {$/;"	f	class:oatpp::base::StrBuffer	typeref:typename:void
set	../oatpp/src/oatpp/core/data/mapping/type/Type.cpp	/^void Type::Property::set(void* object, const AbstractObjectWrapper& value) {$/;"	f	class:oatpp::data::mapping::type::Type::Property	typeref:typename:void
set	../oatpp/test/oatpp/web/app/Controller.hpp	/^    auto set = oatpp::web::protocol::http::Parser::parseHeaderValueSet(valueSet, ',');$/;"	m	class:oatpp::test::web::app::Controller	typeref:typename:auto
setAndCopy	../oatpp/src/oatpp/core/base/StrBuffer.cpp	/^void StrBuffer::setAndCopy(const void* data, const void* originData, v_int32 size){$/;"	f	class:oatpp::base::StrBuffer	typeref:typename:void
setBufferPosition	../oatpp/src/oatpp/core/data/buffer/FIFOBuffer.cpp	/^void FIFOBuffer::setBufferPosition(data::v_io_size readPosition, data::v_io_size writePosition, /;"	f	class:oatpp::data::buffer::FIFOBuffer	typeref:typename:void
setBufferPosition	../oatpp/src/oatpp/core/data/buffer/FIFOBuffer.cpp	/^void SynchronizedFIFOBuffer::setBufferPosition(data::v_io_size readPosition, data::v_io_size wri/;"	f	class:oatpp::data::buffer::SynchronizedFIFOBuffer	typeref:typename:void
setBufferPosition	../oatpp/src/oatpp/core/data/stream/StreamBufferedProxy.hpp	/^  void setBufferPosition(data::v_io_size readPosition, data::v_io_size writePosition, bool canRe/;"	f	class:oatpp::data::stream::InputStreamBufferedProxy	typeref:typename:void
setBufferPosition	../oatpp/src/oatpp/core/data/stream/StreamBufferedProxy.hpp	/^  void setBufferPosition(data::v_io_size readPosition, data::v_io_size writePosition, bool canRe/;"	f	class:oatpp::data::stream::OutputStreamBufferedProxy	typeref:typename:void
setConnectionUpgradeHandler	../oatpp/src/oatpp/web/protocol/http/outgoing/Response.cpp	/^void Response::setConnectionUpgradeHandler(const std::shared_ptr<oatpp::network::server::Connect/;"	f	class:oatpp::web::protocol::http::outgoing::Response	typeref:typename:void
setConnectionUpgradeParameters	../oatpp/src/oatpp/web/protocol/http/outgoing/Response.cpp	/^void Response::setConnectionUpgradeParameters(const std::shared_ptr<const ConnectionHandler::Par/;"	f	class:oatpp::web::protocol::http::outgoing::Response	typeref:typename:void
setCoroutineEvent	../oatpp/src/oatpp/core/async/worker/IOEventWorker_epoll.cpp	/^void IOEventWorker::setCoroutineEvent(AbstractCoroutine* coroutine, int operation, p_char8 event/;"	f	class:oatpp::async::worker::IOEventWorker	typeref:typename:void
setCoroutineEvent	../oatpp/src/oatpp/core/async/worker/IOEventWorker_kqueue.cpp	/^void IOEventWorker::setCoroutineEvent(AbstractCoroutine* coroutine, int operation, p_char8 event/;"	f	class:oatpp::async::worker::IOEventWorker	typeref:typename:void
setCoroutineScheduledAction	../oatpp/src/oatpp/core/async/worker/Worker.cpp	/^void Worker::setCoroutineScheduledAction(AbstractCoroutine *CP, Action &&action) {$/;"	f	class:oatpp::async::worker::Worker	typeref:typename:void
setEndpointInfo	../oatpp/src/oatpp/web/server/api/ApiController.cpp	/^void ApiController::setEndpointInfo(const std::string& endpointName, const std::shared_ptr<Endpo/;"	f	class:oatpp::web::server::api::ApiController	typeref:typename:void
setError	../oatpp/src/oatpp/core/parser/Caret.cpp	/^  void Caret::setError(const char* errorMessage, v_int32 errorCode){$/;"	f	class:oatpp::parser::Caret	typeref:typename:void
setErrorHandler	../oatpp/src/oatpp/web/server/AsyncHttpConnectionHandler.cpp	/^void AsyncHttpConnectionHandler::setErrorHandler(const std::shared_ptr<handler::ErrorHandler>& e/;"	f	class:oatpp::web::server::AsyncHttpConnectionHandler	typeref:typename:void
setErrorHandler	../oatpp/src/oatpp/web/server/HttpConnectionHandler.cpp	/^void HttpConnectionHandler::setErrorHandler(const std::shared_ptr<handler::ErrorHandler>& errorH/;"	f	class:oatpp::web::server::HttpConnectionHandler	typeref:typename:void
setErrorHandler	../oatpp/src/oatpp/web/server/api/ApiController.cpp	/^void ApiController::setErrorHandler(const std::shared_ptr<handler::ErrorHandler>& errorHandler){$/;"	f	class:oatpp::web::server::api::ApiController	typeref:typename:void
setInputStreamIOMode	../oatpp/src/oatpp/core/data/stream/Stream.hpp	/^  void setInputStreamIOMode(IOMode ioMode) override {$/;"	f	class:oatpp::data::stream::CompoundIOStream	typeref:typename:void
setInputStreamIOMode	../oatpp/src/oatpp/core/data/stream/StreamBufferedProxy.cpp	/^void InputStreamBufferedProxy::setInputStreamIOMode(oatpp::data::stream::IOMode ioMode) {$/;"	f	class:oatpp::data::stream::InputStreamBufferedProxy	typeref:typename:void
setInputStreamIOMode	../oatpp/src/oatpp/network/Connection.cpp	/^void Connection::setInputStreamIOMode(oatpp::data::stream::IOMode ioMode) {$/;"	f	class:oatpp::network::Connection	typeref:typename:void
setInputStreamIOMode	../oatpp/src/oatpp/network/virtual_/Pipe.cpp	/^void Pipe::Reader::setInputStreamIOMode(oatpp::data::stream::IOMode ioMode) {$/;"	f	class:oatpp::network::virtual_::Pipe::Reader	typeref:typename:void
setInputStreamIOMode	../oatpp/src/oatpp/network/virtual_/Socket.cpp	/^void Socket::setInputStreamIOMode(oatpp::data::stream::IOMode ioMode) {$/;"	f	class:oatpp::network::virtual_::Socket	typeref:typename:void
setListener	../oatpp/src/oatpp/core/async/CoroutineWaitList.cpp	/^void CoroutineWaitList::setListener(Listener* listener) {$/;"	f	class:oatpp::async::CoroutineWaitList	typeref:typename:void
setLockObject	../oatpp/src/oatpp/core/async/Lock.cpp	/^void LockGuard::setLockObject(Lock* lock) {$/;"	f	class:oatpp::async::LockGuard	typeref:typename:void
setLogger	../oatpp/src/oatpp/core/base/Environment.cpp	/^void Environment::setLogger(const std::shared_ptr<Logger>& logger){$/;"	f	class:oatpp::base::Environment	typeref:typename:void
setMaxAvailableToRead	../oatpp/src/oatpp/network/virtual_/Pipe.cpp	/^void Pipe::Reader::setMaxAvailableToRead(data::v_io_size maxAvailableToRead) {$/;"	f	class:oatpp::network::virtual_::Pipe::Reader	typeref:typename:void
setMaxAvailableToReadWrtie	../oatpp/src/oatpp/network/virtual_/Socket.cpp	/^void Socket::setMaxAvailableToReadWrtie(data::v_io_size maxToRead, data::v_io_size maxToWrite) {$/;"	f	class:oatpp::network::virtual_::Socket	typeref:typename:void
setMaxAvailableToWrite	../oatpp/src/oatpp/network/virtual_/Pipe.cpp	/^void Pipe::Writer::setMaxAvailableToWrite(data::v_io_size maxAvailableToWrite) {$/;"	f	class:oatpp::network::virtual_::Pipe::Writer	typeref:typename:void
setOutputStreamIOMode	../oatpp/src/oatpp/core/data/stream/ChunkedBuffer.cpp	/^void ChunkedBuffer::setOutputStreamIOMode(IOMode ioMode) {$/;"	f	class:oatpp::data::stream::ChunkedBuffer	typeref:typename:void
setOutputStreamIOMode	../oatpp/src/oatpp/core/data/stream/Stream.hpp	/^  void setOutputStreamIOMode(IOMode ioMode) override {$/;"	f	class:oatpp::data::stream::CompoundIOStream	typeref:typename:void
setOutputStreamIOMode	../oatpp/src/oatpp/core/data/stream/StreamBufferedProxy.cpp	/^void OutputStreamBufferedProxy::setOutputStreamIOMode(oatpp::data::stream::IOMode ioMode) {$/;"	f	class:oatpp::data::stream::OutputStreamBufferedProxy	typeref:typename:void
setOutputStreamIOMode	../oatpp/src/oatpp/network/Connection.cpp	/^void Connection::setOutputStreamIOMode(oatpp::data::stream::IOMode ioMode) {$/;"	f	class:oatpp::network::Connection	typeref:typename:void
setOutputStreamIOMode	../oatpp/src/oatpp/network/virtual_/Pipe.cpp	/^void Pipe::Writer::setOutputStreamIOMode(oatpp::data::stream::IOMode ioMode) {$/;"	f	class:oatpp::network::virtual_::Pipe::Writer	typeref:typename:void
setOutputStreamIOMode	../oatpp/src/oatpp/network/virtual_/Socket.cpp	/^void Socket::setOutputStreamIOMode(oatpp::data::stream::IOMode ioMode) {$/;"	f	class:oatpp::network::virtual_::Socket	typeref:typename:void
setPosition	../oatpp/src/oatpp/core/parser/Caret.cpp	/^  void Caret::setPosition(v_int32 position){$/;"	f	class:oatpp::parser::Caret	typeref:typename:void
setProperty	../oatpp/src/oatpp/network/ConnectionProvider.cpp	/^void ConnectionProvider::setProperty(const oatpp::String& key, const oatpp::String& value) {$/;"	f	class:oatpp::network::ConnectionProvider	typeref:typename:void
setPtr	../oatpp/src/oatpp/core/data/mapping/type/Type.hpp	/^  void setPtr(const std::shared_ptr<T>& ptr) {$/;"	f	class:oatpp::data::mapping::type::PolymorphicWrapper	typeref:typename:void
setSocket	../oatpp/src/oatpp/network/virtual_/Interface.cpp	/^void Interface::ConnectionSubmission::setSocket(const std::shared_ptr<Socket>& socket) {$/;"	f	class:oatpp::network::virtual_::Interface::ConnectionSubmission	typeref:typename:void
setSocketMaxAvailableToReadWrtie	../oatpp/src/oatpp/network/virtual_/client/ConnectionProvider.hpp	/^  void setSocketMaxAvailableToReadWrtie(data::v_io_size maxToRead, data::v_io_size maxToWrite) {$/;"	f	class:oatpp::network::virtual_::client::ConnectionProvider	typeref:typename:void
setSocketMaxAvailableToReadWrtie	../oatpp/src/oatpp/network/virtual_/server/ConnectionProvider.cpp	/^void ConnectionProvider::setSocketMaxAvailableToReadWrtie(data::v_io_size maxToRead, data::v_io_/;"	f	class:oatpp::network::virtual_::server::ConnectionProvider	typeref:typename:void
setStatus	../oatpp/src/oatpp/network/server/Server.cpp	/^bool Server::setStatus(v_int32 expectedStatus, v_int32 newStatus){$/;"	f	class:oatpp::network::server::Server	typeref:typename:bool
setStatus	../oatpp/src/oatpp/network/server/Server.cpp	/^void Server::setStatus(v_int32 status){$/;"	f	class:oatpp::network::server::Server	typeref:typename:void
setStreamIOMode	../oatpp/src/oatpp/network/Connection.cpp	/^void Connection::setStreamIOMode(oatpp::data::stream::IOMode ioMode) {$/;"	f	class:oatpp::network::Connection	typeref:typename:void
setThreadAffinityToCpuRange	../oatpp/src/oatpp/core/concurrency/Thread.cpp	/^v_int32 setThreadAffinityToCpuRange(std::thread::native_handle_type nativeHandle, v_int32 firstC/;"	f	namespace:oatpp::concurrency	typeref:typename:v_int32
setThreadAffinityToOneCpu	../oatpp/src/oatpp/core/concurrency/Thread.cpp	/^v_int32 setThreadAffinityToOneCpu(std::thread::native_handle_type nativeHandle, v_int32 cpuIndex/;"	f	namespace:oatpp::concurrency	typeref:typename:v_int32
setTriggerEvent	../oatpp/src/oatpp/core/async/worker/IOEventWorker_epoll.cpp	/^void IOEventWorker::setTriggerEvent(p_char8 eventPtr) {$/;"	f	class:oatpp::async::worker::IOEventWorker	typeref:typename:void
setTriggerEvent	../oatpp/src/oatpp/core/async/worker/IOEventWorker_kqueue.cpp	/^void IOEventWorker::setTriggerEvent(p_char8 eventPtr) {$/;"	f	class:oatpp::async::worker::IOEventWorker	typeref:typename:void
setValue	../oatpp/src/oatpp/core/data/mapping/type/Primitive.hpp	/^  void setValue(const ValueType& value) {$/;"	f	class:oatpp::data::mapping::type::Primitive	typeref:typename:void
set_and_check	../oatpp/build/src/oatppConfig.cmake	/^macro(set_and_check _var _file)$/;"	m
share	../oatpp/src/oatpp/core/data/share/MemoryLabel.cpp	/^namespace oatpp { namespace data { namespace share {$/;"	n	namespace:oatpp::data	file:
share	../oatpp/src/oatpp/core/data/share/MemoryLabel.hpp	/^namespace oatpp { namespace data { namespace share {$/;"	n	namespace:oatpp::data
share	../oatpp/test/oatpp/core/data/share/MemoryLabelTest.cpp	/^namespace oatpp { namespace test { namespace core { namespace data { namespace share {$/;"	n	namespace:oatpp::test::core::data	file:
share	../oatpp/test/oatpp/core/data/share/MemoryLabelTest.hpp	/^namespace oatpp { namespace test { namespace core { namespace data { namespace share {$/;"	n	namespace:oatpp::test::core::data
size	../oatpp/src/oatpp-test/Checker.hpp	/^    v_int64 size;$/;"	m	class:oatpp::test::ThreadLocalObjectsChecker::MemoryPoolData	typeref:typename:v_int64
size	../oatpp/src/oatpp/core/data/stream/ChunkedBuffer.hpp	/^    const data::v_io_size size;$/;"	m	class:oatpp::data::stream::ChunkedBuffer::Chunk	typeref:typename:const data::v_io_size
size	../oatpp/src/oatpp/web/protocol/http/Http.hpp	/^  oatpp::data::v_io_size size;$/;"	m	class:oatpp::web::protocol::http::ContentRange	typeref:typename:oatpp::data::v_io_size
skipAllRsAndNs	../oatpp/src/oatpp/core/parser/Caret.cpp	/^  bool Caret::skipAllRsAndNs() {$/;"	f	class:oatpp::parser::Caret	typeref:typename:bool
skipBlankChars	../oatpp/src/oatpp/core/parser/Caret.cpp	/^  bool Caret::skipBlankChars(){$/;"	f	class:oatpp::parser::Caret	typeref:typename:bool
skipChar	../oatpp/src/oatpp/core/parser/Caret.cpp	/^  bool Caret::skipChar(v_char8 c) {$/;"	f	class:oatpp::parser::Caret	typeref:typename:bool
skipCharsFromSet	../oatpp/src/oatpp/core/parser/Caret.cpp	/^  bool Caret::skipCharsFromSet(const char* set){$/;"	f	class:oatpp::parser::Caret	typeref:typename:bool
skipCharsFromSet	../oatpp/src/oatpp/core/parser/Caret.cpp	/^  bool Caret::skipCharsFromSet(p_char8 set, v_int32 setSize){$/;"	f	class:oatpp::parser::Caret	typeref:typename:bool
skipRN	../oatpp/src/oatpp/core/parser/Caret.cpp	/^  bool Caret::skipRN() {$/;"	f	class:oatpp::parser::Caret	typeref:typename:bool
skipRN	../oatpp/src/oatpp/web/protocol/http/incoming/SimpleBodyDecoder.cpp	/^    Action skipRN() {$/;"	f	class:oatpp::web::protocol::http::incoming::SimpleBodyDecoder::doChunkedDecodingAsync::ChunkedDecoder	typeref:typename:Action	file:
skipRNOrN	../oatpp/src/oatpp/core/parser/Caret.cpp	/^  bool Caret::skipRNOrN() {$/;"	f	class:oatpp::parser::Caret	typeref:typename:bool
skipScope	../oatpp/src/oatpp/parser/json/mapping/Deserializer.cpp	/^void Deserializer::skipScope(oatpp::parser::Caret& caret, v_char8 charOpen, v_char8 charClose){$/;"	f	class:oatpp::parser::json::mapping::Deserializer	typeref:typename:void
skipString	../oatpp/src/oatpp/parser/json/mapping/Deserializer.cpp	/^void Deserializer::skipString(oatpp::parser::Caret& caret){$/;"	f	class:oatpp::parser::json::mapping::Deserializer	typeref:typename:void
skipToken	../oatpp/src/oatpp/parser/json/mapping/Deserializer.cpp	/^void Deserializer::skipToken(oatpp::parser::Caret& caret){$/;"	f	class:oatpp::parser::json::mapping::Deserializer	typeref:typename:void
skipValue	../oatpp/src/oatpp/parser/json/mapping/Deserializer.cpp	/^void Deserializer::skipValue(oatpp::parser::Caret& caret){$/;"	f	class:oatpp::parser::json::mapping::Deserializer	typeref:typename:void
src/CMakeFiles/oatpp-test.dir/rule	../oatpp/build/src/Makefile	/^src\/CMakeFiles\/oatpp-test.dir\/rule:$/;"	t
src/CMakeFiles/oatpp.dir/rule	../oatpp/build/src/Makefile	/^src\/CMakeFiles\/oatpp.dir\/rule:$/;"	t
start	../oatpp/src/oatpp/core/async/Coroutine.hpp	/^  static CoroutineStarter start(ConstructorArgs... args) {$/;"	f	class:oatpp::async::Coroutine	typeref:typename:CoroutineStarter
start	../oatpp/src/oatpp/core/parser/Caret.cpp	/^  void Caret::Label::start() {$/;"	f	class:oatpp::parser::Caret::Label	typeref:typename:void
start	../oatpp/src/oatpp/web/protocol/http/Http.hpp	/^  oatpp::data::v_io_size start;$/;"	m	class:oatpp::web::protocol::http::ContentRange	typeref:typename:oatpp::data::v_io_size
start	../oatpp/src/oatpp/web/protocol/http/Http.hpp	/^  oatpp::data::v_io_size start;$/;"	m	class:oatpp::web::protocol::http::Range	typeref:typename:oatpp::data::v_io_size
startForResult	../oatpp/src/oatpp/core/async/Coroutine.hpp	/^  static CoroutineStarterForResult<Args...> startForResult(ConstructorArgs... args) {$/;"	f	class:oatpp::async::CoroutineWithResult	typeref:typename:CoroutineStarterForResult<Args...>
startingLine	../oatpp/src/oatpp/web/protocol/http/incoming/RequestHeadersReader.hpp	/^    http::RequestStartingLine startingLine;$/;"	m	struct:oatpp::web::protocol::http::incoming::RequestHeadersReader::Result	typeref:typename:http::RequestStartingLine
startingLine	../oatpp/src/oatpp/web/protocol/http/incoming/ResponseHeadersReader.hpp	/^    http::ResponseStartingLine startingLine;$/;"	m	struct:oatpp::web::protocol::http::incoming::ResponseHeadersReader::Result	typeref:typename:http::ResponseStartingLine
startsWith	../oatpp/src/oatpp/core/base/StrBuffer.cpp	/^bool StrBuffer::startsWith(StrBuffer* data) const {$/;"	f	class:oatpp::base::StrBuffer	typeref:typename:bool
startsWith	../oatpp/src/oatpp/core/base/StrBuffer.cpp	/^bool StrBuffer::startsWith(const char* data) const {$/;"	f	class:oatpp::base::StrBuffer	typeref:typename:bool
startsWith	../oatpp/src/oatpp/core/base/StrBuffer.cpp	/^bool StrBuffer::startsWith(const void* data, v_int32 size) const {$/;"	f	class:oatpp::base::StrBuffer	typeref:typename:bool
static_wrapper_cast	../oatpp/src/oatpp/core/data/mapping/type/Type.hpp	/^inline PolymorphicWrapper<T> static_wrapper_cast(const F& from){$/;"	f	namespace:oatpp::data::mapping::type	typeref:typename:PolymorphicWrapper<T>
status	../oatpp/src/oatpp/web/protocol/CommunicationError.hpp	/^  Status status;$/;"	m	struct:oatpp::web::protocol::ProtocolErrorInfo	typeref:typename:Status
statusCode	../oatpp/src/oatpp/web/protocol/http/Http.hpp	/^  v_int32 statusCode;$/;"	m	struct:oatpp::web::protocol::http::ResponseStartingLine	typeref:typename:v_int32
std	../oatpp/src/oatpp/core/data/mapping/type/Primitive.hpp	/^namespace std {$/;"	n
std	../oatpp/src/oatpp/core/data/share/MemoryLabel.hpp	/^namespace std {$/;"	n
std	../oatpp/src/oatpp/web/protocol/http/Http.hpp	/^namespace std {$/;"	n
std_str	../oatpp/src/oatpp/core/base/StrBuffer.cpp	/^std::string StrBuffer::std_str() const {$/;"	f	class:oatpp::base::StrBuffer	typeref:typename:std::string
std_str	../oatpp/src/oatpp/core/data/share/MemoryLabel.hpp	/^  std::string std_str() const {$/;"	f	class:oatpp::data::share::MemoryLabel	typeref:typename:std::string
std_str	../oatpp/src/oatpp/core/parser/Caret.cpp	/^  std::string Caret::Label::std_str(){$/;"	f	class:oatpp::parser::Caret::Label	typeref:typename:std::string
stop	../oatpp/src/oatpp/core/async/Executor.cpp	/^void Executor::SubmissionProcessor::stop() {$/;"	f	class:oatpp::async::Executor::SubmissionProcessor	typeref:typename:void
stop	../oatpp/src/oatpp/core/async/Executor.cpp	/^void Executor::stop() {$/;"	f	class:oatpp::async::Executor	typeref:typename:void
stop	../oatpp/src/oatpp/core/async/Processor.cpp	/^void Processor::stop() {$/;"	f	class:oatpp::async::Processor	typeref:typename:void
stop	../oatpp/src/oatpp/core/async/worker/IOEventWorker_common.cpp	/^void IOEventWorker::stop() {$/;"	f	class:oatpp::async::worker::IOEventWorker	typeref:typename:void
stop	../oatpp/src/oatpp/core/async/worker/IOEventWorker_common.cpp	/^void IOEventWorkerForeman::stop() {$/;"	f	class:oatpp::async::worker::IOEventWorkerForeman	typeref:typename:void
stop	../oatpp/src/oatpp/core/async/worker/IOWorker.cpp	/^void IOWorker::stop() {$/;"	f	class:oatpp::async::worker::IOWorker	typeref:typename:void
stop	../oatpp/src/oatpp/core/async/worker/TimerWorker.cpp	/^void TimerWorker::stop() {$/;"	f	class:oatpp::async::worker::TimerWorker	typeref:typename:void
stop	../oatpp/src/oatpp/network/server/Server.cpp	/^void Server::stop(){$/;"	f	class:oatpp::network::server::Server	typeref:typename:void
stop	../oatpp/src/oatpp/web/server/AsyncHttpConnectionHandler.cpp	/^void AsyncHttpConnectionHandler::stop() {$/;"	f	class:oatpp::web::server::AsyncHttpConnectionHandler	typeref:typename:void
stop	../oatpp/src/oatpp/web/server/HttpConnectionHandler.cpp	/^void HttpConnectionHandler::stop() {$/;"	f	class:oatpp::web::server::HttpConnectionHandler	typeref:typename:void
strToBool	../oatpp/src/oatpp/core/utils/ConversionUtils.cpp	/^  bool strToBool(const oatpp::String& str, bool& success) {$/;"	f	namespace:oatpp::utils::conversion	typeref:typename:bool
strToFloat32	../oatpp/src/oatpp/core/utils/ConversionUtils.cpp	/^  v_float32 strToFloat32(const char* str){$/;"	f	namespace:oatpp::utils::conversion	typeref:typename:v_float32
strToFloat32	../oatpp/src/oatpp/core/utils/ConversionUtils.cpp	/^  v_float32 strToFloat32(const oatpp::String& str, bool& success) {$/;"	f	namespace:oatpp::utils::conversion	typeref:typename:v_float32
strToFloat64	../oatpp/src/oatpp/core/utils/ConversionUtils.cpp	/^  v_float64 strToFloat64(const char* str){$/;"	f	namespace:oatpp::utils::conversion	typeref:typename:v_float64
strToFloat64	../oatpp/src/oatpp/core/utils/ConversionUtils.cpp	/^  v_float64 strToFloat64(const oatpp::String& str, bool& success) {$/;"	f	namespace:oatpp::utils::conversion	typeref:typename:v_float64
strToInt32	../oatpp/src/oatpp/core/utils/ConversionUtils.cpp	/^  v_int32 strToInt32(const char* str){$/;"	f	namespace:oatpp::utils::conversion	typeref:typename:v_int32
strToInt32	../oatpp/src/oatpp/core/utils/ConversionUtils.cpp	/^  v_int32 strToInt32(const oatpp::String& str, bool& success){$/;"	f	namespace:oatpp::utils::conversion	typeref:typename:v_int32
strToInt64	../oatpp/src/oatpp/core/utils/ConversionUtils.cpp	/^  v_int64 strToInt64(const char* str){$/;"	f	namespace:oatpp::utils::conversion	typeref:typename:v_int64
strToInt64	../oatpp/src/oatpp/core/utils/ConversionUtils.cpp	/^  v_int64 strToInt64(const oatpp::String& str, bool& success){$/;"	f	namespace:oatpp::utils::conversion	typeref:typename:v_int64
stream	../oatpp/src/oatpp/core/data/stream/ChunkedBuffer.cpp	/^namespace oatpp { namespace data{ namespace stream {$/;"	n	namespace:oatpp::data	file:
stream	../oatpp/src/oatpp/core/data/stream/ChunkedBuffer.hpp	/^namespace oatpp { namespace data{ namespace stream {$/;"	n	namespace:oatpp::data
stream	../oatpp/src/oatpp/core/data/stream/Delegate.hpp	/^namespace oatpp { namespace data{ namespace stream {$/;"	n	namespace:oatpp::data
stream	../oatpp/src/oatpp/core/data/stream/Stream.cpp	/^namespace oatpp { namespace data{ namespace stream {$/;"	n	namespace:oatpp::data	file:
stream	../oatpp/src/oatpp/core/data/stream/Stream.hpp	/^namespace oatpp { namespace data{ namespace stream {$/;"	n	namespace:oatpp::data
stream	../oatpp/src/oatpp/core/data/stream/StreamBufferedProxy.cpp	/^namespace oatpp { namespace data{ namespace stream {$/;"	n	namespace:oatpp::data	file:
stream	../oatpp/src/oatpp/core/data/stream/StreamBufferedProxy.hpp	/^namespace oatpp { namespace data{ namespace stream {$/;"	n	namespace:oatpp::data
stream	../oatpp/test/oatpp/core/data/stream/ChunkedBufferTest.cpp	/^namespace oatpp { namespace test { namespace core { namespace data { namespace stream {$/;"	n	namespace:oatpp::test::core::data	file:
stream	../oatpp/test/oatpp/core/data/stream/ChunkedBufferTest.hpp	/^namespace oatpp { namespace test { namespace core { namespace data { namespace stream {$/;"	n	namespace:oatpp::test::core::data
streamBody	../oatpp/src/oatpp/web/protocol/http/incoming/Request.cpp	/^void Request::streamBody(const std::shared_ptr<oatpp::data::stream::OutputStream>& toStream) con/;"	f	class:oatpp::web::protocol::http::incoming::Request	typeref:typename:void
streamBody	../oatpp/src/oatpp/web/protocol/http/incoming/Response.cpp	/^void Response::streamBody(const std::shared_ptr<oatpp::data::stream::OutputStream>& toStream) co/;"	f	class:oatpp::web::protocol::http::incoming::Response	typeref:typename:void
streamBodyAsync	../oatpp/src/oatpp/web/protocol/http/incoming/Request.cpp	/^oatpp::async::CoroutineStarter Request::streamBodyAsync(const std::shared_ptr<oatpp::data::strea/;"	f	class:oatpp::web::protocol::http::incoming::Request	typeref:typename:oatpp::async::CoroutineStarter
streamBodyAsync	../oatpp/src/oatpp/web/protocol/http/incoming/Response.cpp	/^oatpp::async::CoroutineStarter Response::streamBodyAsync(const std::shared_ptr<oatpp::data::stre/;"	f	class:oatpp::web::protocol::http::incoming::Response	typeref:typename:oatpp::async::CoroutineStarter
suggestInputStreamAction	../oatpp/src/oatpp/core/data/stream/Stream.hpp	/^  oatpp::async::Action suggestInputStreamAction(data::v_io_size ioResult) override {$/;"	f	class:oatpp::data::stream::CompoundIOStream	typeref:typename:oatpp::async::Action
suggestInputStreamAction	../oatpp/src/oatpp/core/data/stream/StreamBufferedProxy.cpp	/^oatpp::async::Action InputStreamBufferedProxy::suggestInputStreamAction(data::v_io_size ioResult/;"	f	class:oatpp::data::stream::InputStreamBufferedProxy	typeref:typename:oatpp::async::Action
suggestInputStreamAction	../oatpp/src/oatpp/network/Connection.cpp	/^oatpp::async::Action Connection::suggestInputStreamAction(data::v_io_size ioResult) {$/;"	f	class:oatpp::network::Connection	typeref:typename:oatpp::async::Action
suggestInputStreamAction	../oatpp/src/oatpp/network/virtual_/Pipe.cpp	/^oatpp::async::Action Pipe::Reader::suggestInputStreamAction(data::v_io_size ioResult) {$/;"	f	class:oatpp::network::virtual_::Pipe::Reader	typeref:typename:oatpp::async::Action
suggestInputStreamAction	../oatpp/src/oatpp/network/virtual_/Socket.cpp	/^oatpp::async::Action Socket::suggestInputStreamAction(data::v_io_size ioResult) {$/;"	f	class:oatpp::network::virtual_::Socket	typeref:typename:oatpp::async::Action
suggestOutputStreamAction	../oatpp/src/oatpp/core/data/stream/Stream.hpp	/^  oatpp::async::Action suggestOutputStreamAction(data::v_io_size ioResult) override {$/;"	f	class:oatpp::data::stream::CompoundIOStream	typeref:typename:oatpp::async::Action
suggestOutputStreamAction	../oatpp/src/oatpp/core/data/stream/Stream.hpp	/^  oatpp::async::Action suggestOutputStreamAction(data::v_io_size ioResult) override {$/;"	f	class:oatpp::data::stream::ConsistentOutputStream	typeref:typename:oatpp::async::Action
suggestOutputStreamAction	../oatpp/src/oatpp/core/data/stream/StreamBufferedProxy.cpp	/^oatpp::async::Action OutputStreamBufferedProxy::suggestOutputStreamAction(data::v_io_size ioResu/;"	f	class:oatpp::data::stream::OutputStreamBufferedProxy	typeref:typename:oatpp::async::Action
suggestOutputStreamAction	../oatpp/src/oatpp/network/Connection.cpp	/^oatpp::async::Action Connection::suggestOutputStreamAction(data::v_io_size ioResult) {$/;"	f	class:oatpp::network::Connection	typeref:typename:oatpp::async::Action
suggestOutputStreamAction	../oatpp/src/oatpp/network/virtual_/Pipe.cpp	/^oatpp::async::Action Pipe::Writer::suggestOutputStreamAction(data::v_io_size ioResult) {$/;"	f	class:oatpp::network::virtual_::Pipe::Writer	typeref:typename:oatpp::async::Action
suggestOutputStreamAction	../oatpp/src/oatpp/network/virtual_/Socket.cpp	/^oatpp::async::Action Socket::suggestOutputStreamAction(data::v_io_size ioResult) {$/;"	f	class:oatpp::network::virtual_::Socket	typeref:typename:oatpp::async::Action
summary	../oatpp/src/oatpp/web/server/api/Endpoint.hpp	/^    oatpp::String summary;$/;"	m	class:oatpp::web::server::api::Endpoint::Info	typeref:typename:oatpp::String
synchronize	../oatpp/src/oatpp/core/async/Lock.cpp	/^CoroutineStarter synchronize(oatpp::async::Lock *lock, CoroutineStarter&& starter) {$/;"	f	namespace:oatpp::async	typeref:typename:CoroutineStarter
takeAction	../oatpp/src/oatpp/core/async/Coroutine.cpp	/^Action AbstractCoroutine::takeAction(Action&& action) {$/;"	f	class:oatpp::async::AbstractCoroutine	typeref:typename:Action
test	../oatpp/build/Makefile	/^test:$/;"	t
test	../oatpp/build/src/Makefile	/^test:$/;"	t
test	../oatpp/build/test/Makefile	/^test:$/;"	t
test	../oatpp/src/oatpp-test/Checker.cpp	/^namespace oatpp { namespace test {$/;"	n	namespace:oatpp	file:
test	../oatpp/src/oatpp-test/Checker.hpp	/^namespace oatpp { namespace test {$/;"	n	namespace:oatpp
test	../oatpp/src/oatpp-test/UnitTest.cpp	/^namespace oatpp { namespace test {$/;"	n	namespace:oatpp	file:
test	../oatpp/src/oatpp-test/UnitTest.hpp	/^namespace oatpp { namespace test {$/;"	n	namespace:oatpp
test	../oatpp/src/oatpp-test/web/ClientServerTestRunner.hpp	/^namespace oatpp { namespace test { namespace web {$/;"	n	namespace:oatpp
test	../oatpp/test/oatpp/core/async/LockTest.cpp	/^namespace oatpp { namespace test { namespace async {$/;"	n	namespace:oatpp	file:
test	../oatpp/test/oatpp/core/async/LockTest.hpp	/^namespace oatpp { namespace test { namespace async {$/;"	n	namespace:oatpp
test	../oatpp/test/oatpp/core/base/CommandLineArgumentsTest.cpp	/^namespace oatpp { namespace test { namespace base {$/;"	n	namespace:oatpp	file:
test	../oatpp/test/oatpp/core/base/CommandLineArgumentsTest.hpp	/^namespace oatpp { namespace test { namespace base {$/;"	n	namespace:oatpp
test	../oatpp/test/oatpp/core/base/RegRuleTest.cpp	/^namespace oatpp { namespace test { namespace base {$/;"	n	namespace:oatpp	file:
test	../oatpp/test/oatpp/core/base/RegRuleTest.hpp	/^namespace oatpp { namespace test { namespace base {$/;"	n	namespace:oatpp
test	../oatpp/test/oatpp/core/base/collection/LinkedListTest.cpp	/^namespace oatpp { namespace test { namespace collection {$/;"	n	namespace:oatpp	file:
test	../oatpp/test/oatpp/core/base/collection/LinkedListTest.hpp	/^namespace oatpp { namespace test { namespace collection {$/;"	n	namespace:oatpp
test	../oatpp/test/oatpp/core/base/memory/MemoryPoolTest.cpp	/^namespace oatpp { namespace test { namespace memory {$/;"	n	namespace:oatpp	file:
test	../oatpp/test/oatpp/core/base/memory/MemoryPoolTest.hpp	/^namespace oatpp { namespace test { namespace memory {$/;"	n	namespace:oatpp
test	../oatpp/test/oatpp/core/base/memory/PerfTest.cpp	/^namespace oatpp { namespace test { namespace memory {$/;"	n	namespace:oatpp	file:
test	../oatpp/test/oatpp/core/base/memory/PerfTest.hpp	/^namespace oatpp { namespace test { namespace memory {$/;"	n	namespace:oatpp
test	../oatpp/test/oatpp/core/data/mapping/type/TypeTest.cpp	/^namespace oatpp { namespace test { namespace core { namespace data { namespace mapping { namespa/;"	n	namespace:oatpp	file:
test	../oatpp/test/oatpp/core/data/mapping/type/TypeTest.hpp	/^namespace oatpp { namespace test { namespace core { namespace data { namespace mapping { namespa/;"	n	namespace:oatpp
test	../oatpp/test/oatpp/core/data/share/MemoryLabelTest.cpp	/^namespace oatpp { namespace test { namespace core { namespace data { namespace share {$/;"	n	namespace:oatpp	file:
test	../oatpp/test/oatpp/core/data/share/MemoryLabelTest.hpp	/^namespace oatpp { namespace test { namespace core { namespace data { namespace share {$/;"	n	namespace:oatpp
test	../oatpp/test/oatpp/core/data/stream/ChunkedBufferTest.cpp	/^namespace oatpp { namespace test { namespace core { namespace data { namespace stream {$/;"	n	namespace:oatpp	file:
test	../oatpp/test/oatpp/core/data/stream/ChunkedBufferTest.hpp	/^namespace oatpp { namespace test { namespace core { namespace data { namespace stream {$/;"	n	namespace:oatpp
test	../oatpp/test/oatpp/core/parser/CaretTest.cpp	/^namespace oatpp { namespace test { namespace parser {$/;"	n	namespace:oatpp	file:
test	../oatpp/test/oatpp/core/parser/CaretTest.hpp	/^namespace oatpp { namespace test { namespace parser {$/;"	n	namespace:oatpp
test	../oatpp/test/oatpp/encoding/Base64Test.cpp	/^namespace oatpp { namespace test { namespace encoding {$/;"	n	namespace:oatpp	file:
test	../oatpp/test/oatpp/encoding/Base64Test.hpp	/^namespace oatpp { namespace test { namespace encoding {$/;"	n	namespace:oatpp
test	../oatpp/test/oatpp/encoding/UnicodeTest.cpp	/^namespace oatpp { namespace test { namespace encoding {$/;"	n	namespace:oatpp	file:
test	../oatpp/test/oatpp/encoding/UnicodeTest.hpp	/^namespace oatpp { namespace test { namespace encoding {$/;"	n	namespace:oatpp
test	../oatpp/test/oatpp/network/UrlTest.cpp	/^namespace oatpp { namespace test { namespace network {$/;"	n	namespace:oatpp	file:
test	../oatpp/test/oatpp/network/UrlTest.hpp	/^namespace oatpp { namespace test { namespace network {$/;"	n	namespace:oatpp
test	../oatpp/test/oatpp/network/virtual_/InterfaceTest.cpp	/^namespace oatpp { namespace test { namespace network { namespace virtual_ {$/;"	n	namespace:oatpp	file:
test	../oatpp/test/oatpp/network/virtual_/InterfaceTest.hpp	/^namespace oatpp { namespace test { namespace network { namespace virtual_ {$/;"	n	namespace:oatpp
test	../oatpp/test/oatpp/network/virtual_/PipeTest.cpp	/^namespace oatpp { namespace test { namespace network { namespace virtual_ {$/;"	n	namespace:oatpp	file:
test	../oatpp/test/oatpp/network/virtual_/PipeTest.hpp	/^namespace oatpp { namespace test { namespace network { namespace virtual_ {$/;"	n	namespace:oatpp
test	../oatpp/test/oatpp/parser/json/mapping/DTOMapperPerfTest.cpp	/^namespace oatpp { namespace test { namespace parser { namespace json { namespace mapping {$/;"	n	namespace:oatpp	file:
test	../oatpp/test/oatpp/parser/json/mapping/DTOMapperPerfTest.hpp	/^namespace oatpp { namespace test { namespace parser { namespace json { namespace mapping {$/;"	n	namespace:oatpp
test	../oatpp/test/oatpp/parser/json/mapping/DTOMapperTest.cpp	/^namespace oatpp { namespace test { namespace parser { namespace json { namespace mapping {$/;"	n	namespace:oatpp	file:
test	../oatpp/test/oatpp/parser/json/mapping/DTOMapperTest.hpp	/^namespace oatpp { namespace test { namespace parser { namespace json { namespace mapping {$/;"	n	namespace:oatpp
test	../oatpp/test/oatpp/parser/json/mapping/DeserializerTest.cpp	/^namespace oatpp { namespace test { namespace parser { namespace json { namespace mapping {$/;"	n	namespace:oatpp	file:
test	../oatpp/test/oatpp/parser/json/mapping/DeserializerTest.hpp	/^namespace oatpp { namespace test { namespace parser { namespace json { namespace mapping {$/;"	n	namespace:oatpp
test	../oatpp/test/oatpp/web/FullAsyncClientTest.cpp	/^namespace oatpp { namespace test { namespace web {$/;"	n	namespace:oatpp	file:
test	../oatpp/test/oatpp/web/FullAsyncClientTest.hpp	/^namespace oatpp { namespace test { namespace web {$/;"	n	namespace:oatpp
test	../oatpp/test/oatpp/web/FullAsyncTest.cpp	/^namespace oatpp { namespace test { namespace web {$/;"	n	namespace:oatpp	file:
test	../oatpp/test/oatpp/web/FullAsyncTest.hpp	/^namespace oatpp { namespace test { namespace web {$/;"	n	namespace:oatpp
test	../oatpp/test/oatpp/web/FullTest.cpp	/^namespace oatpp { namespace test { namespace web {$/;"	n	namespace:oatpp	file:
test	../oatpp/test/oatpp/web/FullTest.hpp	/^namespace oatpp { namespace test { namespace web {$/;"	n	namespace:oatpp
test	../oatpp/test/oatpp/web/app/Client.hpp	/^namespace oatpp { namespace test { namespace web { namespace app {$/;"	n	namespace:oatpp
test	../oatpp/test/oatpp/web/app/Controller.hpp	/^namespace oatpp { namespace test { namespace web { namespace app {$/;"	n	namespace:oatpp
test	../oatpp/test/oatpp/web/app/ControllerAsync.hpp	/^namespace oatpp { namespace test { namespace web { namespace app {$/;"	n	namespace:oatpp
test	../oatpp/test/oatpp/web/app/DTOs.hpp	/^namespace oatpp { namespace test { namespace web { namespace app {$/;"	n	namespace:oatpp
test	../oatpp/test/oatpp/web/server/api/ApiControllerTest.cpp	/^namespace oatpp { namespace test { namespace web { namespace server { namespace api {$/;"	n	namespace:oatpp	file:
test	../oatpp/test/oatpp/web/server/api/ApiControllerTest.hpp	/^namespace oatpp { namespace test { namespace web { namespace server { namespace api {$/;"	n	namespace:oatpp
test/CMakeFiles/oatppAllTests.dir/rule	../oatpp/build/test/Makefile	/^test\/CMakeFiles\/oatppAllTests.dir\/rule:$/;"	t
test/fast	../oatpp/build/Makefile	/^test\/fast: test$/;"	t
test/fast	../oatpp/build/src/Makefile	/^test\/fast: test$/;"	t
test/fast	../oatpp/build/test/Makefile	/^test\/fast: test$/;"	t
testListPerformance	../oatpp/test/oatpp/core/base/collection/LinkedListTest.cpp	/^void testListPerformance(v_int32 iterationsCount){$/;"	f	namespace:oatpp::test::collection::__anondfade8e60110	typeref:typename:void
testMethod	../oatpp/test/oatpp/core/async/LockTest.cpp	/^void testMethod(char symbol, Buff *buff, oatpp::async::Lock *lock) {$/;"	f	namespace:oatpp::test::async::__anonf33831840110	typeref:typename:void
testPool	../oatpp/test/oatpp/core/base/memory/MemoryPoolTest.cpp	/^void testPool(v_int32 objectsNumber, v_int32 garbageNumber, v_int32 chunkSize){$/;"	f	namespace:oatpp::test::memory::__anonf07292930110	typeref:typename:void
testStdListPerformance	../oatpp/test/oatpp/core/base/collection/LinkedListTest.cpp	/^void testStdListPerformance(v_int32 iterationsCount){$/;"	f	namespace:oatpp::test::collection::__anondfade8e60110	typeref:typename:void
testStdNew	../oatpp/test/oatpp/core/base/memory/MemoryPoolTest.cpp	/^void testStdNew(v_int32 objectsNumber, v_int32 garbageNumber, v_int32 chunkSize){$/;"	f	namespace:oatpp::test::memory::__anonf07292930110	typeref:typename:void
test_memory_MemoryPoolTest_hpp	../oatpp/test/oatpp/core/base/memory/MemoryPoolTest.hpp	/^#define test_memory_MemoryPoolTest_hpp$/;"	d
text	../oatpp/src/oatpp/web/client/ApiClient.hpp	/^    const std::string text;$/;"	m	class:oatpp::web::client::ApiClient::PathSegment	typeref:typename:const std::string
text	../oatpp/src/oatpp/web/url/mapping/Pattern.hpp	/^    const oatpp::String text;$/;"	m	class:oatpp::web::url::mapping::Pattern::Part	typeref:typename:const oatpp::String
throwOnUnknownTypes	../oatpp/src/oatpp/parser/json/mapping/Serializer.hpp	/^    bool throwOnUnknownTypes = true;$/;"	m	class:oatpp::parser::json::mapping::Serializer::Config	typeref:typename:bool
timeFormat	../oatpp/src/oatpp/core/base/Environment.hpp	/^    const char* timeFormat;$/;"	m	struct:oatpp::base::DefaultLogger::Config	typeref:typename:const char *
timePointMicroseconds	../oatpp/src/oatpp/core/async/Coroutine.hpp	/^    v_int64 timePointMicroseconds;$/;"	m	union:oatpp::async::Action::Data	typeref:typename:v_int64
toLowerCase	../oatpp/src/oatpp/core/base/StrBuffer.cpp	/^std::shared_ptr<StrBuffer> StrBuffer::toLowerCase() const {$/;"	f	class:oatpp::base::StrBuffer	typeref:typename:std::shared_ptr<StrBuffer>
toString	../oatpp/src/oatpp/core/data/share/MemoryLabel.hpp	/^  oatpp::String toString() const {$/;"	f	class:oatpp::data::share::MemoryLabel	typeref:typename:oatpp::String
toString	../oatpp/src/oatpp/core/data/stream/ChunkedBuffer.hpp	/^  oatpp::String toString() {$/;"	f	class:oatpp::data::stream::ChunkedBuffer	typeref:typename:oatpp::String
toString	../oatpp/src/oatpp/core/parser/Caret.cpp	/^  oatpp::String Caret::Label::toString(){$/;"	f	class:oatpp::parser::Caret::Label	typeref:typename:oatpp::String
toString	../oatpp/src/oatpp/core/parser/Caret.cpp	/^  oatpp::String Caret::Label::toString(bool saveAsOwnData){$/;"	f	class:oatpp::parser::Caret::Label	typeref:typename:oatpp::String
toString	../oatpp/src/oatpp/web/protocol/http/Http.cpp	/^oatpp::String ContentRange::toString() const {$/;"	f	class:oatpp::web::protocol::http::ContentRange	typeref:typename:oatpp::String
toString	../oatpp/src/oatpp/web/protocol/http/Http.cpp	/^oatpp::String Range::toString() const {$/;"	f	class:oatpp::web::protocol::http::Range	typeref:typename:oatpp::String
toString	../oatpp/src/oatpp/web/server/api/Endpoint.cpp	/^oatpp::String Endpoint::Info::toString() {$/;"	f	class:oatpp::web::server::api::Endpoint::Info	typeref:typename:oatpp::String
toString	../oatpp/src/oatpp/web/url/mapping/Pattern.cpp	/^oatpp::String Pattern::toString() {$/;"	f	class:oatpp::web::url::mapping::Pattern	typeref:typename:oatpp::String
toUpperCase	../oatpp/src/oatpp/core/base/StrBuffer.cpp	/^std::shared_ptr<StrBuffer> StrBuffer::toUpperCase() const {$/;"	f	class:oatpp::base::StrBuffer	typeref:typename:std::shared_ptr<StrBuffer>
transfer	../oatpp/src/oatpp/core/data/stream/Stream.cpp	/^oatpp::data::v_io_size transfer(const std::shared_ptr<InputStream>& fromStream,$/;"	f	namespace:oatpp::data::stream	typeref:typename:oatpp::data::v_io_size
transferAsync	../oatpp/src/oatpp/core/data/stream/Stream.cpp	/^oatpp::async::CoroutineStarter transferAsync(const std::shared_ptr<InputStream>& fromStream,$/;"	f	namespace:oatpp::data::stream	typeref:typename:oatpp::async::CoroutineStarter
triggerWakeup	../oatpp/src/oatpp/core/async/worker/IOEventWorker_epoll.cpp	/^void IOEventWorker::triggerWakeup() {$/;"	f	class:oatpp::async::worker::IOEventWorker	typeref:typename:void
triggerWakeup	../oatpp/src/oatpp/core/async/worker/IOEventWorker_kqueue.cpp	/^void IOEventWorker::triggerWakeup() {$/;"	f	class:oatpp::async::worker::IOEventWorker	typeref:typename:void
try_lock	../oatpp/src/oatpp/core/async/Lock.cpp	/^bool Lock::try_lock() {$/;"	f	class:oatpp::async::Lock	typeref:typename:bool
try_lock	../oatpp/src/oatpp/core/concurrency/SpinLock.cpp	/^bool SpinLock::try_lock() {$/;"	f	class:oatpp::concurrency::SpinLock	typeref:typename:bool
type	../oatpp/src/oatpp/core/async/Processor.hpp	/^    typedef IndexSequence<S...> type;$/;"	t	struct:oatpp::async::Processor::SequenceGenerator	typeref:typename:IndexSequence<S...>
type	../oatpp/src/oatpp/core/data/mapping/type/List.cpp	/^namespace oatpp { namespace data { namespace mapping { namespace type {$/;"	n	namespace:oatpp::data::mapping	file:
type	../oatpp/src/oatpp/core/data/mapping/type/List.hpp	/^namespace oatpp { namespace data { namespace mapping { namespace type {$/;"	n	namespace:oatpp::data::mapping
type	../oatpp/src/oatpp/core/data/mapping/type/ListMap.cpp	/^namespace oatpp { namespace data { namespace mapping { namespace type {$/;"	n	namespace:oatpp::data::mapping	file:
type	../oatpp/src/oatpp/core/data/mapping/type/ListMap.hpp	/^namespace oatpp { namespace data { namespace mapping { namespace type {$/;"	n	namespace:oatpp::data::mapping
type	../oatpp/src/oatpp/core/data/mapping/type/Object.cpp	/^namespace oatpp { namespace data { namespace mapping { namespace type {$/;"	n	namespace:oatpp::data::mapping	file:
type	../oatpp/src/oatpp/core/data/mapping/type/Object.hpp	/^namespace oatpp { namespace data { namespace mapping { namespace type {$/;"	n	namespace:oatpp::data::mapping
type	../oatpp/src/oatpp/core/data/mapping/type/Primitive.cpp	/^namespace oatpp { namespace data { namespace mapping { namespace type {$/;"	n	namespace:oatpp::data::mapping	file:
type	../oatpp/src/oatpp/core/data/mapping/type/Primitive.hpp	/^namespace oatpp { namespace data { namespace mapping { namespace type {$/;"	n	namespace:oatpp::data::mapping
type	../oatpp/src/oatpp/core/data/mapping/type/Type.cpp	/^namespace oatpp { namespace data { namespace mapping { namespace type {$/;"	n	namespace:oatpp::data::mapping	file:
type	../oatpp/src/oatpp/core/data/mapping/type/Type.hpp	/^    const Type* const type;$/;"	m	class:oatpp::data::mapping::type::Type::Property	typeref:typename:const Type * const
type	../oatpp/src/oatpp/core/data/mapping/type/Type.hpp	/^namespace oatpp { namespace data { namespace mapping { namespace type {$/;"	n	namespace:oatpp::data::mapping
type	../oatpp/src/oatpp/web/client/ApiClient.hpp	/^    const v_int32 type;$/;"	m	class:oatpp::web::client::ApiClient::PathSegment	typeref:typename:const v_int32
type	../oatpp/src/oatpp/web/server/api/Endpoint.hpp	/^      oatpp::data::mapping::type::Type* type;$/;"	m	struct:oatpp::web::server::api::Endpoint::Info::Param	typeref:typename:oatpp::data::mapping::type::Type *
type	../oatpp/test/oatpp/core/data/mapping/type/TypeTest.cpp	/^namespace oatpp { namespace test { namespace core { namespace data { namespace mapping { namespa/;"	n	namespace:oatpp::test::core::data::mapping	file:
type	../oatpp/test/oatpp/core/data/mapping/type/TypeTest.hpp	/^namespace oatpp { namespace test { namespace core { namespace data { namespace mapping { namespa/;"	n	namespace:oatpp::test::core::data::mapping
unescapeString	../oatpp/src/oatpp/parser/json/Utils.cpp	/^oatpp::String Utils::unescapeString(p_char8 data, v_int32 size, v_int32& errorCode, v_int32& err/;"	f	class:oatpp::parser::json::Utils	typeref:typename:oatpp::String
unescapeStringToBuffer	../oatpp/src/oatpp/parser/json/Utils.cpp	/^void Utils::unescapeStringToBuffer(p_char8 data, v_int32 size, p_char8 resultData){$/;"	f	class:oatpp::parser::json::Utils	typeref:typename:void
unescapeStringToStdString	../oatpp/src/oatpp/parser/json/Utils.cpp	/^std::string Utils::unescapeStringToStdString(p_char8 data, v_int32 size, v_int32& errorCode, v_i/;"	f	class:oatpp::parser::json::Utils	typeref:typename:std::string
units	../oatpp/src/oatpp/web/protocol/http/Http.hpp	/^  oatpp::String units;$/;"	m	class:oatpp::web::protocol::http::ContentRange	typeref:typename:oatpp::String
units	../oatpp/src/oatpp/web/protocol/http/Http.hpp	/^  oatpp::String units;$/;"	m	class:oatpp::web::protocol::http::Range	typeref:typename:oatpp::String
unlock	../oatpp/src/oatpp/core/async/Lock.cpp	/^void Lock::unlock() {$/;"	f	class:oatpp::async::Lock	typeref:typename:void
unlock	../oatpp/src/oatpp/core/async/Lock.cpp	/^void LockGuard::unlock() {$/;"	f	class:oatpp::async::LockGuard	typeref:typename:void
unlock	../oatpp/src/oatpp/core/concurrency/SpinLock.cpp	/^void SpinLock::unlock() {$/;"	f	class:oatpp::concurrency::SpinLock	typeref:typename:void
unregisterComponent	../oatpp/src/oatpp/core/base/Environment.cpp	/^void Environment::unregisterComponent(const std::string& typeName, const std::string& componentN/;"	f	class:oatpp::base::Environment	typeref:typename:void
upperCase	../oatpp/src/oatpp/core/base/StrBuffer.cpp	/^void StrBuffer::upperCase(const void* data, v_int32 size) {$/;"	f	class:oatpp::base::StrBuffer	typeref:typename:void
uri	src/hls/Playlist.hpp	/^    oatpp::String uri;$/;"	m	struct:Playlist::RecordMarker	typeref:typename:oatpp::String
url	../oatpp/src/oatpp/web/url/mapping/Pattern.cpp	/^namespace oatpp { namespace web { namespace url { namespace mapping {$/;"	n	namespace:oatpp::web	file:
url	../oatpp/src/oatpp/web/url/mapping/Pattern.hpp	/^namespace oatpp { namespace web { namespace url { namespace mapping {$/;"	n	namespace:oatpp::web
url	../oatpp/src/oatpp/web/url/mapping/Router.hpp	/^namespace oatpp { namespace web { namespace url { namespace mapping {$/;"	n	namespace:oatpp::web
userInfo	../oatpp/src/oatpp/network/Url.hpp	/^    oatpp::String userInfo;$/;"	m	struct:oatpp::network::Url::Authority	typeref:typename:oatpp::String
utf16SurrogatePairToCode	../oatpp/src/oatpp/encoding/Unicode.cpp	/^v_int32 Unicode::utf16SurrogatePairToCode(v_int16 high, v_int16 low){$/;"	f	class:oatpp::encoding::Unicode	typeref:typename:v_int32
utils	../oatpp/src/oatpp/core/utils/ConversionUtils.cpp	/^namespace oatpp { namespace utils { namespace conversion {$/;"	n	namespace:oatpp	file:
utils	../oatpp/src/oatpp/core/utils/ConversionUtils.hpp	/^namespace oatpp { namespace utils { namespace conversion {$/;"	n	namespace:oatpp
v_atomicCounter	../oatpp/src/oatpp/core/base/Environment.hpp	/^typedef std::atomic_int_fast64_t v_atomicCounter;$/;"	t	typeref:typename:std::atomic_int_fast64_t
v_bufferSize	../oatpp/src/oatpp/core/data/stream/StreamBufferedProxy.hpp	/^  typedef v_int32 v_bufferSize;$/;"	t	class:oatpp::data::stream::InputStreamBufferedProxy	typeref:typename:v_int32
v_bufferSize	../oatpp/src/oatpp/core/data/stream/StreamBufferedProxy.hpp	/^  typedef v_int32 v_bufferSize;$/;"	t	class:oatpp::data::stream::OutputStreamBufferedProxy	typeref:typename:v_int32
v_char8	../oatpp/src/oatpp/core/base/Environment.hpp	/^typedef unsigned char v_char8;$/;"	t	typeref:typename:unsigned char
v_counter	../oatpp/src/oatpp/core/base/Environment.hpp	/^typedef v_int64 v_counter;$/;"	t	typeref:typename:v_int64
v_float32	../oatpp/src/oatpp/core/base/Environment.hpp	/^typedef float v_float32;$/;"	t	typeref:typename:float
v_float64	../oatpp/src/oatpp/core/base/Environment.hpp	/^typedef double v_float64;$/;"	t	typeref:typename:double
v_int16	../oatpp/src/oatpp/core/base/Environment.hpp	/^typedef int16_t v_int16;$/;"	t	typeref:typename:int16_t
v_int32	../oatpp/src/oatpp/core/base/Environment.hpp	/^typedef int32_t v_int32;$/;"	t	typeref:typename:int32_t
v_int64	../oatpp/src/oatpp/core/base/Environment.hpp	/^typedef int64_t v_int64;$/;"	t	typeref:typename:int64_t
v_int8	../oatpp/src/oatpp/core/base/Environment.hpp	/^typedef int8_t v_int8;$/;"	t	typeref:typename:int8_t
v_io_handle	../oatpp/src/oatpp/core/data/IODefinitions.hpp	/^typedef int v_io_handle;$/;"	t	namespace:oatpp::data	typeref:typename:int
v_io_size	../oatpp/src/oatpp/core/data/IODefinitions.hpp	/^typedef v_int64 v_io_size;$/;"	t	namespace:oatpp::data	typeref:typename:v_int64
v_size	../oatpp/src/oatpp/core/data/stream/Stream.hpp	/^  typedef data::v_io_size v_size;$/;"	t	class:oatpp::data::stream::IOStream	typeref:typename:data::v_io_size
v_word16	../oatpp/src/oatpp/core/base/Environment.hpp	/^typedef uint16_t v_word16;$/;"	t	typeref:typename:uint16_t
v_word32	../oatpp/src/oatpp/core/base/Environment.hpp	/^typedef uint32_t v_word32;$/;"	t	typeref:typename:uint32_t
v_word64	../oatpp/src/oatpp/core/base/Environment.hpp	/^typedef uint64_t v_word64;$/;"	t	typeref:typename:uint64_t
v_word8	../oatpp/src/oatpp/core/base/Environment.hpp	/^typedef uint8_t v_word8;$/;"	t	typeref:typename:uint8_t
value	../oatpp/src/oatpp/core/collection/ListMap.hpp	/^    V           value;$/;"	m	class:oatpp::collection::ListMap::Entry	typeref:typename:V
valueType	../oatpp/src/oatpp/core/data/mapping/type/Type.hpp	/^  const Type* const valueType;$/;"	m	class:oatpp::data::mapping::type::PolymorphicWrapper	typeref:typename:const Type * const
value_type	../oatpp/src/oatpp/core/base/memory/Allocator.hpp	/^  typedef T value_type;$/;"	t	class:oatpp::base::memory::CustomPoolSharedObjectAllocator	typeref:typename:T
value_type	../oatpp/src/oatpp/core/base/memory/Allocator.hpp	/^  typedef T value_type;$/;"	t	class:oatpp::base::memory::PoolSharedObjectAllocator	typeref:typename:T
value_type	../oatpp/src/oatpp/core/base/memory/Allocator.hpp	/^  typedef T value_type;$/;"	t	class:oatpp::base::memory::SharedObjectAllocator	typeref:typename:T
value_type	../oatpp/src/oatpp/core/base/memory/Allocator.hpp	/^  typedef T value_type;$/;"	t	class:oatpp::base::memory::ThreadLocalPoolSharedObjectAllocator	typeref:typename:T
virtual_	../oatpp/src/oatpp/network/virtual_/Interface.cpp	/^namespace oatpp { namespace network { namespace virtual_ {$/;"	n	namespace:oatpp::network	file:
virtual_	../oatpp/src/oatpp/network/virtual_/Interface.hpp	/^namespace oatpp { namespace network { namespace virtual_ {$/;"	n	namespace:oatpp::network
virtual_	../oatpp/src/oatpp/network/virtual_/Pipe.cpp	/^namespace oatpp { namespace network { namespace virtual_ {$/;"	n	namespace:oatpp::network	file:
virtual_	../oatpp/src/oatpp/network/virtual_/Pipe.hpp	/^namespace oatpp { namespace network { namespace virtual_ {$/;"	n	namespace:oatpp::network
virtual_	../oatpp/src/oatpp/network/virtual_/Socket.cpp	/^namespace oatpp { namespace network { namespace virtual_ {$/;"	n	namespace:oatpp::network	file:
virtual_	../oatpp/src/oatpp/network/virtual_/Socket.hpp	/^namespace oatpp { namespace network { namespace virtual_ {$/;"	n	namespace:oatpp::network
virtual_	../oatpp/src/oatpp/network/virtual_/client/ConnectionProvider.cpp	/^namespace oatpp { namespace network { namespace virtual_ { namespace client {$/;"	n	namespace:oatpp::network	file:
virtual_	../oatpp/src/oatpp/network/virtual_/client/ConnectionProvider.hpp	/^namespace oatpp { namespace network { namespace virtual_ { namespace client {$/;"	n	namespace:oatpp::network
virtual_	../oatpp/src/oatpp/network/virtual_/server/ConnectionProvider.cpp	/^namespace oatpp { namespace network { namespace virtual_ { namespace server {$/;"	n	namespace:oatpp::network	file:
virtual_	../oatpp/src/oatpp/network/virtual_/server/ConnectionProvider.hpp	/^namespace oatpp { namespace network { namespace virtual_ { namespace server {$/;"	n	namespace:oatpp::network
virtual_	../oatpp/test/oatpp/network/virtual_/InterfaceTest.cpp	/^namespace oatpp { namespace test { namespace network { namespace virtual_ {$/;"	n	namespace:oatpp::test::network	file:
virtual_	../oatpp/test/oatpp/network/virtual_/InterfaceTest.hpp	/^namespace oatpp { namespace test { namespace network { namespace virtual_ {$/;"	n	namespace:oatpp::test::network
virtual_	../oatpp/test/oatpp/network/virtual_/PipeTest.cpp	/^namespace oatpp { namespace test { namespace network { namespace virtual_ {$/;"	n	namespace:oatpp::test::network	file:
virtual_	../oatpp/test/oatpp/network/virtual_/PipeTest.hpp	/^namespace oatpp { namespace test { namespace network { namespace virtual_ {$/;"	n	namespace:oatpp::test::network
waitAsync	../oatpp/src/oatpp/core/async/Lock.cpp	/^Action Lock::waitAsync() {$/;"	f	class:oatpp::async::Lock	typeref:typename:Action
waitEvents	../oatpp/src/oatpp/core/async/worker/IOEventWorker_epoll.cpp	/^void IOEventWorker::waitEvents() {$/;"	f	class:oatpp::async::worker::IOEventWorker	typeref:typename:void
waitEvents	../oatpp/src/oatpp/core/async/worker/IOEventWorker_kqueue.cpp	/^void IOEventWorker::waitEvents() {$/;"	f	class:oatpp::async::worker::IOEventWorker	typeref:typename:void
waitForTasks	../oatpp/src/oatpp/core/async/Processor.cpp	/^void Processor::waitForTasks() {$/;"	f	class:oatpp::async::Processor	typeref:typename:void
waitList	../oatpp/src/oatpp/core/async/Coroutine.hpp	/^    CoroutineWaitList* waitList;$/;"	m	union:oatpp::async::Action::Data	typeref:typename:CoroutineWaitList *
waitRepeat	../oatpp/src/oatpp/core/async/Coroutine.hpp	/^  Action waitRepeat(const std::chrono::duration<v_int64, std::micro>& timeout) const {$/;"	f	class:oatpp::async::Coroutine	typeref:typename:Action
waitRepeat	../oatpp/src/oatpp/core/async/Coroutine.hpp	/^  Action waitRepeat(const std::chrono::duration<v_int64, std::micro>& timeout) const {$/;"	f	class:oatpp::async::CoroutineWithResult	typeref:typename:Action
waitTasksFinished	../oatpp/src/oatpp/core/async/Executor.cpp	/^void Executor::waitTasksFinished(const std::chrono::duration<v_int64, std::micro>& timeout) {$/;"	f	class:oatpp::async::Executor	typeref:typename:void
web	../oatpp/src/oatpp-test/web/ClientServerTestRunner.hpp	/^namespace oatpp { namespace test { namespace web {$/;"	n	namespace:oatpp::test
web	../oatpp/src/oatpp/web/client/ApiClient.cpp	/^namespace oatpp { namespace web { namespace client {$/;"	n	namespace:oatpp	file:
web	../oatpp/src/oatpp/web/client/ApiClient.hpp	/^namespace oatpp { namespace web { namespace client {$/;"	n	namespace:oatpp
web	../oatpp/src/oatpp/web/client/HttpRequestExecutor.cpp	/^namespace oatpp { namespace web { namespace client {$/;"	n	namespace:oatpp	file:
web	../oatpp/src/oatpp/web/client/HttpRequestExecutor.hpp	/^namespace oatpp { namespace web { namespace client {$/;"	n	namespace:oatpp
web	../oatpp/src/oatpp/web/client/RequestExecutor.cpp	/^namespace oatpp { namespace web { namespace client {$/;"	n	namespace:oatpp	file:
web	../oatpp/src/oatpp/web/client/RequestExecutor.hpp	/^namespace oatpp { namespace web { namespace client {$/;"	n	namespace:oatpp
web	../oatpp/src/oatpp/web/protocol/CommunicationError.cpp	/^namespace oatpp { namespace web { namespace protocol {$/;"	n	namespace:oatpp	file:
web	../oatpp/src/oatpp/web/protocol/CommunicationError.hpp	/^namespace oatpp { namespace web { namespace protocol {$/;"	n	namespace:oatpp
web	../oatpp/src/oatpp/web/protocol/http/Http.cpp	/^namespace oatpp { namespace web { namespace protocol { namespace http {$/;"	n	namespace:oatpp	file:
web	../oatpp/src/oatpp/web/protocol/http/Http.hpp	/^namespace oatpp { namespace web { namespace protocol { namespace http {$/;"	n	namespace:oatpp
web	../oatpp/src/oatpp/web/protocol/http/incoming/BodyDecoder.cpp	/^namespace oatpp { namespace web { namespace protocol { namespace http { namespace incoming {$/;"	n	namespace:oatpp	file:
web	../oatpp/src/oatpp/web/protocol/http/incoming/BodyDecoder.hpp	/^namespace oatpp { namespace web { namespace protocol { namespace http { namespace incoming {$/;"	n	namespace:oatpp
web	../oatpp/src/oatpp/web/protocol/http/incoming/Request.cpp	/^namespace oatpp { namespace web { namespace protocol { namespace http { namespace incoming {$/;"	n	namespace:oatpp	file:
web	../oatpp/src/oatpp/web/protocol/http/incoming/Request.hpp	/^namespace oatpp { namespace web { namespace protocol { namespace http { namespace incoming {$/;"	n	namespace:oatpp
web	../oatpp/src/oatpp/web/protocol/http/incoming/RequestHeadersReader.cpp	/^namespace oatpp { namespace web { namespace protocol { namespace http { namespace incoming {$/;"	n	namespace:oatpp	file:
web	../oatpp/src/oatpp/web/protocol/http/incoming/RequestHeadersReader.hpp	/^namespace oatpp { namespace web { namespace protocol { namespace http { namespace incoming {$/;"	n	namespace:oatpp
web	../oatpp/src/oatpp/web/protocol/http/incoming/Response.cpp	/^namespace oatpp { namespace web { namespace protocol { namespace http { namespace incoming {$/;"	n	namespace:oatpp	file:
web	../oatpp/src/oatpp/web/protocol/http/incoming/Response.hpp	/^namespace oatpp { namespace web { namespace protocol { namespace http { namespace incoming {$/;"	n	namespace:oatpp
web	../oatpp/src/oatpp/web/protocol/http/incoming/ResponseHeadersReader.cpp	/^namespace oatpp { namespace web { namespace protocol { namespace http { namespace incoming {$/;"	n	namespace:oatpp	file:
web	../oatpp/src/oatpp/web/protocol/http/incoming/ResponseHeadersReader.hpp	/^namespace oatpp { namespace web { namespace protocol { namespace http { namespace incoming {$/;"	n	namespace:oatpp
web	../oatpp/src/oatpp/web/protocol/http/incoming/SimpleBodyDecoder.cpp	/^namespace oatpp { namespace web { namespace protocol { namespace http { namespace incoming {$/;"	n	namespace:oatpp	file:
web	../oatpp/src/oatpp/web/protocol/http/incoming/SimpleBodyDecoder.hpp	/^namespace oatpp { namespace web { namespace protocol { namespace http { namespace incoming {$/;"	n	namespace:oatpp
web	../oatpp/src/oatpp/web/protocol/http/outgoing/Body.hpp	/^namespace oatpp { namespace web { namespace protocol { namespace http { namespace outgoing {$/;"	n	namespace:oatpp
web	../oatpp/src/oatpp/web/protocol/http/outgoing/BufferBody.cpp	/^namespace oatpp { namespace web { namespace protocol { namespace http { namespace outgoing {$/;"	n	namespace:oatpp	file:
web	../oatpp/src/oatpp/web/protocol/http/outgoing/BufferBody.hpp	/^namespace oatpp { namespace web { namespace protocol { namespace http { namespace outgoing {$/;"	n	namespace:oatpp
web	../oatpp/src/oatpp/web/protocol/http/outgoing/ChunkedBufferBody.cpp	/^namespace oatpp { namespace web { namespace protocol { namespace http { namespace outgoing {$/;"	n	namespace:oatpp	file:
web	../oatpp/src/oatpp/web/protocol/http/outgoing/ChunkedBufferBody.hpp	/^namespace oatpp { namespace web { namespace protocol { namespace http { namespace outgoing {$/;"	n	namespace:oatpp
web	../oatpp/src/oatpp/web/protocol/http/outgoing/CommunicationUtils.cpp	/^namespace oatpp { namespace web { namespace protocol { namespace http { namespace outgoing {$/;"	n	namespace:oatpp	file:
web	../oatpp/src/oatpp/web/protocol/http/outgoing/CommunicationUtils.hpp	/^namespace oatpp { namespace web { namespace protocol { namespace http { namespace outgoing {$/;"	n	namespace:oatpp
web	../oatpp/src/oatpp/web/protocol/http/outgoing/DtoBody.cpp	/^namespace oatpp { namespace web { namespace protocol { namespace http { namespace outgoing {$/;"	n	namespace:oatpp	file:
web	../oatpp/src/oatpp/web/protocol/http/outgoing/DtoBody.hpp	/^namespace oatpp { namespace web { namespace protocol { namespace http { namespace outgoing {$/;"	n	namespace:oatpp
web	../oatpp/src/oatpp/web/protocol/http/outgoing/Request.cpp	/^namespace oatpp { namespace web { namespace protocol { namespace http { namespace outgoing {$/;"	n	namespace:oatpp	file:
web	../oatpp/src/oatpp/web/protocol/http/outgoing/Request.hpp	/^namespace oatpp { namespace web { namespace protocol { namespace http { namespace outgoing {$/;"	n	namespace:oatpp
web	../oatpp/src/oatpp/web/protocol/http/outgoing/Response.cpp	/^namespace oatpp { namespace web { namespace protocol { namespace http { namespace outgoing {$/;"	n	namespace:oatpp	file:
web	../oatpp/src/oatpp/web/protocol/http/outgoing/Response.hpp	/^namespace oatpp { namespace web { namespace protocol { namespace http { namespace outgoing {$/;"	n	namespace:oatpp
web	../oatpp/src/oatpp/web/protocol/http/outgoing/ResponseFactory.cpp	/^namespace oatpp { namespace web { namespace protocol { namespace http { namespace outgoing {$/;"	n	namespace:oatpp	file:
web	../oatpp/src/oatpp/web/protocol/http/outgoing/ResponseFactory.hpp	/^namespace oatpp { namespace web { namespace protocol { namespace http { namespace outgoing {$/;"	n	namespace:oatpp
web	../oatpp/src/oatpp/web/server/AsyncHttpConnectionHandler.cpp	/^namespace oatpp { namespace web { namespace server {$/;"	n	namespace:oatpp	file:
web	../oatpp/src/oatpp/web/server/AsyncHttpConnectionHandler.hpp	/^namespace oatpp { namespace web { namespace server {$/;"	n	namespace:oatpp
web	../oatpp/src/oatpp/web/server/HttpConnectionHandler.cpp	/^namespace oatpp { namespace web { namespace server {$/;"	n	namespace:oatpp	file:
web	../oatpp/src/oatpp/web/server/HttpConnectionHandler.hpp	/^namespace oatpp { namespace web { namespace server {$/;"	n	namespace:oatpp
web	../oatpp/src/oatpp/web/server/HttpProcessor.cpp	/^namespace oatpp { namespace web { namespace server {$/;"	n	namespace:oatpp	file:
web	../oatpp/src/oatpp/web/server/HttpProcessor.hpp	/^namespace oatpp { namespace web { namespace server {$/;"	n	namespace:oatpp
web	../oatpp/src/oatpp/web/server/HttpRequestHandler.hpp	/^namespace oatpp { namespace web { namespace server {$/;"	n	namespace:oatpp
web	../oatpp/src/oatpp/web/server/HttpRouter.cpp	/^namespace oatpp { namespace web { namespace server {$/;"	n	namespace:oatpp	file:
web	../oatpp/src/oatpp/web/server/HttpRouter.hpp	/^namespace oatpp { namespace web { namespace server {$/;"	n	namespace:oatpp
web	../oatpp/src/oatpp/web/server/api/ApiController.cpp	/^namespace oatpp { namespace web { namespace server { namespace api {$/;"	n	namespace:oatpp	file:
web	../oatpp/src/oatpp/web/server/api/ApiController.hpp	/^namespace oatpp { namespace web { namespace server { namespace api {$/;"	n	namespace:oatpp
web	../oatpp/src/oatpp/web/server/api/Endpoint.cpp	/^namespace oatpp { namespace web { namespace server { namespace api {$/;"	n	namespace:oatpp	file:
web	../oatpp/src/oatpp/web/server/api/Endpoint.hpp	/^namespace oatpp { namespace web { namespace server { namespace api {$/;"	n	namespace:oatpp
web	../oatpp/src/oatpp/web/server/handler/ErrorHandler.cpp	/^namespace oatpp { namespace web { namespace server { namespace handler {$/;"	n	namespace:oatpp	file:
web	../oatpp/src/oatpp/web/server/handler/ErrorHandler.hpp	/^namespace oatpp { namespace web { namespace server { namespace handler {$/;"	n	namespace:oatpp
web	../oatpp/src/oatpp/web/server/handler/Interceptor.hpp	/^namespace oatpp { namespace web { namespace server { namespace handler {$/;"	n	namespace:oatpp
web	../oatpp/src/oatpp/web/url/mapping/Pattern.cpp	/^namespace oatpp { namespace web { namespace url { namespace mapping {$/;"	n	namespace:oatpp	file:
web	../oatpp/src/oatpp/web/url/mapping/Pattern.hpp	/^namespace oatpp { namespace web { namespace url { namespace mapping {$/;"	n	namespace:oatpp
web	../oatpp/src/oatpp/web/url/mapping/Router.hpp	/^namespace oatpp { namespace web { namespace url { namespace mapping {$/;"	n	namespace:oatpp
web	../oatpp/test/oatpp/web/FullAsyncClientTest.cpp	/^namespace oatpp { namespace test { namespace web {$/;"	n	namespace:oatpp::test	file:
web	../oatpp/test/oatpp/web/FullAsyncClientTest.hpp	/^namespace oatpp { namespace test { namespace web {$/;"	n	namespace:oatpp::test
web	../oatpp/test/oatpp/web/FullAsyncTest.cpp	/^namespace oatpp { namespace test { namespace web {$/;"	n	namespace:oatpp::test	file:
web	../oatpp/test/oatpp/web/FullAsyncTest.hpp	/^namespace oatpp { namespace test { namespace web {$/;"	n	namespace:oatpp::test
web	../oatpp/test/oatpp/web/FullTest.cpp	/^namespace oatpp { namespace test { namespace web {$/;"	n	namespace:oatpp::test	file:
web	../oatpp/test/oatpp/web/FullTest.hpp	/^namespace oatpp { namespace test { namespace web {$/;"	n	namespace:oatpp::test
web	../oatpp/test/oatpp/web/app/Client.hpp	/^namespace oatpp { namespace test { namespace web { namespace app {$/;"	n	namespace:oatpp::test
web	../oatpp/test/oatpp/web/app/Controller.hpp	/^namespace oatpp { namespace test { namespace web { namespace app {$/;"	n	namespace:oatpp::test
web	../oatpp/test/oatpp/web/app/ControllerAsync.hpp	/^namespace oatpp { namespace test { namespace web { namespace app {$/;"	n	namespace:oatpp::test
web	../oatpp/test/oatpp/web/app/DTOs.hpp	/^namespace oatpp { namespace test { namespace web { namespace app {$/;"	n	namespace:oatpp::test
web	../oatpp/test/oatpp/web/server/api/ApiControllerTest.cpp	/^namespace oatpp { namespace test { namespace web { namespace server { namespace api {$/;"	n	namespace:oatpp::test	file:
web	../oatpp/test/oatpp/web/server/api/ApiControllerTest.hpp	/^namespace oatpp { namespace test { namespace web { namespace server { namespace api {$/;"	n	namespace:oatpp::test
what	../oatpp/src/oatpp/core/async/Error.cpp	/^const char* Error::what() const {$/;"	f	class:oatpp::async::Error	typeref:typename:const char *
worker	../oatpp/src/oatpp/core/async/Coroutine.hpp	/^namespace worker {$/;"	n	namespace:oatpp::async
worker	../oatpp/src/oatpp/core/async/worker/IOEventWorker.hpp	/^namespace oatpp { namespace async { namespace worker {$/;"	n	namespace:oatpp::async
worker	../oatpp/src/oatpp/core/async/worker/IOEventWorker_common.cpp	/^namespace oatpp { namespace async { namespace worker {$/;"	n	namespace:oatpp::async	file:
worker	../oatpp/src/oatpp/core/async/worker/IOEventWorker_epoll.cpp	/^namespace oatpp { namespace async { namespace worker {$/;"	n	namespace:oatpp::async	file:
worker	../oatpp/src/oatpp/core/async/worker/IOEventWorker_kqueue.cpp	/^namespace oatpp { namespace async { namespace worker {$/;"	n	namespace:oatpp::async	file:
worker	../oatpp/src/oatpp/core/async/worker/IOWorker.cpp	/^namespace oatpp { namespace async { namespace worker {$/;"	n	namespace:oatpp::async	file:
worker	../oatpp/src/oatpp/core/async/worker/IOWorker.hpp	/^namespace oatpp { namespace async { namespace worker {$/;"	n	namespace:oatpp::async
worker	../oatpp/src/oatpp/core/async/worker/TimerWorker.cpp	/^namespace oatpp { namespace async { namespace worker {$/;"	n	namespace:oatpp::async	file:
worker	../oatpp/src/oatpp/core/async/worker/TimerWorker.hpp	/^namespace oatpp { namespace async { namespace worker {$/;"	n	namespace:oatpp::async
worker	../oatpp/src/oatpp/core/async/worker/Worker.cpp	/^namespace oatpp { namespace async { namespace worker {$/;"	n	namespace:oatpp::async	file:
worker	../oatpp/src/oatpp/core/async/worker/Worker.hpp	/^namespace oatpp { namespace async { namespace worker {$/;"	n	namespace:oatpp::async
write	../oatpp/src/oatpp/core/data/buffer/FIFOBuffer.cpp	/^data::v_io_size FIFOBuffer::write(const void *data, data::v_io_size count) {$/;"	f	class:oatpp::data::buffer::FIFOBuffer	typeref:typename:data::v_io_size
write	../oatpp/src/oatpp/core/data/buffer/FIFOBuffer.cpp	/^data::v_io_size SynchronizedFIFOBuffer::write(const void *data, data::v_io_size count) {$/;"	f	class:oatpp::data::buffer::SynchronizedFIFOBuffer	typeref:typename:data::v_io_size
write	../oatpp/src/oatpp/core/data/stream/ChunkedBuffer.cpp	/^data::v_io_size ChunkedBuffer::write(const void *data, data::v_io_size count){$/;"	f	class:oatpp::data::stream::ChunkedBuffer	typeref:typename:data::v_io_size
write	../oatpp/src/oatpp/core/data/stream/Stream.hpp	/^  data::v_io_size write(const char* data){$/;"	f	class:oatpp::data::stream::OutputStream	typeref:typename:data::v_io_size
write	../oatpp/src/oatpp/core/data/stream/Stream.hpp	/^  data::v_io_size write(const oatpp::String& str){$/;"	f	class:oatpp::data::stream::OutputStream	typeref:typename:data::v_io_size
write	../oatpp/src/oatpp/core/data/stream/Stream.hpp	/^  data::v_io_size write(const void *data, data::v_io_size count) override {$/;"	f	class:oatpp::data::stream::CompoundIOStream	typeref:typename:data::v_io_size
write	../oatpp/src/oatpp/core/data/stream/StreamBufferedProxy.cpp	/^data::v_io_size OutputStreamBufferedProxy::write(const void *data, data::v_io_size count) {$/;"	f	class:oatpp::data::stream::OutputStreamBufferedProxy	typeref:typename:data::v_io_size
write	../oatpp/src/oatpp/network/Connection.cpp	/^data::v_io_size Connection::write(const void *buff, data::v_io_size count){$/;"	f	class:oatpp::network::Connection	typeref:typename:data::v_io_size
write	../oatpp/src/oatpp/network/virtual_/Pipe.cpp	/^data::v_io_size Pipe::Writer::write(const void *data, data::v_io_size count) {$/;"	f	class:oatpp::network::virtual_::Pipe::Writer	typeref:typename:data::v_io_size
write	../oatpp/src/oatpp/network/virtual_/Socket.cpp	/^data::v_io_size Socket::write(const void *data, data::v_io_size count) {$/;"	f	class:oatpp::network::virtual_::Socket	typeref:typename:data::v_io_size
write	../oatpp/src/oatpp/parser/json/mapping/ObjectMapper.cpp	/^void ObjectMapper::write(const std::shared_ptr<oatpp::data::stream::ConsistentOutputStream>& str/;"	f	class:oatpp::parser::json::mapping::ObjectMapper	typeref:typename:void
writeAsString	../oatpp/src/oatpp/core/data/stream/Stream.cpp	/^data::v_io_size ConsistentOutputStream::writeAsString(bool value) {$/;"	f	class:oatpp::data::stream::ConsistentOutputStream	typeref:typename:data::v_io_size
writeAsString	../oatpp/src/oatpp/core/data/stream/Stream.cpp	/^data::v_io_size ConsistentOutputStream::writeAsString(v_float32 value){$/;"	f	class:oatpp::data::stream::ConsistentOutputStream	typeref:typename:data::v_io_size
writeAsString	../oatpp/src/oatpp/core/data/stream/Stream.cpp	/^data::v_io_size ConsistentOutputStream::writeAsString(v_float64 value){$/;"	f	class:oatpp::data::stream::ConsistentOutputStream	typeref:typename:data::v_io_size
writeAsString	../oatpp/src/oatpp/core/data/stream/Stream.cpp	/^data::v_io_size ConsistentOutputStream::writeAsString(v_int32 value){$/;"	f	class:oatpp::data::stream::ConsistentOutputStream	typeref:typename:data::v_io_size
writeAsString	../oatpp/src/oatpp/core/data/stream/Stream.cpp	/^data::v_io_size ConsistentOutputStream::writeAsString(v_int64 value){$/;"	f	class:oatpp::data::stream::ConsistentOutputStream	typeref:typename:data::v_io_size
writeBinaryInt	../oatpp/test/oatpp/encoding/UnicodeTest.cpp	/^void writeBinaryInt(v_int32 value){$/;"	f	namespace:oatpp::test::encoding::__anonc865bd330110	typeref:typename:void
writeBody	../oatpp/src/oatpp/web/protocol/http/outgoing/Request.cpp	/^    Action writeBody() {$/;"	f	class:oatpp::web::protocol::http::outgoing::Request::sendAsync::SendAsyncCoroutine	typeref:typename:Action	file:
writeBody	../oatpp/src/oatpp/web/protocol/http/outgoing/Response.cpp	/^    Action writeBody() {$/;"	f	class:oatpp::web::protocol::http::outgoing::Response::sendAsync::SendAsyncCoroutine	typeref:typename:Action	file:
writeChar	../oatpp/src/oatpp/core/data/stream/Stream.hpp	/^  data::v_io_size writeChar(v_char8 c){$/;"	f	class:oatpp::data::stream::OutputStream	typeref:typename:data::v_io_size
writeChar	../oatpp/test/oatpp/core/async/LockTest.cpp	/^  void writeChar(char c) {$/;"	f	class:oatpp::test::async::__anonf33831840110::Buff	typeref:typename:void	file:
writeChunkData	../oatpp/src/oatpp/web/protocol/http/outgoing/ChunkedBufferBody.cpp	/^async::Action ChunkedBufferBody::WriteToStreamCoroutine::writeChunkData() {$/;"	f	class:oatpp::web::protocol::http::outgoing::ChunkedBufferBody::WriteToStreamCoroutine	typeref:typename:async::Action
writeChunkSeparator	../oatpp/src/oatpp/web/protocol/http/outgoing/ChunkedBufferBody.cpp	/^async::Action ChunkedBufferBody::WriteToStreamCoroutine::writeChunkSeparator() {$/;"	f	class:oatpp::web::protocol::http::outgoing::ChunkedBufferBody::WriteToStreamCoroutine	typeref:typename:async::Action
writeChunkSize	../oatpp/src/oatpp/web/protocol/http/outgoing/ChunkedBufferBody.cpp	/^async::Action ChunkedBufferBody::WriteToStreamCoroutine::writeChunkSize() {$/;"	f	class:oatpp::web::protocol::http::outgoing::ChunkedBufferBody::WriteToStreamCoroutine	typeref:typename:async::Action
writeCurrData	../oatpp/src/oatpp/core/data/stream/ChunkedBuffer.cpp	/^    Action writeCurrData() {$/;"	f	class:oatpp::data::stream::ChunkedBuffer::flushToStreamAsync::FlushCoroutine	typeref:typename:Action	file:
writeCurrData	../oatpp/src/oatpp/web/protocol/http/outgoing/ChunkedBufferBody.cpp	/^async::Action ChunkedBufferBody::WriteToStreamCoroutine::writeCurrData() {$/;"	f	class:oatpp::web::protocol::http::outgoing::ChunkedBufferBody::WriteToStreamCoroutine	typeref:typename:async::Action
writeEndOfChunks	../oatpp/src/oatpp/web/protocol/http/outgoing/ChunkedBufferBody.cpp	/^async::Action ChunkedBufferBody::WriteToStreamCoroutine::writeEndOfChunks() {$/;"	f	class:oatpp::web::protocol::http::outgoing::ChunkedBufferBody::WriteToStreamCoroutine	typeref:typename:async::Action
writeExactSizeData	../oatpp/src/oatpp/core/data/stream/Stream.cpp	/^oatpp::data::v_io_size writeExactSizeData(oatpp::data::stream::OutputStream* stream, const void*/;"	f	namespace:oatpp::data::stream	typeref:typename:oatpp::data::v_io_size
writeExactSizeDataAsyncInline	../oatpp/src/oatpp/core/data/stream/Stream.cpp	/^oatpp::async::Action writeExactSizeDataAsyncInline(oatpp::async::AbstractCoroutine* coroutine,$/;"	f	namespace:oatpp::data::stream	typeref:typename:oatpp::async::Action
writeFieldsMap	../oatpp/src/oatpp/parser/json/mapping/Serializer.cpp	/^void Serializer::writeFieldsMap(oatpp::data::stream::ConsistentOutputStream* stream, const Abstr/;"	f	class:oatpp::parser::json::mapping::Serializer	typeref:typename:void
writeHeaders	../oatpp/src/oatpp/web/protocol/http/outgoing/Request.cpp	/^    Action writeHeaders() {$/;"	f	class:oatpp::web::protocol::http::outgoing::Request::sendAsync::SendAsyncCoroutine	typeref:typename:Action	file:
writeHeaders	../oatpp/src/oatpp/web/protocol/http/outgoing/Response.cpp	/^    Action writeHeaders() {$/;"	f	class:oatpp::web::protocol::http::outgoing::Response::sendAsync::SendAsyncCoroutine	typeref:typename:Action	file:
writeList	../oatpp/src/oatpp/parser/json/mapping/Serializer.cpp	/^void Serializer::writeList(oatpp::data::stream::ConsistentOutputStream* stream, const AbstractLi/;"	f	class:oatpp::parser::json::mapping::Serializer	typeref:typename:void
writeObject	../oatpp/src/oatpp/parser/json/mapping/Serializer.cpp	/^void Serializer::writeObject(oatpp::data::stream::ConsistentOutputStream* stream, const Polymorp/;"	f	class:oatpp::parser::json::mapping::Serializer	typeref:typename:void
writeSimpleData	../oatpp/src/oatpp/parser/json/mapping/Serializer.hpp	/^  static void writeSimpleData(oatpp::data::stream::ConsistentOutputStream* stream, const Polymor/;"	f	class:oatpp::parser::json::mapping::Serializer	typeref:typename:void
writeString	../oatpp/src/oatpp/parser/json/mapping/Serializer.cpp	/^void Serializer::writeString(oatpp::data::stream::ConsistentOutputStream* stream, const char* da/;"	f	class:oatpp::parser::json::mapping::Serializer	typeref:typename:void
writeString	../oatpp/src/oatpp/parser/json/mapping/Serializer.cpp	/^void Serializer::writeString(oatpp::data::stream::ConsistentOutputStream* stream, p_char8 data, /;"	f	class:oatpp::parser::json::mapping::Serializer	typeref:typename:void
writeSymbol	../oatpp/test/oatpp/core/async/LockTest.cpp	/^  Action writeSymbol() {$/;"	f	class:oatpp::test::async::__anonf33831840110::TestCoroutine	typeref:typename:Action	file:
writeToEntry	../oatpp/src/oatpp/core/data/stream/ChunkedBuffer.cpp	/^data::v_io_size ChunkedBuffer::writeToEntry(ChunkEntry* entry,$/;"	f	class:oatpp::data::stream::ChunkedBuffer	typeref:typename:data::v_io_size
writeToEntryFrom	../oatpp/src/oatpp/core/data/stream/ChunkedBuffer.cpp	/^data::v_io_size ChunkedBuffer::writeToEntryFrom(ChunkEntry* entry,$/;"	f	class:oatpp::data::stream::ChunkedBuffer	typeref:typename:data::v_io_size
writeToStream	../oatpp/src/oatpp/web/protocol/http/outgoing/BufferBody.cpp	/^void BufferBody::writeToStream(const std::shared_ptr<OutputStream>& stream) noexcept {$/;"	f	class:oatpp::web::protocol::http::outgoing::BufferBody	typeref:typename:void
writeToStream	../oatpp/src/oatpp/web/protocol/http/outgoing/ChunkedBufferBody.cpp	/^void ChunkedBufferBody::writeToStream(const std::shared_ptr<OutputStream>& stream) noexcept {$/;"	f	class:oatpp::web::protocol::http::outgoing::ChunkedBufferBody	typeref:typename:void
writeToStreamAsync	../oatpp/src/oatpp/web/protocol/http/outgoing/BufferBody.cpp	/^oatpp::async::CoroutineStarter BufferBody::writeToStreamAsync(const std::shared_ptr<OutputStream/;"	f	class:oatpp::web::protocol::http::outgoing::BufferBody	typeref:typename:oatpp::async::CoroutineStarter
writeToStreamAsync	../oatpp/src/oatpp/web/protocol/http/outgoing/ChunkedBufferBody.cpp	/^oatpp::async::CoroutineStarter ChunkedBufferBody::writeToStreamAsync(const std::shared_ptr<Outpu/;"	f	class:oatpp::web::protocol::http::outgoing::ChunkedBufferBody	typeref:typename:oatpp::async::CoroutineStarter
writeToString	../oatpp/src/oatpp/core/data/mapping/ObjectMapper.cpp	/^oatpp::String ObjectMapper::writeToString(const type::AbstractObjectWrapper& variant) const {$/;"	f	class:oatpp::data::mapping::ObjectMapper	typeref:typename:oatpp::String
writeValue	../oatpp/src/oatpp/parser/json/mapping/Serializer.cpp	/^void Serializer::writeValue(oatpp::data::stream::ConsistentOutputStream* stream, const AbstractO/;"	f	class:oatpp::parser::json::mapping::Serializer	typeref:typename:void
writeWord16	../oatpp/src/oatpp/encoding/Hex.cpp	/^void Hex::writeWord16(v_word16 value, p_char8 buffer){$/;"	f	class:oatpp::encoding::Hex	typeref:typename:void
writeWord32	../oatpp/src/oatpp/encoding/Hex.cpp	/^void Hex::writeWord32(v_word32 value, p_char8 buffer){$/;"	f	class:oatpp::encoding::Hex	typeref:typename:void
yieldTo	../oatpp/src/oatpp/core/async/Coroutine.hpp	/^  Action yieldTo(Function function) const {$/;"	f	class:oatpp::async::Coroutine	typeref:typename:Action
yieldTo	../oatpp/src/oatpp/core/async/Coroutine.hpp	/^  Action yieldTo(Function function) const {$/;"	f	class:oatpp::async::CoroutineWithResult	typeref:typename:Action
~Action	../oatpp/src/oatpp/core/async/Coroutine.cpp	/^Action::~Action() {$/;"	f	class:oatpp::async::Action
~Bench	../oatpp/src/oatpp/core/base/memory/MemoryPool.hpp	/^  ~Bench(){$/;"	f	class:oatpp::base::memory::Bench
~Caret	../oatpp/src/oatpp/core/parser/Caret.cpp	/^  Caret::~Caret(){$/;"	f	class:oatpp::parser::Caret
~ChunkEntry	../oatpp/src/oatpp/core/data/stream/ChunkedBuffer.hpp	/^    ~ChunkEntry(){$/;"	f	class:oatpp::data::stream::ChunkedBuffer::ChunkEntry
~ChunkedBuffer	../oatpp/src/oatpp/core/data/stream/ChunkedBuffer.cpp	/^ChunkedBuffer::~ChunkedBuffer() {$/;"	f	class:oatpp::data::stream::ChunkedBuffer
~Component	../oatpp/src/oatpp/core/base/Environment.hpp	/^    ~Component() {$/;"	f	class:oatpp::base::Environment::Component
~ConnectCoroutine	../oatpp/src/oatpp/network/client/SimpleTCPConnectionProvider.cpp	/^    ~ConnectCoroutine() {$/;"	f	class:oatpp::network::client::SimpleTCPConnectionProvider::getConnectionAsync::ConnectCoroutine	file:
~Connection	../oatpp/src/oatpp/network/Connection.cpp	/^Connection::~Connection(){$/;"	f	class:oatpp::network::Connection
~ConnectionHandle	../oatpp/src/oatpp/web/client/RequestExecutor.hpp	/^    virtual ~ConnectionHandle() {}$/;"	f	class:oatpp::web::client::RequestExecutor::ConnectionHandle
~CoroutineStarter	../oatpp/src/oatpp/core/async/Coroutine.cpp	/^CoroutineStarter::~CoroutineStarter() {$/;"	f	class:oatpp::async::CoroutineStarter
~CoroutineWaitList	../oatpp/src/oatpp/core/async/CoroutineWaitList.cpp	/^CoroutineWaitList::~CoroutineWaitList() {$/;"	f	class:oatpp::async::CoroutineWaitList
~Countable	../oatpp/src/oatpp/core/base/Countable.cpp	/^Countable::~Countable(){$/;"	f	class:oatpp::base::Countable
~Entry	../oatpp/src/oatpp/core/collection/ListMap.hpp	/^    ~Entry(){$/;"	f	class:oatpp::collection::ListMap::Entry
~Executor	../oatpp/src/oatpp/core/async/Executor.cpp	/^Executor::~Executor() {$/;"	f	class:oatpp::async::Executor
~FastQueue	../oatpp/src/oatpp/core/collection/FastQueue.hpp	/^  ~FastQueue(){$/;"	f	class:oatpp::collection::FastQueue
~IOBuffer	../oatpp/src/oatpp/core/data/buffer/IOBuffer.cpp	/^IOBuffer::~IOBuffer() {$/;"	f	class:oatpp::data::buffer::IOBuffer
~IOEventWorker	../oatpp/src/oatpp/core/async/worker/IOEventWorker_common.cpp	/^IOEventWorker::~IOEventWorker() {$/;"	f	class:oatpp::async::worker::IOEventWorker
~IOEventWorkerForeman	../oatpp/src/oatpp/core/async/worker/IOEventWorker_common.cpp	/^IOEventWorkerForeman::~IOEventWorkerForeman() {$/;"	f	class:oatpp::async::worker::IOEventWorkerForeman
~LinkedList	../oatpp/src/oatpp/core/collection/LinkedList.hpp	/^  virtual ~LinkedList() {$/;"	f	class:oatpp::collection::LinkedList
~LinkedListNode	../oatpp/src/oatpp/core/collection/LinkedList.hpp	/^    ~LinkedListNode(){$/;"	f	class:oatpp::collection::LinkedList::LinkedListNode
~ListMap	../oatpp/src/oatpp/core/collection/ListMap.hpp	/^  ~ListMap() override {$/;"	f	class:oatpp::collection::ListMap
~LockGuard	../oatpp/src/oatpp/core/async/Lock.cpp	/^LockGuard::~LockGuard() {$/;"	f	class:oatpp::async::LockGuard
~MemoryPool	../oatpp/src/oatpp/core/base/memory/MemoryPool.cpp	/^MemoryPool::~MemoryPool() {$/;"	f	class:oatpp::base::memory::MemoryPool
~PerformanceChecker	../oatpp/src/oatpp-test/Checker.cpp	/^PerformanceChecker::~PerformanceChecker(){$/;"	f	class:oatpp::test::PerformanceChecker
~Pipe	../oatpp/src/oatpp/network/virtual_/Pipe.cpp	/^Pipe::~Pipe() {$/;"	f	class:oatpp::network::virtual_::Pipe
~SimpleTCPConnectionProvider	../oatpp/src/oatpp/network/server/SimpleTCPConnectionProvider.cpp	/^SimpleTCPConnectionProvider::~SimpleTCPConnectionProvider() {$/;"	f	class:oatpp::network::server::SimpleTCPConnectionProvider
~Socket	../oatpp/src/oatpp/network/virtual_/Socket.cpp	/^Socket::~Socket() {$/;"	f	class:oatpp::network::virtual_::Socket
~StarterForResult	../oatpp/src/oatpp/core/async/Coroutine.hpp	/^    ~StarterForResult() {$/;"	f	class:oatpp::async::AbstractCoroutineWithResult::StarterForResult
~StateSaveGuard	../oatpp/src/oatpp/core/parser/Caret.cpp	/^    Caret::StateSaveGuard::~StateSaveGuard() {$/;"	f	class:oatpp::parser::Caret::StateSaveGuard
~StrBuffer	../oatpp/src/oatpp/core/base/StrBuffer.cpp	/^StrBuffer::~StrBuffer() {$/;"	f	class:oatpp::base::StrBuffer
~TaskSubmission	../oatpp/src/oatpp/core/async/Processor.hpp	/^    virtual ~TaskSubmission() {};$/;"	f	class:oatpp::async::Processor::TaskSubmission
~ThreadDistributedMemoryPool	../oatpp/src/oatpp/core/base/memory/MemoryPool.cpp	/^ThreadDistributedMemoryPool::~ThreadDistributedMemoryPool(){$/;"	f	class:oatpp::base::memory::ThreadDistributedMemoryPool
~ThreadLocalObjectsChecker	../oatpp/src/oatpp-test/Checker.cpp	/^ThreadLocalObjectsChecker::~ThreadLocalObjectsChecker(){$/;"	f	class:oatpp::test::ThreadLocalObjectsChecker
